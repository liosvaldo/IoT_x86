{
    "info": {
        "added": 1628114310.405489, 
        "started": 1628118435.586403, 
        "duration": 642, 
        "ended": 1628119077.721712, 
        "owner": null, 
        "score": 0.1, 
        "id": 2344719, 
        "category": "file", 
        "git": {
            "head": "0e0d906265199c4f8a2a88928e5f6121c2e5ab54", 
            "fetch_head": "0e0d906265199c4f8a2a88928e5f6121c2e5ab54"
        }, 
        "monitor": "2deb9ccd75d5a7a3fe05b2625b03a8639d6ee36b", 
        "package": "elf", 
        "route": "internet", 
        "custom": null, 
        "machine": {
            "status": "stopped", 
            "name": "win7x6422", 
            "label": "win7x6422", 
            "platform": "windows", 
            "manager": "VirtualBox", 
            "started_on": "2021-08-04 23:07:47", 
            "shutdown_on": "2021-08-04 23:14:12"
        }, 
        "platform": "windows", 
        "version": "2.0.7", 
        "options": "procmemdump=yes,route=internet"
    }, 
    "signatures": [
        {
            "families": [], 
            "description": "Yara rules detected for file", 
            "severity": 1, 
            "ttp": {}, 
            "markcount": 2, 
            "references": [], 
            "marks": [
                {
                    "type": "generic", 
                    "description": "Contains an embedded PE32 file", 
                    "rule": "embedded_pe"
                }, 
                {
                    "type": "generic", 
                    "description": "SpyEye X.Y memory", 
                    "rule": "spyeye"
                }
            ], 
            "name": "file_yara"
        }
    ], 
    "target": {
        "category": "file", 
        "file": {
            "mimetype": "application/x-sharedlib", 
            "yara": [
                {
                    "meta": {
                        "description": "Contains an embedded PE32 file", 
                        "author": "nex"
                    }, 
                    "name": "embedded_pe", 
                    "offsets": {
                        "b": [
                            [
                                447316, 
                                0
                            ], 
                            [
                                447468, 
                                0
                            ]
                        ]
                    }, 
                    "strings": [
                        "VGhpcyBwcm9ncmFt"
                    ]
                }, 
                {
                    "meta": {
                        "version": "1.0", 
                        "description": "SpyEye X.Y memory", 
                        "author": "Jean-Philippe Teissier / @Jipe_", 
                        "date": "2012-05-23", 
                        "filetype": "memory"
                    }, 
                    "name": "spyeye", 
                    "offsets": {
                        "f": [
                            [
                                1592006, 
                                0
                            ], 
                            [
                                1592157, 
                                0
                            ], 
                            [
                                1596287, 
                                0
                            ], 
                            [
                                1596438, 
                                0
                            ], 
                            [
                                1602280, 
                                0
                            ], 
                            [
                                1602431, 
                                0
                            ], 
                            [
                                1602586, 
                                0
                            ], 
                            [
                                1611730, 
                                0
                            ], 
                            [
                                1611881, 
                                0
                            ], 
                            [
                                1612036, 
                                0
                            ], 
                            [
                                1621182, 
                                0
                            ], 
                            [
                                1621333, 
                                0
                            ], 
                            [
                                1621488, 
                                0
                            ], 
                            [
                                1630692, 
                                0
                            ], 
                            [
                                1630843, 
                                0
                            ], 
                            [
                                1631036, 
                                0
                            ], 
                            [
                                1641598, 
                                0
                            ], 
                            [
                                1641749, 
                                0
                            ], 
                            [
                                1645630, 
                                0
                            ], 
                            [
                                1645781, 
                                0
                            ], 
                            [
                                1651338, 
                                0
                            ], 
                            [
                                1651489, 
                                0
                            ], 
                            [
                                1651644, 
                                0
                            ], 
                            [
                                1660472, 
                                0
                            ], 
                            [
                                1660623, 
                                0
                            ], 
                            [
                                1660778, 
                                0
                            ], 
                            [
                                1669608, 
                                0
                            ], 
                            [
                                1669759, 
                                0
                            ], 
                            [
                                1669914, 
                                0
                            ], 
                            [
                                1678802, 
                                0
                            ], 
                            [
                                1678953, 
                                0
                            ], 
                            [
                                1679146, 
                                0
                            ]
                        ]
                    }, 
                    "strings": [
                        "ZGF0YV9lbmQ="
                    ]
                }
            ], 
            "sha1": "ba1cda4aaf03fc6fef7f2fa818677aa25b1022ae", 
            "name": "i686-linux-gnu-ld.bfd", 
            "type": "ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=b83bbcb7c5b622f95e69f678f27c9e52e6f90630, stripped", 
            "sha256": "167c0eedb7eaac69cc93681160bfd1986bb1b7b0833bb09ad6acfda39662a002", 
            "urls": [
                "http://www.sourceware.org/bugzilla/"
            ], 
            "crc32": "4F85BDE9", 
            "path": "/srv/cuckoo/cwd/storage/binaries/167c0eedb7eaac69cc93681160bfd1986bb1b7b0833bb09ad6acfda39662a002", 
            "ssdeep": "24576:cUooNEvgNV1nWFM22iscpksFBLuMANhP/:looNE4NV1nWFM22isc+snuMANhP", 
            "size": 1828672, 
            "sha512": "b5269b2d3c69954a6620656b6bd17062dc1e2971c812d4214ba8f656acb7057bfcbb7ce276184fbe0bd60c8e07bb449e7c350a73d12a900f5dfadc1688a86e12", 
            "md5": "70c596164e052024ebe355bb6c887351"
        }, 
        "custom": null
    }, 
    "irma": {
        "status": 0, 
        "probes_finished": 16, 
        "scan_id": "50518a6e-f51f-41d5-9630-c3195b15547f", 
        "parent_file_sha256": null, 
        "name": "167c0eedb7eaac69cc93681160bfd1986bb1b7b0833bb09ad6acfda39662a002", 
        "scan_date": 1628108289, 
        "other_results": [], 
        "submitter": "cli", 
        "probes_total": 16, 
        "file_infos": {
            "mimetype": "ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV)", 
            "sha1": "ba1cda4aaf03fc6fef7f2fa818677aa25b1022ae", 
            "tags": [], 
            "timestamp_first_scan": 1626889250.62, 
            "timestamp_last_scan": 1628108316.08, 
            "sha256": "167c0eedb7eaac69cc93681160bfd1986bb1b7b0833bb09ad6acfda39662a002", 
            "md5": "70c596164e052024ebe355bb6c887351", 
            "size": 1828672
        }, 
        "probe_results": {
            "antivirus": {
                "Avast Core Security (Linux)": {
                    "status": 0, 
                    "duration": 0.02, 
                    "version": "3.0.3", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "F-Secure Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 0.02, 
                    "version": "11.10", 
                    "results": null, 
                    "virus_database_version": "2021-07-22_04"
                }, 
                "Windows Defender (Windows)": {
                    "status": 0, 
                    "duration": 0.06, 
                    "version": "1.1.18300.4", 
                    "results": null, 
                    "virus_database_version": "1.343.1173.0"
                }, 
                "Comodo Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 4.75, 
                    "version": "1.1.268025.1", 
                    "results": null, 
                    "virus_database_version": "2021-05-05"
                }, 
                "ESET NOD32 Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 3.88, 
                    "version": "4.0.96", 
                    "results": null, 
                    "virus_database_version": "6087dbf0-1e845 (2021-04-27)"
                }, 
                "GData (Windows)": {
                    "status": 0, 
                    "duration": 0.22, 
                    "version": "5.5.20197.1358", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Forticlient (Linux)": {
                    "status": 0, 
                    "duration": 3.03, 
                    "version": "unavailable", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Avira (Windows)": {
                    "status": 0, 
                    "duration": 4.78, 
                    "version": "8.3.62.226", 
                    "results": null, 
                    "virus_database_version": "8.18.36.236"
                }, 
                "Kaspersky (Windows)": {
                    "status": 0, 
                    "duration": 0.77, 
                    "version": "21.3", 
                    "results": null, 
                    "virus_database_version": "2021-08-03 04:06:00 (full)"
                }, 
                "McAfee CLI scanner (Linux)": {
                    "status": 0, 
                    "duration": 5.63, 
                    "version": "6.0.6.653", 
                    "results": null, 
                    "virus_database_version": "9966"
                }, 
                "Sophos Anti-Virus (Linux)": {
                    "status": 0, 
                    "duration": 13.86, 
                    "version": "5.74.0", 
                    "results": null, 
                    "virus_database_version": "5.83 (23 March 2021)"
                }, 
                "DrWeb Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 0.11, 
                    "version": "11.1.9.2103151924", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "ClamAV (Linux)": {
                    "status": 0, 
                    "duration": 0.22, 
                    "version": "0.103.2", 
                    "results": null, 
                    "virus_database_version": "26190"
                }, 
                "eScan Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 4.26, 
                    "version": "7.0.21", 
                    "results": null, 
                    "virus_database_version": "7.88854 (16/06/2021)"
                }, 
                "Emsisoft Commandline Scanner (Windows)": {
                    "status": 0, 
                    "duration": 0.25, 
                    "version": "2021.1.0.10606", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Bitdefender Antivirus Scanner (Linux)": {
                    "status": 0, 
                    "duration": 7.6, 
                    "version": "7.90123", 
                    "results": null, 
                    "virus_database_version": null
                }
            }
        }, 
        "path": "", 
        "result_id": "368e7a01-7cf2-4086-b3fa-d7f382934c1f", 
        "file_sha256": "167c0eedb7eaac69cc93681160bfd1986bb1b7b0833bb09ad6acfda39662a002"
    }, 
    "suricata": {
        "tls": [], 
        "files": [], 
        "alerts": [], 
        "http": []
    }, 
    "virustotal": {
        "scans": {
            "Bkav": {
                "detected": false, 
                "version": "1.3.0.9899", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Lionic": {
                "detected": false, 
                "version": "4.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "DrWeb": {
                "detected": false, 
                "version": "7.0.49.9080", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "MicroWorld-eScan": {
                "detected": false, 
                "version": "14.0.409.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "FireEye": {
                "detected": false, 
                "version": "32.44.1.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "CAT-QuickHeal": {
                "detected": false, 
                "version": "14.00", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "ALYac": {
                "detected": false, 
                "version": "1.1.3.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Malwarebytes": {
                "detected": false, 
                "version": "4.2.2.27", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Zillya": {
                "detected": false, 
                "version": "2.0.0.4376", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "Sangfor": {
                "detected": false, 
                "version": "2.9.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210416"
            }, 
            "K7AntiVirus": {
                "detected": false, 
                "version": "11.184.37306", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "K7GW": {
                "detected": false, 
                "version": "11.184.37306", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Arcabit": {
                "detected": false, 
                "version": "1.0.0.886", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "BitDefenderTheta": {
                "detected": false, 
                "version": "7.2.37796.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210525"
            }, 
            "Cyren": {
                "detected": false, 
                "version": "6.3.0.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Symantec": {
                "detected": false, 
                "version": "1.14.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "ESET-NOD32": {
                "detected": false, 
                "version": "23383", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "TrendMicro-HouseCall": {
                "detected": false, 
                "version": "10.0.0.1040", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Avast": {
                "detected": false, 
                "version": "21.1.5827.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "ClamAV": {
                "detected": false, 
                "version": "0.103.2.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Kaspersky": {
                "detected": false, 
                "version": "21.0.1.45", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "BitDefender": {
                "detected": false, 
                "version": "7.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "NANO-Antivirus": {
                "detected": false, 
                "version": "1.0.146.25311", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "SUPERAntiSpyware": {
                "detected": false, 
                "version": "5.6.0.1032", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "Tencent": {
                "detected": false, 
                "version": "1.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Ad-Aware": {
                "detected": false, 
                "version": "3.0.21.179", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "TACHYON": {
                "detected": false, 
                "version": "2021-05-31.02", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Emsisoft": {
                "detected": false, 
                "version": "2018.12.0.1641", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Comodo": {
                "detected": false, 
                "version": "33578", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "F-Secure": {
                "detected": false, 
                "version": "12.0.86.52", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Baidu": {
                "detected": false, 
                "version": "1.0.0.2", 
                "result": null, 
                "normalized": [], 
                "update": "20190318"
            }, 
            "VIPRE": {
                "detected": false, 
                "version": "92946", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "TrendMicro": {
                "detected": false, 
                "version": "11.0.0.1006", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "McAfee-GW-Edition": {
                "detected": false, 
                "version": "v2019.1.2+3728", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "CMC": {
                "detected": false, 
                "version": "2.10.2019.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210506"
            }, 
            "Sophos": {
                "detected": false, 
                "version": "1.0.2.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Ikarus": {
                "detected": false, 
                "version": "0.1.5.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Avast-Mobile": {
                "detected": false, 
                "version": "210530-02", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Jiangmin": {
                "detected": false, 
                "version": "16.0.100", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Avira": {
                "detected": false, 
                "version": "8.3.3.12", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Antiy-AVL": {
                "detected": false, 
                "version": "3.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Kingsoft": {
                "detected": false, 
                "version": "2017.9.26.565", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Gridinsoft": {
                "detected": false, 
                "version": "1.0.41.133", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Microsoft": {
                "detected": false, 
                "version": "1.1.18200.4", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "ViRobot": {
                "detected": false, 
                "version": "2014.3.20.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "ZoneAlarm": {
                "detected": false, 
                "version": "1.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "GData": {
                "detected": false, 
                "version": "A:25.29816B:27.23196", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Cynet": {
                "detected": false, 
                "version": "4.0.0.27", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "AhnLab-V3": {
                "detected": false, 
                "version": "3.20.1.10133", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Acronis": {
                "detected": false, 
                "version": "1.1.1.82", 
                "result": null, 
                "normalized": [], 
                "update": "20210512"
            }, 
            "McAfee": {
                "detected": false, 
                "version": "6.0.6.653", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "MAX": {
                "detected": false, 
                "version": "2019.9.16.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "VBA32": {
                "detected": false, 
                "version": "5.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210528"
            }, 
            "Zoner": {
                "detected": false, 
                "version": "0.0.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Rising": {
                "detected": false, 
                "version": "25.0.0.26", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Yandex": {
                "detected": false, 
                "version": "5.5.2.24", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "SentinelOne": {
                "detected": false, 
                "version": "5.1.0.5", 
                "result": null, 
                "normalized": [], 
                "update": "20210518"
            }, 
            "MaxSecure": {
                "detected": false, 
                "version": "1.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Fortinet": {
                "detected": false, 
                "version": "6.2.142.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Panda": {
                "detected": false, 
                "version": "4.6.4.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Qihoo-360": {
                "detected": false, 
                "version": "1.0.0.1120", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }
        }, 
        "scan_id": "167c0eedb7eaac69cc93681160bfd1986bb1b7b0833bb09ad6acfda39662a002-1622447817", 
        "sha1": "ba1cda4aaf03fc6fef7f2fa818677aa25b1022ae", 
        "resource": "70c596164e052024ebe355bb6c887351", 
        "response_code": 1, 
        "scan_date": "2021-05-31 07:56:57", 
        "permalink": "https://www.virustotal.com/gui/file/167c0eedb7eaac69cc93681160bfd1986bb1b7b0833bb09ad6acfda39662a002/detection/f-167c0eedb7eaac69cc93681160bfd1986bb1b7b0833bb09ad6acfda39662a002-1622447817", 
        "summary": {
            "positives": 0, 
            "permalink": "https://www.virustotal.com/gui/file/167c0eedb7eaac69cc93681160bfd1986bb1b7b0833bb09ad6acfda39662a002/detection/f-167c0eedb7eaac69cc93681160bfd1986bb1b7b0833bb09ad6acfda39662a002-1622447817", 
            "scan_date": "2021-05-31 07:56:57"
        }, 
        "sha256": "167c0eedb7eaac69cc93681160bfd1986bb1b7b0833bb09ad6acfda39662a002", 
        "normalized": [], 
        "total": 61, 
        "positives": 0, 
        "verbose_msg": "Scan finished, information embedded", 
        "md5": "70c596164e052024ebe355bb6c887351"
    }, 
    "network": {
        "udp": [], 
        "dns_servers": [], 
        "http": [], 
        "smtp": [], 
        "tcp": [], 
        "geoinfo": {}, 
        "mitm": [], 
        "https_ex": [], 
        "http_ex": [], 
        "sorted_pcap_sha256": "c3a34c734d2848df38abea7a2c1e8b9ab0ad66b17ca0d9523035e995b636c43e", 
        "icmp": [], 
        "tls": [], 
        "dead_hosts": [], 
        "smtp_ex": [], 
        "hosts": [], 
        "pcap_sha256": "a145fef50b0efbeddae792a14e072b10c7d82a6d0099690b1c7c0475c44cc461", 
        "dns": [], 
        "domains": [], 
        "irc": []
    }, 
    "resubmit": {
        "resubmit_ids": []
    }, 
    "snort": {
        "alerts": []
    }, 
    "memory": {
        "malconfscan": {
            "data": [], 
            "config": {
                "filter": false
            }
        }, 
        "yarascan": {
            "data": [
                {
                    "owner": "Process svchost.exe Pid 916", 
                    "hexdump": "0x035bcca8  73 00 79 00 73 00 74 00 65 00 6d 00 69 00 6e 00   s.y.s.t.e.m.i.n.\n0x035bccb8  66 00 6f 00 2e 00 65 00 78 00 65 00 00 00 00 00   f.o...e.x.e.....\n0x035bccc8  84 58 b1 0a 8e 00 00 80 12 01 5b 03 00 00 00 00   .X........[.....\n0x035bccd8  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................\n", 
                    "rule": "gen_memory_commands_shell_dev"
                }
            ], 
            "config": {
                "filter": false
            }
        }
    }, 
    "debug": {
        "action": [], 
        "dbgview": [], 
        "errors": [], 
        "log": [
            "2021-08-04 21:58:30,030 [analyzer] DEBUG: Starting analyzer from: C:\\tmpk4d6bl\n", 
            "2021-08-04 21:58:30,046 [analyzer] DEBUG: Pipe server name: \\??\\PIPE\\cKiObEFLwzqGilvuKZuOUdrgbIjyt\n", 
            "2021-08-04 21:58:30,046 [analyzer] DEBUG: Log pipe server name: \\??\\PIPE\\qoETJhPmsYaHgZzkXIdznDPzlPSZXAM\n", 
            "2021-08-04 21:58:30,046 [analyzer] DEBUG: elf\n"
        ], 
        "cuckoo": [
            "2021-08-04 23:07:47,190 [cuckoo.core.scheduler] INFO: Task #2344719: acquired machine win7x6422 (label=win7x6422)\n", 
            "2021-08-04 23:07:47,191 [cuckoo.core.resultserver] DEBUG: Now tracking machine 192.168.168.222 for task #2344719\n", 
            "2021-08-04 23:07:47,293 [cuckoo.auxiliary.sniffer] INFO: Started sniffer with PID 489032 (interface=vboxnet0, host=192.168.168.222)\n", 
            "2021-08-04 23:07:47,454 [cuckoo.machinery.virtualbox] DEBUG: Starting vm win7x6422\n", 
            "2021-08-04 23:07:47,731 [cuckoo.machinery.virtualbox] DEBUG: Restoring virtual machine win7x6422 to vmcloak\n", 
            "2021-08-04 23:10:53,300 [cuckoo.core.guest] INFO: Starting analysis #2344719 on guest (id=win7x6422, ip=192.168.168.222)\n", 
            "2021-08-04 23:10:54,305 [cuckoo.core.guest] DEBUG: win7x6422: not ready yet\n", 
            "2021-08-04 23:10:55,311 [cuckoo.core.guest] DEBUG: win7x6422: not ready yet\n", 
            "2021-08-04 23:10:56,316 [cuckoo.core.guest] DEBUG: win7x6422: not ready yet\n", 
            "2021-08-04 23:10:56,344 [cuckoo.core.guest] INFO: Guest is running Cuckoo Agent 0.10 (id=win7x6422, ip=192.168.168.222)\n", 
            "2021-08-04 23:10:56,416 [cuckoo.core.guest] DEBUG: Uploading analyzer to guest (id=win7x6422, ip=192.168.168.222, monitor=latest, size=6640384)\n", 
            "2021-08-04 23:10:58,208 [cuckoo.core.resultserver] DEBUG: Task #2344719: live log analysis.log initialized.\n", 
            "2021-08-04 23:10:58,293 [cuckoo.core.resultserver] DEBUG: Task #2344719 had connection reset for <Context for LOG>\n", 
            "2021-08-04 23:11:00,628 [cuckoo.core.guest] WARNING: win7x6422: analysis #2344719 caught an exception\n", 
            "Traceback (most recent call last):\n", 
            "  File \"C:/tmpk4d6bl/analyzer.py\", line 824, in <module>\n", 
            "    success = analyzer.run()\n", 
            "  File \"C:/tmpk4d6bl/analyzer.py\", line 593, in run\n", 
            "    \"not exist.\".format(package_name))\n", 
            "CuckooError: Unable to import package \"modules.packages.elf\", does not exist.\n", 
            "\n", 
            "2021-08-04 23:11:00,643 [cuckoo.core.plugins] DEBUG: Stopped auxiliary module: Redsocks\n", 
            "2021-08-04 23:11:00,749 [cuckoo.core.plugins] DEBUG: Stopped auxiliary module: Sniffer\n", 
            "2021-08-04 23:11:26,524 [cuckoo.machinery.virtualbox] INFO: Successfully generated memory dump for virtual machine with label win7x6422 to path /srv/cuckoo/cwd/storage/analyses/2344719/memory.dmp\n", 
            "2021-08-04 23:11:26,527 [cuckoo.machinery.virtualbox] DEBUG: Stopping vm win7x6422\n", 
            "2021-08-04 23:14:12,091 [cuckoo.core.resultserver] DEBUG: Stopped tracking machine 192.168.168.222 for task #2344719\n", 
            "2021-08-04 23:14:12,202 [cuckoo.core.scheduler] DEBUG: Released database task #2344719\n", 
            "2021-08-04 23:17:57,317 [cuckoo.core.scheduler] INFO: Task #2344719: analysis procedure completed\n"
        ]
    }, 
    "strings": [
        "/lib/ld-linux.so.2", 
        "libbfd-2.30-system.so", 
        "_ITM_deregisterTMCloneTable", 
        "__gmon_start__", 
        "_ITM_registerTMCloneTable", 
        "htab_find_slot", 
        "bfd_elf_parse_eh_frame_entries", 
        "bfd_elf_set_dt_needed_name", 
        "bfd_getb64", 
        "bfd_cache_close_all", 
        "bfd_set_section_size", 
        "bfd_link_add_undef", 
        "bfd_check_format", 
        "bfd_hash_newfunc", 
        "bfd_set_archive_head", 
        "bfd_target_list", 
        "bfd_set_section_contents", 
        "xstrdup", 
        "bfd_get_arch", 
        "bfd_make_section_anyway_with_flags", 
        "register_ld_plugin_object_p", 
        "bfd_set_gp_size", 
        "xmemdup", 
        "bfd_emul_get_commonpagesize", 
        "cplus_demangle_name_to_style", 
        "bfd_set_assert_handler", 
        "make_relative_prefix", 
        "_sch_tolower", 
        "concat", 
        "bfd_get_reloc_size", 
        "bfd_set_error", 
        "bfd_set_error_program_name", 
        "htab_hash_string", 
        "bfd_elf_get_dt_soname", 
        "_sch_istable", 
        "bfd_make_readable", 
        "bfd_elf_set_dyn_lib_class", 
        "bfd_section_already_linked_table_init", 
        "xmalloc_set_program_name", 
        "bfd_alloc", 
        "bfd_check_format_matches", 
        "bfd_close", 
        "_bfd_pex64i_swap_debugdir_out", 
        "bfd_elf_get_bfd_needed_list", 
        "bfd_get_mach", 
        "bfd_close_all_done", 
        "bfd_hide_sym_by_version", 
        "bfd_make_section_old_way", 
        "_bfd_pei_write_codeview_record", 
        "xcalloc", 
        "bfd_errmsg", 
        "bfd_find_target", 
        "bfd_elf_size_dynsym_hash_dynstr", 
        "bfd_openr_next_archived_file", 
        "bfd_plugin_target_p", 
        "bfd_get_arch_info", 
        "bfd_new_link_order", 
        "bfd_hash_set_default_size", 
        "bfd_hash_lookup", 
        "bfd_section_already_linked_table_free", 
        "filename_ncmp", 
        "bfd_arch_mach_octets_per_byte", 
        "bfd_elf_get_runpath_list", 
        "bfd_get_section_by_name", 
        "lrealpath", 
        "bfd_get_target_info", 
        "bfd_emul_set_maxpagesize", 
        "_bfd_pex64i_write_codeview_record", 
        "bfd_map_over_sections", 
        "bfd_elf_get_dyn_lib_class", 
        "bfd_scan_arch", 
        "bfd_get_gp_size", 
        "bfd_bwrite", 
        "unlink_if_ordinary", 
        "bfd_make_writable", 
        "bfd_elf_get_needed_list", 
        "_bfd_elf_map_sections_to_segments", 
        "xmalloc", 
        "bfd_set_section_flags", 
        "_bfd_std_section", 
        "bfd_get_unique_section_name", 
        "bfd_putl16", 
        "bfd_set_arch_info", 
        "bfd_arch_get_compatible", 
        "cplus_demangle_set_style", 
        "bfd_elf_size_dynamic_sections", 
        "bfd_iterate_over_targets", 
        "bfd_set_default_target", 
        "bfd_link_hash_lookup", 
        "bfd_set_format", 
        "_bfd_elf_match_sections_by_type", 
        "bfd_get_next_section_by_name", 
        "xrealloc", 
        "bfd_emul_get_maxpagesize", 
        "bfd_elf_discard_info", 
        "bfd_set_symtab", 
        "bfd_get_reloc_code_name", 
        "bfd_set_error_handler", 
        "bfd_putl32", 
        "bfd_octets_per_byte", 
        "bfd_emul_set_commonpagesize", 
        "bfd_link_hash_traverse", 
        "bfd_seek", 
        "bfd_record_phdr", 
        "bfd_plugin_open_input", 
        "bfd_hash_table_init", 
        "bfd_generic_link_read_symbols", 
        "bfd_link_check_relocs", 
        "bfd_scan_vma", 
        "bfd_hash_allocate", 
        "bfd_get_section_by_name_if", 
        "bfd_getb16", 
        "lbasename", 
        "bfd_stat", 
        "bfd_create", 
        "bfd_hash_traverse", 
        "bfd_i386linux_size_dynamic_sections", 
        "bfd_demangle", 
        "bfd_putl64", 
        "bfd_use_reserved_id", 
        "bfd_arch_bits_per_address", 
        "bfd_hash_table_free", 
        "getpwd", 
        "_bfd_fix_excluded_sec_syms", 
        "bfd_wrapped_link_hash_lookup", 
        "bfd_get_error", 
        "bfd_make_section_with_flags", 
        "bfd_bread", 
        "bfd_getb32", 
        "bfd_get_section_contents", 
        "bfd_reloc_type_lookup", 
        "bfd_openr", 
        "_bfd_pei_swap_debugdir_out", 
        "bfd_openw", 
        "bfd_hash_table_init_n", 
        "htab_find", 
        "filename_cmp", 
        "htab_create", 
        "current_demangling_style", 
        "objalloc_free_block", 
        "bfd_elf_record_link_assignment", 
        "bfd_set_start_address", 
        "bfd_init", 
        "bfd_printable_name", 
        "bfd_canonicalize_reloc", 
        "bfd_get_reloc_upper_bound", 
        "bfd_make_section_anyway", 
        "_bfd_elf_tls_setup", 
        "_xexit_cleanup", 
        "libdl.so.2", 
        "dlopen", 
        "dlclose", 
        "dlerror", 
        "libc.so.6", 
        "_IO_stdin_used", 
        "globfree64", 
        "fflush", 
        "strcpy", 
        "__printf_chk", 
        "fnmatch", 
        "_IO_putc", 
        "setlocale", 
        "strncmp", 
        "dcngettext", 
        "optind", 
        "strrchr", 
        "perror", 
        "dcgettext", 
        "mmap64", 
        "glob64", 
        "strncpy", 
        "putchar", 
        "strpbrk", 
        "rewind", 
        "strtok", 
        "strtol", 
        "isatty", 
        "strlen", 
        "ungetc", 
        "memset", 
        "strstr", 
        "strcspn", 
        "__errno_location", 
        "memcmp", 
        "getpagesize", 
        "__fprintf_chk", 
        "stdout", 
        "getrusage", 
        "memcpy", 
        "fclose", 
        "strtoul", 
        "strcat", 
        "strcasecmp", 
        "__xstat64", 
        "getenv", 
        "optarg", 
        "stderr", 
        "munmap", 
        "_obstack_newchunk", 
        "getopt_long", 
        "strtoull", 
        "fileno", 
        "fwrite", 
        "__memcpy_chk", 
        "lseek64", 
        "strchr", 
        "__cxa_finalize", 
        "__sprintf_chk", 
        "memmove", 
        "fopen64", 
        "_obstack_begin", 
        "bindtextdomain", 
        "_IO_getc", 
        "opterr", 
        "strcmp", 
        "__libc_start_main", 
        "ferror", 
        "stpcpy", 
        "getopt_long_only", 
        "_obstack_free", 
        "__stack_chk_fail", 
        "_edata", 
        "__bss_start", 
        "GLIBC_2.1", 
        "GLIBC_2.0", 
        "GLIBC_2.2", 
        "GLIBC_2.27", 
        "GLIBC_2.3.4", 
        "GLIBC_2.1.3", 
        "GLIBC_2.2.3", 
        "GLIBC_2.4", 
        "D$Hj=V", 
        "|$,e3=", 
        "|$Le3=", 
        "t$0UVW", 
        "t$0URW", 
        "D$(9HX", 
        "D$0+D$P", 
        "t$|9p ", 
        ";L$xw#", 
        "D$\\9D$4", 
        "T$HWWS", 
        "J 3B$3J(", 
        "|$\\+t$0", 
        "D$X9D$0", 
        "t\"9n$u", 
        "t33t$D", 
        "uL3t$D", 
        "|$,e3=", 
        "|$,e3=", 
        "uG<[tC", 
        "q 9p u", 
        "T$ RVP", 
        "\\$$9\\$", 
        "\\$ 9\\$", 
        "D$49D$$", 
        "D$09D$ ", 
        "u{;|$$", 
        "D$$9D$,", 
        "D$ 9D$(", 
        "9D$<uv", 
        "|$4;{\\r", 
        "CT;D$(", 
        "\\$(#\\$", 
        "\\$,#\\$", 
        "T$(<0u", 
        "D$,:\\$,", 
        "9D$8tZ", 
        "R,9Q,t'", 
        "R,9Q,t'", 
        "R,9Q,t'", 
        "R,9Q,t'", 
        "R,9Q,t'", 
        "R,9Q,t'", 
        "R 9B t", 
        "9x,~.k", 
        "<:tm< ti", 
        "u&<\\t\"", 
        "D$D+D$0", 
        "|$T9|$", 
        "D$d9D$,", 
        "D$t9D$,", 
        "T$ RUP", 
        "T$$RWP", 
        "L$<3L$ 1", 
        "u&<\\t\"", 
        "D$D+D$0", 
        "|$T9|$", 
        "D$d9D$,", 
        "D$t9D$,", 
        "T$ RUP", 
        "T$$RWP", 
        "\\$D9|$T", 
        "H<Wj@P", 
        "D$\\;D$t", 
        "|$@3T$,", 
        "t$<3T$", 
        "3D$ 3D$4", 
        "3D$$3D$81", 
        "3D$(3D$<", 
        "3|$,3|$@", 
        "3|$03|$", 
        "3t$43t$D", 
        "3\\$$3\\$<3\\$", 
        "\\$ 3\\$(3\\$@3\\$L", 
        "\\$$3\\$,3\\$", 
        "|$(3|$03|$D3|$T", 
        "|$,3|$43|$H3|$X", 
        "t$03t$83t$", 
        "t$43t$<3t$L3t$(", 
        "L$83L$@3L$P!", 
        "\\$<3\\$", 
        "3\\$T3\\$,", 
        "T$@3T$D3T$X", 
        "3|$H3|$", 
        "D$D3D$", 
        "3D$(3D$", 
        "|$H3|$L3|$", 
        "3L$P3L$,!", 
        "L$P3L$X3L$0", 
        "T$T3T$", 
        "D$X3D$(3D$4", 
        "|$(3|$,3|$83|$$", 
        "3t$ 3t$D", 
        "|$,3|$03|$<3|$", 
        "D$03D$43D$@3D$", 
        "3\\$$3\\$,", 
        "D$43D$83D$D3D$", 
        "3D$ 3D$", 
        "D$83D$<3D$(3D$", 
        "D$ 3D$", 
        "3\\$$3\\$", 
        "L$@3L$D3L$03L$H", 
        "L$$3L$", 
        "L$D3L$(3L$41", 
        "|$ 3T$", 
        "D$(3D$,3D$83D$$", 
        "l$ 3l$", 
        "l$(3t$H1", 
        "|$,3|$0", 
        "D$03D$43D$@", 
        "|$h3L$", 
        "D$\\;D$t", 
        "<'tL<\"", 
        "Stack now", 
        "%s %s (", 
        "%P%F:%S: %s in %s", 
        "%P%F:%S: %s", 
        "Starting parse", 
        "Stack size increased to %lu", 
        "Entering state %d", 
        "Reading a token: ", 
        "Now at end of input.", 
        "Next token is", 
        "Shifting", 
        "   $%d = ", 
        "MRI style script", 
        "fill value", 
        "*default*", 
        "PT_GNU_STACK", 
        "FILEHDR", 
        "VERSION script", 
        "global", 
        "extern", 
        "-> $$ =", 
        "syntax error", 
        "Error: discarding", 
        "Error: popping", 
        "memory exhausted", 
        "Cleanup: discarding lookahead", 
        "Cleanup: popping", 
        "PT_GNU_EH_FRAME", 
        "PT_NULL", 
        "PT_LOAD", 
        "PT_DYNAMIC", 
        "PT_INTERP", 
        "PT_NOTE", 
        "PT_SHLIB", 
        "PT_PHDR", 
        "PT_TLS", 
        "$undefined", 
        "PLUSEQ", 
        "MINUSEQ", 
        "MULTEQ", 
        "LSHIFTEQ", 
        "RSHIFTEQ", 
        "ANDAND", 
        "LSHIFT", 
        "RSHIFT", 
        "ALIGN_K", 
        "SECTIONS", 
        "INSERT_K", 
        "BEFORE", 
        "DATA_SEGMENT_ALIGN", 
        "DATA_SEGMENT_RELRO_END", 
        "DATA_SEGMENT_END", 
        "SORT_BY_NAME", 
        "SORT_BY_ALIGNMENT", 
        "SORT_NONE", 
        "SORT_BY_INIT_PRIORITY", 
        "SIZEOF_HEADERS", 
        "OUTPUT_FORMAT", 
        "FORCE_COMMON_ALLOCATION", 
        "OUTPUT_ARCH", 
        "INHIBIT_COMMON_ALLOCATION", 
        "FORCE_GROUP_ALLOCATION", 
        "SEGMENT_START", 
        "INCLUDE", 
        "MEMORY", 
        "REGION_ALIAS", 
        "LD_FEATURE", 
        "NOLOAD", 
        "OVERLAY", 
        "DEFINED", 
        "TARGET_K", 
        "SEARCH_DIR", 
        "SIZEOF", 
        "ALIGNOF", 
        "LOADADDR", 
        "STARTUP", 
        "SYSLIB", 
        "NOFLOAT", 
        "NOCROSSREFS", 
        "NOCROSSREFS_TO", 
        "ORIGIN", 
        "LENGTH", 
        "CREATE_OBJECT_SYMBOLS", 
        "OUTPUT", 
        "CONSTRUCTORS", 
        "ALIGNMOD", 
        "SUBALIGN", 
        "PROVIDE", 
        "PROVIDE_HIDDEN", 
        "AS_NEEDED", 
        "ABSOLUTE", 
        "NEWLINE", 
        "ENDWORD", 
        "NAMEWORD", 
        "ASSERT_K", 
        "LOG2CEIL", 
        "PUBLIC", 
        "DEFSYMEND", 
        "TRUNCATE", 
        "INPUT_SCRIPT", 
        "INPUT_MRI_SCRIPT", 
        "INPUT_DEFSYM", 
        "EXTERN", 
        "VERS_TAG", 
        "VERS_IDENTIFIER", 
        "GLOBAL", 
        "VERSIONK", 
        "INPUT_VERSION_SCRIPT", 
        "ONLY_IF_RO", 
        "ONLY_IF_RW", 
        "SPECIAL", 
        "INPUT_SECTION_FLAGS", 
        "ALIGN_WITH_INPUT", 
        "EXCLUDE_FILE", 
        "INPUT_DYNAMIC_LIST", 
        "$accept", 
        "filename", 
        "defsym_expr", 
        "mri_script_file", 
        "mri_script_lines", 
        "mri_script_command", 
        "ordernamelist", 
        "mri_load_name_list", 
        "mri_abs_name_list", 
        "casesymlist", 
        "extern_name_list", 
        "extern_name_list_body", 
        "ifile_list", 
        "ifile_p1", 
        "input_list", 
        "input_list1", 
        "sec_or_group_p1", 
        "statement_anywhere", 
        "wildcard_name", 
        "wildcard_maybe_exclude", 
        "filename_spec", 
        "section_name_spec", 
        "sect_flag_list", 
        "sect_flags", 
        "exclude_name_list", 
        "section_name_list", 
        "input_section_spec_no_keep", 
        "input_section_spec", 
        "statement", 
        "statement_list", 
        "statement_list_opt", 
        "length", 
        "fill_exp", 
        "fill_opt", 
        "assign_op", 
        "assignment", 
        "opt_comma", 
        "memory_spec_list_opt", 
        "memory_spec_list", 
        "memory_spec", 
        "origin_spec", 
        "length_spec", 
        "attributes_opt", 
        "attributes_list", 
        "attributes_string", 
        "startup", 
        "high_level_library", 
        "high_level_library_NAME_list", 
        "low_level_library", 
        "low_level_library_NAME_list", 
        "floating_point_support", 
        "nocrossref_list", 
        "mustbe_exp", 
        "memspec_at_opt", 
        "opt_at", 
        "opt_align", 
        "opt_align_with_input", 
        "opt_subalign", 
        "sect_constraint", 
        "opt_exp_with_type", 
        "opt_exp_without_type", 
        "opt_nocrossrefs", 
        "memspec_opt", 
        "phdr_opt", 
        "overlay_section", 
        "phdr_list", 
        "phdr_type", 
        "phdr_qualifiers", 
        "phdr_val", 
        "dynamic_list_file", 
        "dynamic_list_nodes", 
        "dynamic_list_node", 
        "dynamic_list_tag", 
        "version_script_file", 
        "vers_nodes", 
        "vers_node", 
        "verdep", 
        "vers_tag", 
        "vers_defns", 
        "opt_semicolon", 
        "%P:%s: file format not recognized; treating as linker script", 
        "Reducing stack by rule %d (line %lu):", 
        "%P%F: unrecognised keyword in MRI style script '%s'", 
        "%X%P:%S: unknown phdr type `%s' (try integer literal)", 
        "%X%P:%S: PHDRS syntax error at `%s'", 
        "#$&'()*+,-./0123456789<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 
        "%F%s: file not recognized: %E", 
        "%P:%S: ignoring invalid character `%s'%s", 
        "out of dynamic memory in yyensure_buffer_stack()", 
        "out of dynamic memory in yy_create_buffer()", 
        "fatal flex scanner internal error--end of buffer missed", 
        "fatal error - scanner input buffer overflow", 
        "%F%P: read in flex scanner failed", 
        "out of dynamic memory in yy_get_next_buffer()", 
        "fatal flex scanner internal error--no action found", 
        "out of dynamic memory in yy_scan_buffer()", 
        "out of dynamic memory in yy_scan_bytes()", 
        "%F:includes nested too deeply", 
        "%F%P: EOF in comment", 
        "ldlex.l", 
        " in script", 
        " in expression", 
        "bad buffer in yy_scan_bytes()", 
        "%F: macros nested too deeply", 
        "\u001f !\"#$%&'()*+,-./0123456789", 
        ":;<=>?@AB", 
        "CDEFGH", 
        "%P%F: invalid hex number `%s'", 
        "Shared library control for HP/UX compatibility", 
        "%P%F: use the --help option for usage information", 
        "%P%F: unrecognized -a option `%s'", 
        "%P%F: unrecognized -assert option `%s'", 
        "%F%P: unknown demangling style `%s'", 
        "%s: emulation specific options:", 
        "  --ld-generated-unwind-info  Generate exception handling info for PLT", 
        "  --no-ld-generated-unwind-info", 
        "                              Don't generate exception handling info for PLT", 
        "  --build-id[=STYLE]          Generate build ID note", 
        "  --compress-debug-sections=[none|zlib|zlib-gnu|zlib-gabi]", 
        "                              Compress DWARF debug sections using zlib", 
        "                               Default: none", 
        "  -z common-page-size=SIZE    Set common page size to SIZE", 
        "  -z max-page-size=SIZE       Set maximum page size to SIZE", 
        "  -z defs                     Report unresolved symbols in object files.", 
        "  -z muldefs                  Allow multiple definitions", 
        "  -z execstack                Mark executable as requiring executable stack", 
        "  -z noexecstack              Mark executable as not requiring executable stack", 
        "  -z globalaudit              Mark executable requiring global auditing", 
        "  --audit=AUDITLIB            Specify a library to use for auditing", 
        "  -Bgroup                     Selects group name lookup rules for DSO", 
        "  --disable-new-dtags         Disable new dynamic tags", 
        "  --enable-new-dtags          Enable new dynamic tags", 
        "  --eh-frame-hdr              Create .eh_frame_hdr section", 
        "  --no-eh-frame-hdr           Do not create .eh_frame_hdr section", 
        "  --exclude-libs=LIBS         Make all symbols in LIBS hidden", 
        "  --hash-style=STYLE          Set hash style to sysv, gnu or both", 
        "  -P AUDITLIB, --depaudit=AUDITLIB", 
        "      Specify a library to use for auditing dependencies", 
        "  -z combreloc                Merge dynamic relocs into one section and sort", 
        "  -z nocombreloc              Don't merge dynamic relocs into one section", 
        "  -z global                   Make symbols in DSO available for subsequently", 
        "       loaded objects", 
        "  -z initfirst                Mark DSO to be initialized first at runtime", 
        "  -z interpose                Mark object to interpose all DSOs but executable", 
        "  -z lazy                     Mark object lazy runtime binding (default)", 
        "  -z loadfltr                 Mark object requiring immediate process", 
        "  -z nocopyreloc              Don't create copy relocs", 
        "  -z nodefaultlib             Mark object not to use default search paths", 
        "  -z nodelete                 Mark DSO non-deletable at runtime", 
        "  -z nodlopen                 Mark DSO not available to dlopen", 
        "  -z nodump                   Mark DSO not available to dldump", 
        "  -z now                      Mark object non-lazy runtime binding", 
        "  -z origin                   Mark object requiring immediate $ORIGIN", 
        "processing at runtime", 
        "  -z relro                    Create RELRO program header (default)", 
        "  -z norelro                  Don't create RELRO program header", 
        "  -z separate-code            Create separate code program header", 
        "  -z noseparate-code          Don't create separate code program header (default)", 
        "  -z common                   Generate common symbols with STT_COMMON type", 
        "  -z nocommon                 Generate common symbols with STT_OBJECT type", 
        "  -z stack-size=SIZE          Set size of stack segment", 
        "  -z text                     Treat DT_TEXTREL in shared object as error", 
        "  -z notext                   Don't treat DT_TEXTREL in shared object as error", 
        "  -z textoff                  Don't treat DT_TEXTREL in shared object as error", 
        "<http://www.sourceware.org/bugzilla/>", 
        "%P%F: bad --unresolved-symbols option: %s", 
        "%P%F: unrecognised option: %s", 
        "%P%F: -r and %s may not be used together", 
        "%P%F: -r and -shared may not be used together", 
        "%P%F: -r and -pie may not be used together", 
        "%P: SONAME must not be empty string; keeping previous one", 
        "%P%F: invalid common section sorting option: %s", 
        "%P%F: invalid section sorting option: %s", 
        "%P%F: invalid argument to option \"--section-start\"", 
        "%P%F: missing argument(s) to option \"--section-start\"", 
        "%P%F: group ended before it began (--help for usage)", 
        "%P%X: --hash-size needs a numeric argument", 
        "%P%F: no state pushed before popping", 
        "%P%F: invalid argument to option \"--orphan-handling\"", 
        "%P: SONAME must not be empty string; ignored", 
        "%P%F: -F may not be used without -shared", 
        "%P%F: -f may not be used without -shared", 
        "Specify target for following input files", 
        "Force common symbols to be defined", 
        "Force group members out of groups", 
        "Undo the effect of --export-dynamic", 
        "Auxiliary filter for shared object symbol table", 
        "Filter for shared object symbol table", 
        "Small data size (if no size, same as --shared)", 
        "Set internal name of shared library", 
        "Set PROGRAM as the dynamic linker to use", 
        "Produce an executable with no program interpreter header", 
        "Add DIRECTORY to library search path", 
        "Override the default sysroot location", 
        "Print map file on standard output", 
        "Do not page align data, do not make text readonly", 
        "Page align data, make text readonly", 
        "Send arg to last-loaded plugin", 
        "Ignored for GCC LTO option compatibility", 
        "Ignored for GCC linker option compatibility", 
        "Ignored for gold option compatibility", 
        "Ignored for SVR4 compatibility", 
        "Generate relocations in final output", 
        "Just link symbols (if directory, same as --rpath)", 
        "Strip symbols in discarded sections", 
        "Do not strip symbols in discarded sections", 
        "Start with undefined reference to SYMBOL", 
        "Require SYMBOL be defined in the final output", 
        "Don't merge input [SECTION | orphan] sections", 
        "Build global constructor/destructor tables", 
        "Print version and emulation information", 
        "Discard temporary local symbols (default)", 
        "Don't discard any local symbols", 
        "Default search path for Solaris compatibility", 
        "Accept input files whose architecture cannot be determined", 
        "Reject input files whose architecture is unknown", 
        "Only set DT_NEEDED for following dynamic libs if used", 
        "Always set DT_NEEDED for dynamic libraries mentioned on", 
        "                                the command line", 
        "Ignored for SunOS compatibility", 
        "Do not link against shared libraries", 
        "Bind global references locally", 
        "Bind global function references locally", 
        "Check section addresses for overlaps (default)", 
        "Do not check section addresses for overlaps", 
        "Copy DT_NEEDED links mentioned inside DSOs that follow", 
        "Do not copy DT_NEEDED links mentioned inside DSOs that follow", 
        "Demangle symbol names [using STYLE]", 
        "Do not treat warnings as errors (default)", 
        "Force generation of file with .exe suffix", 
        "Remove unused sections (on some targets)", 
        "Don't remove unused sections (default)", 
        "List removed unused sections on stderr", 
        "Do not list removed unused sections", 
        "Keep exported symbols when removing unused sections", 
        "Set default hash table size close to <NUMBER>", 
        "Use less memory and more disk I/O", 
        "Do not allow unresolved references in object files", 
        "Allow unresolved references in shared libraries", 
        "Do not allow unresolved references in shared libs", 
        "Create default symbol version for imported symbols", 
        "Don't warn about mismatched input files", 
        "Don't warn on finding an incompatible library", 
        "Create an output file even if errors occur", 
        "Only use library directories specified on", 
        "                                the command line", 
        "Ignored for Linux compatibility", 
        "Reduce memory overheads, possibly taking much longer", 
        "Reduce code size by using target specific optimizations", 
        "Do not use relaxation techniques to reduce code size", 
        "Keep only symbols listed in FILE", 
        "Set runtime shared library search path", 
        "Set link time shared library search path", 
        "Create a position independent executable", 
        "Sort common symbols by alignment [in specified order]", 
        "Sort sections by name or maximum alignment", 
        "How many tags to reserve in .dynamic section", 
        "Split output sections every SIZE octets", 
        "Split output sections every COUNT relocs", 
        "Display target specific options", 
        "Use same format as native linker", 
        "How to handle unresolved symbols.  <method> is:", 
        "                                ignore-all, report-all, ignore-in-object-files,", 
        "                                ignore-in-shared-libs", 
        "Output lots of information during link", 
        "Read version information script", 
        "Take export symbols list from .exports, using", 
        "                                SYMBOL as the version.", 
        "Add data symbols to dynamic list", 
        "Use C++ operator new/delete dynamic list", 
        "Warn about duplicate common symbols", 
        "Warn if global constructors/destructors are seen", 
        "Warn if the multiple GP values are used", 
        "Warn only once per undefined symbol", 
        "Warn if start of section changes due to alignment", 
        "Warn if shared object has DT_TEXTREL", 
        "Warn if an object has alternate ELF machine code", 
        "Report unresolved symbols as warnings", 
        "Report unresolved symbols as errors", 
        "Include all objects from following archives", 
        "Use wrapper functions for SYMBOL", 
        "Unresolved SYMBOL will not cause an error or warning", 
        "Push state of flags governing input file handling", 
        "Pop state of flags governing input file handling", 
        "Control how orphan sections are handled.", 
        "--shared", 
        "--library=%s", 
        "%P: %s: missing argument", 
        "default", 
        "nodefinitions", 
        "nosymbolic", 
        "pure-text", 
        "--defsym", 
        "%P%F: invalid number `%s'", 
        "Usage: %s [options] file...", 
        "Options:", 
        "  @FILE", 
        "Read options from FILE", 
        "%s: supported targets:", 
        "%s: supported emulations: ", 
        "ELF emulations:", 
        "Report bugs to %s", 
        "ignore-all", 
        "report-all", 
        "ignore-in-object-files", 
        "ignore-in-shared-libs", 
        "%P%F: bad -plugin-opt option", 
        "%s%c%s", 
        "%P%F: -shared not supported", 
        "%P%F: -pie not supported", 
        "descending", 
        "ascending", 
        ".text-segment", 
        ".rodata-segment", 
        ".ldata-segment", 
        "discard", 
        "%P: unrecognized option '%s'", 
        "%s-%s%s", 
        "KEYWORD", 
        "Set architecture", 
        "mri-script", 
        "Read MRI format linker script", 
        "force-group-allocation", 
        "Set start address", 
        "Export all dynamic symbols", 
        "no-export-dynamic", 
        "Link big-endian objects", 
        "Link little-endian objects", 
        "auxiliary", 
        "filter", 
        "Ignored", 
        "gpsize", 
        "soname", 
        "FILENAME", 
        "PROGRAM", 
        "no-dynamic-linker", 
        "Search for library LIBNAME", 
        "library-path", 
        "DIRECTORY", 
        "sysroot=<DIRECTORY>", 
        "Set emulation", 
        "print-map", 
        "nmagic", 
        "Do not page align data", 
        "no-omagic", 
        "Set output file name", 
        "Optimize output file", 
        "out-implib", 
        "Generate import library", 
        "PLUGIN", 
        "Load named plugin", 
        "plugin-opt", 
        "flto-partition=", 
        "fuse-ld=", 
        "no-map-whole-files", 
        "emit-relocs", 
        "relocatable", 
        "Generate relocatable output", 
        "just-symbols", 
        "strip-all", 
        "Strip all symbols", 
        "strip-debug", 
        "Strip debugging symbols", 
        "no-strip-discarded", 
        "Trace file opens", 
        "Read linker script", 
        "default-script", 
        "Read default linker script", 
        "require-defined", 
        "unique", 
        "[=SECTION]", 
        "Print version information", 
        "discard-all", 
        "Discard all local symbols", 
        "discard-locals", 
        "discard-none", 
        "trace-symbol", 
        "Trace mentions of SYMBOL", 
        "start-group", 
        "Start a group", 
        "end-group", 
        "End a group", 
        "no-accept-unknown-input-arch", 
        "no-add-needed", 
        "no-as-needed", 
        "assert", 
        "Bdynamic", 
        "Link against shared libraries", 
        "call_shared", 
        "Bstatic", 
        "non_shared", 
        "Bsymbolic", 
        "Bsymbolic-functions", 
        "no-check-sections", 
        "no-copy-dt-needed-entries", 
        "Output cross reference table", 
        "SYMBOL=EXPRESSION", 
        "Define a symbol", 
        "[=STYLE]", 
        "embedded-relocs", 
        "Generate embedded relocs", 
        "Treat warnings as errors", 
        "no-fatal-warnings", 
        "Call SYMBOL at unload-time", 
        "force-exe-suffix", 
        "no-gc-sections", 
        "no-print-gc-sections", 
        "gc-keep-exported", 
        "hash-size=<NUMBER>", 
        "Print option help", 
        "Call SYMBOL at load-time", 
        "Write a map file", 
        "no-define-common", 
        "Do not define Common storage", 
        "no-demangle", 
        "Do not demangle symbol names", 
        "no-keep-memory", 
        "no-undefined", 
        "no-allow-shlib-undefined", 
        "allow-multiple-definition", 
        "Allow multiple definitions", 
        "no-undefined-version", 
        "Disallow undefined version", 
        "default-symver", 
        "Create default symbol version", 
        "default-imported-symver", 
        "no-warn-mismatch", 
        "no-warn-search-mismatch", 
        "no-whole-archive", 
        "Turn off --whole-archive", 
        "noinhibit-exec", 
        "noinhibit_exec", 
        "nostdlib", 
        "oformat", 
        "Specify target of output file", 
        "print-output-format", 
        "Print default output format", 
        "print-sysroot", 
        "Print current sysroot", 
        "qmagic", 
        "reduce-memory-overheads", 
        "no-relax", 
        "retain-symbols-file", 
        "rpath-link", 
        "Create a shared library", 
        "Bshareable", 
        "pic-executable", 
        "sort-common", 
        "[=ascending|descending]", 
        "sort_common", 
        "sort-section", 
        "name|alignment", 
        "spare-dynamic-tags", 
        "split-by-file", 
        "[=SIZE]", 
        "split-by-reloc", 
        "[=COUNT]", 
        "Print memory usage statistics", 
        "target-help", 
        "task-link", 
        "Do task level linking", 
        "traditional-format", 
        "section-start", 
        "SECTION=ADDRESS", 
        "Set address of named section", 
        "Set address of .bss section", 
        "Set address of .data section", 
        "Set address of .text section", 
        "Ttext-segment", 
        "Set address of text segment", 
        "Trodata-segment", 
        "Set address of rodata segment", 
        "Tldata-segment", 
        "Set address of ldata segment", 
        "unresolved-symbols=<method>", 
        "[=NUMBER]", 
        "dll-verbose", 
        "version-script", 
        "version-exports-section", 
        "dynamic-list-data", 
        "dynamic-list-cpp-new", 
        "dynamic-list-cpp-typeinfo", 
        "Use C++ typeinfo dynamic list", 
        "dynamic-list", 
        "Read dynamic list", 
        "warn-common", 
        "warn-constructors", 
        "warn-multiple-gp", 
        "warn-once", 
        "warn-section-align", 
        "warn-shared-textrel", 
        "warn-alternate-em", 
        "warn-unresolved-symbols", 
        "error-unresolved-symbols", 
        "ignore-unresolved-symbol", 
        "push-state", 
        "pop-state", 
        "print-memory-usage", 
        "Report target memory usage", 
        "orphan-handling", 
        "compare_section", 
        "lang_do_assignments_1", 
        "lang_size_sections_1", 
        "load_symbols", 
        "print_data_statement", 
        "pop_stat_ptr", 
        "push_stat_ptr", 
        "../../ld/ldlang.c", 
        "%F%P: invalid data statement", 
        "%10llu GB", 
        "%10llu MB", 
        "%10llu KB", 
        " %10llu B", 
        "0x%V   ", 
        "             %T", 
        "0x%V %W %B", 
        "%W (size before relaxing)", 
        "Fail with %d", 
        " SORT (CONSTRUCTORS)", 
        " CONSTRUCTORS", 
        "EXCLUDE_FILE(%s", 
        "SORT_BY_NAME(", 
        "SORT_BY_ALIGNMENT(", 
        "SORT_NONE(", 
        "SORT_BY_INIT_PRIORITY(", 
        "Address of section %s set to ", 
        " CREATE_OBJECT_SYMBOLS", 
        " FILL mask 0x", 
        "0x%V %W %s 0x%v", 
        "0x%V %W RELOC %s ", 
        " *fill*", 
        "0x%V %W ", 
        "0x%V %W", 
        " load address 0x%V", 
        "[0x%V]", 
        "[unresolved]", 
        "[!provide]", 
        "*undef*   ", 
        "                ", 
        "TARGET(%s)", 
        "OUTPUT(%s", 
        "LOAD %s", 
        "START GROUP", 
        "END GROUP", 
        "INSERT %s %s", 
        "elf32-big", 
        "elf64-big", 
        "elf32-little", 
        "elf64-little", 
        "Allocating common symbols", 
        "%016llx", 
        "/DISCARD/", 
        ".init_array.", 
        ".fini_array.", 
        ".ctors.", 
        ".dtors.", 
        "$SYSROOT", 
        "load base", 
        "Discarded input sections", 
        "Memory Configuration", 
        "Attributes", 
        "Length", 
        "Origin", 
        "%-16s %-18s %-18s %s", 
        "%-16s ", 
        "%P%F: target %s not found", 
        "%B: file not recognized: %E", 
        "%B: matching formats:", 
        "COMMON", 
        "subsection alignment", 
        "%P%F: multiple STARTUP files", 
        "program header type", 
        "__load_start_%s", 
        "__load_stop_%s", 
        ".exports", 
        ".startof.%s", 
        "phdr flags", 
        "phdr load address", 
        "__start_%s", 
        "typeinfo name for*", 
        "typeinfo for*", 
        "operator new*", 
        "operator delete*", 
        "SANE_EXPR", 
        "%X%P: unknown feature `%s'", 
        "%16s: ", 
        "    %6.2f%%", 
        "%F%P: invalid reloc statement", 
        "%P%F: bfd_link_hash_lookup failed: %E", 
        "%X%P: address 0x%v of %B section `%s' is not within region `%s'", 
        "%X%P: %B section `%s' will not fit in region `%s'", 
        "SORT_BY_NAME(SORT_BY_ALIGNMENT(", 
        "SORT_BY_ALIGNMENT(SORT_BY_NAME(", 
        "%P%F: Could not define common symbol `%T': %E", 
        "Common symbol       size              file", 
        "%P:%S: warning: redeclaration of memory region `%s'", 
        "%P:%S: warning: memory region `%s' not declared", 
        "%F%S: non constant or forward reference address expression for section %s", 
        "%P%X: Internal error on COFF shared library section %s", 
        "%P%F: error: no memory region specified for loadable section `%s'", 
        "%P: warning: no memory region specified for loadable section `%s'", 
        "%P: warning: changing start of section %s by %lu bytes", 
        "%P: warning: changing start of section %s by %lu byte", 
        "%P: warning: dot moved backwards before `%s'", 
        "%P%F: can't relax section: %E", 
        "%X%P:%S: section has both a load address and a load region", 
        "%F%P:%S: error: alias for default memory region", 
        "%F%P:%S: error: redefinition of memory region alias `%s'", 
        "%F%P:%S: error: memory region `%s' for alias `%s' does not exist", 
        "%P%F: failed creating section `%s': %E", 
        "%P%F: can not create hash table: %E", 
        "%P%F: Illegal use of `%s' section", 
        "%P%F: output format %s cannot represent section called %s: %E", 
        "Linker script and memory map", 
        "%P: warning: could not find any targets that match endianness requirement", 
        "%P%F: cannot open output file %s: %E", 
        "%P%F:%s: can not make object file: %E", 
        "%P%F:%s: can not set architecture: %E", 
        "%P%F: invalid character %c (%d) in flags", 
        "%F%B: file not recognized: %E", 
        "%F%B: member %B in archive is not an object", 
        "%F%B: error adding symbols: %E", 
        "%P: warning: %s contains output sections; did you forget -T?", 
        "%F%P:%S: error: align with input and explicit align specified", 
        "%X%P:%S: PHDRS and FILEHDR are not supported when prior PT_LOAD headers lack them", 
        "%X%P: unknown language `%s' in version information", 
        "%X%P: anonymous version tag cannot be combined with other version tags", 
        "%X%P: duplicate version tag `%s'", 
        "%X%P: duplicate expression `%s' in version information", 
        "%P%F: Failed to create hash table", 
        "%P%F: %s: plugin reported error after all symbols read", 
        "As-needed library included to satisfy reference by file (symbol)", 
        "%P%F: Relocatable linking with relocations from format %s (%B) to format %s (%B) is not supported", 
        "%P%X: %s architecture of input file `%B' is incompatible with %s output", 
        "%P%X: failed to merge target specific data of file %B", 
        "%X%P: unable to read .exports section contents", 
        "%F%P: invalid origin for memory region %s", 
        "%F%P: invalid length for memory region %s", 
        "%X%P: error: unplaced orphan section `%A' from `%B'.", 
        "%P: warning: orphan section `%A' from `%B' being placed in section `%s'.", 
        "%F%P: bfd_record_phdr failed: %E", 
        "%X%P: section `%s' assigned to non-existent phdr `%s'", 
        "%X%P: section %s VMA wraps around address space", 
        "%X%P: section %s LMA wraps around address space", 
        "%X%P: section %s LMA [%V,%V] overlaps section %s LMA [%V,%V]", 
        "%X%P: section %s VMA [%V,%V] overlaps section %s VMA [%V,%V]", 
        "%X%P: region `%s' overflowed by %lu bytes", 
        "%X%P: region `%s' overflowed by %lu byte", 
        "%P%X: required symbol `%s' not defined", 
        "%P%F: gc-sections requires either an entry or an undefined symbol", 
        "%P%F:%s: can't set start address", 
        "%P%F: can't set start address", 
        "%P: warning: cannot find entry symbol %s; defaulting to %V", 
        "%P: warning: cannot find entry symbol %s; not setting start address", 
        "%F%P: %s not found for insert", 
        "%F%P: no sections assigned to phdrs", 
        "%X%P: unable to find version dependency `%s'", 
        "Memory region         Used Size  Region Size  %%age Used", 
        "coff-m68k", 
        "%P%F: unknown format type %s", 
        "GLOBAL_", 
        "Set                 Symbol", 
        "%P%X: Different relocs used in set %s", 
        "%P%X: Different object file formats composing set %s", 
        "%P%X: %s does not support reloc %s for set %s", 
        "%P%X: Special section %s does not support reloc %s for set %s", 
        "%P%X: Unsupported size %d for set %s", 
        "%X%H: reloc refers to symbol `%T' which is not being output", 
        "%X%H: dangerous relocation: %s", 
        "%B%F: could not read symbols: %E", 
        "%I: no new IR symbols to claimi", 
        "Archive member included to satisfy reference by file (symbol)", 
        " additional relocation overflows omitted from the output", 
        " relocation truncated to fit: %s against undefined symbol `%T'", 
        " relocation truncated to fit: %s against symbol `%T' defined in %A section in %B", 
        " relocation truncated to fit: %s against `%T'", 
        "%X%C: multiple definition of `%T'", 
        "%P: Disabling relaxation: it will not work with multiple definitions", 
        "%B%F: could not read relocs: %E", 
        "%P: warning: global constructor %s used", 
        "%P%F: BFD backend error: BFD_RELOC_CTOR unsupported", 
        "%B: warning: definition of `%T' overriding common", 
        "%B: warning: common of `%T' overridden by definition", 
        "%B: warning: common of `%T' overridden by larger common", 
        "%B: warning: larger common is here", 
        "%B: warning: common of `%T' overriding smaller common", 
        "%B: warning: smaller common is here", 
        "%B: warning: multiple common of `%T'", 
        "%B: warning: previous common is here", 
        "%X%P: can't set BFD default target to `%s': %E", 
        "==================================================", 
        "%P%F: --no-define-common may not be used without -shared", 
        "%P%F: cannot open map file %s: %E", 
        "%P: link errors found, deleting executable `%s'", 
        "%P%F: unable to open for source of copy `%s'", 
        "%P%F: unable to open for destination of copy `%s'", 
        "%s: total time in link: %ld.%06ld", 
        "%P%F: bfd_hash_table_init failed: %E", 
        "%P%F: bfd_hash_lookup failed: %E", 
        "%X%C: undefined reference to `%T'", 
        "%C: warning: undefined reference to `%T'", 
        "%X%D: more undefined references to `%T' follow", 
        "%D: warning: more undefined references to `%T' follow", 
        "%X%B: undefined reference to `%T'", 
        "%B: warning: undefined reference to `%T'", 
        "%X%B: more undefined references to `%T' follow", 
        "%B: warning: more undefined references to `%T' follow", 
        "%X%P: error: duplicate retain-symbols-file", 
        "%P%F: bfd_hash_lookup for insertion failed: %E", 
        "%P: `-retain-symbols-file' overrides `-s' and `-S'", 
        "%B: reference to %s", 
        "%B: definition of %s", 
        "%s(%s)", 
        "../../ld/ldmain.c", 
        "%D: first defined here", 
        "using multiple gp values", 
        "%C: %s%s", 
        "%P: %s%s", 
        "%B: %s%s", 
        "%B: warning: common is here", 
        "%B: warning: defined here", 
        "elf_i386", 
        "/usr/share/locale", 
        "--sysroot=", 
        "i686-pc-linux-gnu", 
        "COLLECT_NO_DEMANGLE", 
        "LDEMULATION", 
        "%P%F: missing argument to -m", 
        "-mips1", 
        "-mips2", 
        "-mips3", 
        "-mips4", 
        "-mips5", 
        "-mips32", 
        "-mips32r2", 
        "-mips32r6", 
        "-mips64", 
        "-mips64r2", 
        "-mips64r6", 
        "built in linker script", 
        "using external linker script:", 
        "using internal linker script:", 
        "%P%F: no input files", 
        "%P: mode %s", 
        "%F%B: final close failed: %E", 
        "%P: Error writing file `%s'", 
        "%P: Error closing file `%s'", 
        "%X%P: %s: %E", 
        "multiple_definition", 
        "reloc_overflow", 
        "../../ld/ldwrite.c", 
        "$GDB_STRINGS$", 
        "$GDB_SYMBOLS$", 
        "%F%P: final link failed: %E", 
        "%P%F: bfd_new_link_order failed", 
        "%F%P: cannot create split section name for %s", 
        "%F%P: clone section failed: %E", 
        "build_link_order", 
        "%P%F: bfd_hash_allocate failed creating symbol %s", 
        "%P: warning: address of `%s' isn't multiple of maximum page size", 
        "%F%S can not PROVIDE assignment to location counter", 
        "%F%S invalid assignment to location counter", 
        "%F%S assignment to location counter invalid outside of SECTIONS", 
        "%F%S cannot move location counter backwards (from %V to %V)", 
        "%P%F:%s: hash creation failed", 
        "%P%F: bfd_hash_lookup failed creating symbol %s", 
        "%X%S: unresolvable symbol `%s' referenced in expression", 
        "%F%S: undefined symbol `%s' referenced in expression", 
        "%F%S: undefined section `%s' referenced in expression", 
        "%F%S: undefined MEMORY region `%s' referenced in expression", 
        "%F%S: unknown constant `%s' referenced in expression", 
        "%F%S: nonconstant expression for %s", 
        "<code %d>", 
        "%X%P: %s", 
        "../../ld/ldexp.c", 
        "%F%S %% by zero", 
        "%F%S / by zero", 
        "MAXPAGESIZE", 
        "COMMONPAGESIZE", 
        "NULL TREE", 
        "%s+0x%v", 
        "PROVIDE (%s = ", 
        "ASSERT (", 
        "ASSERT", 
        "GNUTARGET", 
        "%S SYSLIB ignored", 
        "%S HLL ignored", 
        "Supported emulations: ", 
        "%P: unrecognised emulation mode: %s", 
        "  no emulation specific options.", 
        "GNU ld %s", 
        "  Supported emulations:", 
        "(GNU Binutils for Ubuntu) 2.30", 
        "Copyright (C) 2018 Free Software Foundation, Inc.", 
        "This program is free software; you may redistribute it under the terms of", 
        "the GNU General Public License version 3 or (at your option) a later version.", 
        "This program has absolutely no warranty.", 
        "%P: internal error: aborting at %s:%d in %s", 
        "%P: internal error: aborting at %s:%d", 
        "%P%F: please report this bug", 
        "../../ld/ldmisc.c", 
        "no symbol", 
        "%s generated", 
        "%s+0x%v (type %s)", 
        "%B: In function `%T':", 
        "(%A+0x%v)", 
        "%F%P: internal error %s %d", 
        "vfinfo", 
        "/ldscripts", 
        "cannot find script file %s", 
        "opened script file %s", 
        "/usr/lib/i386-linux-gnu", 
        "/usr/bin", 
        "/usr/i686-linux-gnu/bin", 
        "attempt to open %s failed", 
        "attempt to open %s succeeded", 
        "%P: cannot find %s (%s): %E", 
        "%P: cannot find %s: %E", 
        "%P: cannot find %s inside %s", 
        "%P: cannot find %s", 
        "%P%F: cannot open linker script file %s: %E", 
        "%F%P: invalid BFD target `%s'", 
        "%P: skipping incompatible %s when searching for %s", 
        "%F%P: attempted static link of dynamic object `%s'", 
        "%P%F: cannot represent machine `%s'", 
        "../../ld/ldcref.c", 
        "%X%P: cref alloc failed: %E", 
        "Cross Reference Table", 
        "Symbol", 
        "No symbols", 
        "%P: symbol `%T' missing from main hash table", 
        "%X%C: prohibited cross reference from %s to `%T' in %s", 
        "%X%P: bfd_hash_table_init of cref table failed: %E", 
        "%X%P: cref_hash_lookup failed: %E", 
        "%P%F: plugin_strdup failed to allocate memory: %s", 
        "%P%F: unsupported input file size: %s (%ld bytes)", 
        "%P%F: %s: non-ELF symbol in ELF BFD!", 
        "%P%F: unknown ELF symbol visibility: %d!", 
        "%P%F: %s: plugin symbol table corrupt (sym type %d)", 
        "%P: %B: symbol `%s' definition: %d, visibility: %d, resolution: %d", 
        "could not create dummy IR bfd: %F%E", 
        "%P%F: plugin failed to allocate memory for input: %s", 
        "%P%F: %s: plugin reported error claiming file", 
        "%P%F: %s: error loading plugin: %s", 
        "%P: %s: error in plugin cleanup: %d (ignored)", 
        "../../ld/plugin.c", 
        ".gnu.linkonce.t.", 
        "%P: warning: ", 
        ": error: ", 
        " (symbol from plugin)", 
        "<no plugin>", 
        "%P: %s: duplicated plugin", 
        "pass-through=", 
        "_onload", 
        "%P%F: %s: plugin error: %d", 
        "get_symbols", 
        "/dev/urandom", 
        "/* Script for ld -Ur: link w/out relocation, do create constructors */", 
        "/* Copyright (C) 2014-2018 Free Software Foundation, Inc.", 
        "   Copying and distribution of this script, with or without modification,", 
        "   are permitted in any medium without royalty provided the copyright", 
        "   notice and this notice are preserved.  */", 
        "OUTPUT_FORMAT(\"elf32-i386\", \"elf32-i386\",", 
        "      \"elf32-i386\")", 
        "OUTPUT_ARCH(i386)", 
        " /* For some reason, the Solaris linker makes bad executables", 
        "  if gld -r is used and the intermediate file has sections starting", 
        "  at non-zero addresses.  Could be a Solaris ld bug, could be a GNU ld", 
        "  bug.  But for now assigning the zero vmas works.  */", 
        "SECTIONS", 
        "  /* Read-only sections, merged into text segment: */", 
        "  .interp       0 : { *(.interp) }", 
        "  .note.gnu.build-id : { *(.note.gnu.build-id) }", 
        "  .hash         0 : { *(.hash) }", 
        "  .gnu.hash     0 : { *(.gnu.hash) }", 
        "  .dynsym       0 : { *(.dynsym) }", 
        "  .dynstr       0 : { *(.dynstr) }", 
        "  .gnu.version  0 : { *(.gnu.version) }", 
        "  .gnu.version_d 0: { *(.gnu.version_d) }", 
        "  .gnu.version_r 0: { *(.gnu.version_r) }", 
        "  .rel.init     0 : { *(.rel.init) }", 
        "  .rel.text     0 : { *(.rel.text) }", 
        "  .rel.fini     0 : { *(.rel.fini) }", 
        "  .rel.rodata   0 : { *(.rel.rodata) }", 
        "  .rel.data.rel.ro 0 : { *(.rel.data.rel.ro) }", 
        "  .rel.data     0 : { *(.rel.data) }", 
        "  .rel.tdata", 
        "0 : { *(.rel.tdata) }", 
        "  .rel.tbss", 
        "0 : { *(.rel.tbss) }", 
        "  .rel.ctors    0 : { *(.rel.ctors) }", 
        "  .rel.dtors    0 : { *(.rel.dtors) }", 
        "  .rel.got      0 : { *(.rel.got) }", 
        "  .rel.bss      0 : { *(.rel.bss) }", 
        "  .rel.ifunc    0 : { *(.rel.ifunc) }", 
        "  .rel.plt      0 :", 
        "      *(.rel.plt)", 
        "  .init         0 :", 
        "    KEEP (*(SORT_NONE(.init)))", 
        "  .plt          0 : { *(.plt) *(.iplt) }", 
        ".plt.got      0 : { *(.plt.got) }", 
        ".plt.sec      0 : { *(.plt.sec) }", 
        "  .text         0 :", 
        "    *(.text .stub)", 
        "    /* .gnu.warning sections are handled specially by elf32.em.  */", 
        "    *(.gnu.warning)", 
        "  .fini         0 :", 
        "    KEEP (*(SORT_NONE(.fini)))", 
        "  .rodata       0 : { *(.rodata) }", 
        "  .rodata1      0 : { *(.rodata1) }", 
        "  .eh_frame_hdr : { *(.eh_frame_hdr)  }", 
        "  .eh_frame     0 : ONLY_IF_RO { KEEP (*(.eh_frame))  }", 
        "  .gcc_except_table 0 : ONLY_IF_RO { *(.gcc_except_table", 
        "  .gcc_except_table.*) }", 
        "  .gnu_extab 0 : ONLY_IF_RO { *(.gnu_extab*) }", 
        "  /* These sections are generated by the Sun/Oracle C++ compiler.  */", 
        "  .exception_ranges 0 : ONLY_IF_RO { *(.exception_ranges", 
        "  .exception_ranges*) }", 
        "  /* Adjust the address for the data segment.  We want to adjust up to", 
        "     the same address within the page on the next page up.  */", 
        "  /* Exception handling  */", 
        "  .eh_frame     0 : ONLY_IF_RW { KEEP (*(.eh_frame))  }", 
        "  .gnu_extab    0 : ONLY_IF_RW { *(.gnu_extab) }", 
        "  .gcc_except_table 0 : ONLY_IF_RW { *(.gcc_except_table .gcc_except_table.*) }", 
        "  .exception_ranges 0 : ONLY_IF_RW { *(.exception_ranges .exception_ranges*) }", 
        "  /* Thread Local Storage sections  */", 
        "  .tdata", 
        "0 : { *(.tdata) }", 
        "  .tbss", 
        "0 : { *(.tbss) }", 
        "  .jcr          0 : { KEEP (*(.jcr)) }", 
        "  .dynamic      0 : { *(.dynamic) }", 
        "  .got          0 : { *(.got) *(.igot) }", 
        "  .got.plt      0 : { *(.got.plt)  *(.igot.plt) }", 
        "  .data         0 :", 
        "    *(.data)", 
        "    SORT(CONSTRUCTORS)", 
        "  .data1        0 : { *(.data1) }", 
        "  .bss          0 :", 
        "   *(.bss)", 
        "   *(COMMON)", 
        "   /* Align here to ensure that the .bss section occupies space up to", 
        "      _end.  Align after .bss to ensure correct alignment even if the", 
        "      .bss section disappears because there are no input sections.", 
        "      FIXME: Why do we need it? When there is no .bss section, we don't", 
        "      pad the .data section.  */", 
        "  /* Stabs debugging sections.  */", 
        "  .stab          0 : { *(.stab) }", 
        "  .stabstr       0 : { *(.stabstr) }", 
        "  .stab.excl     0 : { *(.stab.excl) }", 
        "  .stab.exclstr  0 : { *(.stab.exclstr) }", 
        "  .stab.index    0 : { *(.stab.index) }", 
        "  .stab.indexstr 0 : { *(.stab.indexstr) }", 
        "  .comment       0 : { *(.comment) }", 
        "  /* DWARF debug sections.", 
        "     Symbols in the DWARF debugging sections are relative to the beginning", 
        "     of the section so we begin them at 0.  */", 
        "  /* DWARF 1 */", 
        "  .debug          0 : { *(.debug) }", 
        "  .line           0 : { *(.line) }", 
        "  /* GNU DWARF 1 extensions */", 
        "  .debug_srcinfo  0 : { *(.debug_srcinfo) }", 
        "  .debug_sfnames  0 : { *(.debug_sfnames) }", 
        "  /* DWARF 1.1 and DWARF 2 */", 
        "  .debug_aranges  0 : { *(.debug_aranges) }", 
        "  .debug_pubnames 0 : { *(.debug_pubnames) }", 
        "  /* DWARF 2 */", 
        "  .debug_info     0 : { *(.debug_info) }", 
        "  .debug_abbrev   0 : { *(.debug_abbrev) }", 
        "  .debug_line     0 : { *(.debug_line .debug_line.* .debug_line_end ) }", 
        "  .debug_frame    0 : { *(.debug_frame) }", 
        "  .debug_str      0 : { *(.debug_str) }", 
        "  .debug_loc      0 : { *(.debug_loc) }", 
        "  .debug_macinfo  0 : { *(.debug_macinfo) }", 
        "  /* SGI/MIPS DWARF 2 extensions */", 
        "  .debug_weaknames 0 : { *(.debug_weaknames) }", 
        "  .debug_funcnames 0 : { *(.debug_funcnames) }", 
        "  .debug_typenames 0 : { *(.debug_typenames) }", 
        "  .debug_varnames  0 : { *(.debug_varnames) }", 
        "  /* DWARF 3 */", 
        "  .debug_pubtypes 0 : { *(.debug_pubtypes) }", 
        "  .debug_ranges   0 : { *(.debug_ranges) }", 
        "  /* DWARF Extension.  */", 
        "  .debug_macro    0 : { *(.debug_macro) }", 
        "  .debug_addr     0 : { *(.debug_addr) }", 
        "  .gnu.attributes 0 : { KEEP (*(.gnu.attributes)) }", 
        "/* Script for ld --shared -z separate-code: link shared library with separate code segment */", 
        "/* Copyright (C) 2014-2018 Free Software Foundation, Inc.", 
        "   Copying and distribution of this script, with or without modification,", 
        "   are permitted in any medium without royalty provided the copyright", 
        "   notice and this notice are preserved.  */", 
        "OUTPUT_FORMAT(\"elf32-i386\", \"elf32-i386\",", 
        "      \"elf32-i386\")", 
        "OUTPUT_ARCH(i386)", 
        "ENTRY(_start)", 
        "SEARCH_DIR(\"=/usr/local/lib/i386-linux-gnu\"); SEARCH_DIR(\"=/lib/i386-linux-gnu\"); SEARCH_DIR(\"=/usr/lib/i386-linux-gnu\"); SEARCH_DIR(\"=/usr/lib/i386-linux-gnu32\"); SEARCH_DIR(\"=/usr/local/lib32\"); SEARCH_DIR(\"=/lib32\"); SEARCH_DIR(\"=/usr/lib32\"); SEARCH_DIR(\"=/usr/local/lib\"); SEARCH_DIR(\"=/lib\"); SEARCH_DIR(\"=/usr/lib\"); SEARCH_DIR(\"=/usr/i686-linux-gnu/lib32\"); SEARCH_DIR(\"=/usr/i686-linux-gnu/lib\");", 
        "SECTIONS", 
        "  /* Read-only sections, merged into text segment: */", 
        "  . = SEGMENT_START(\"text-segment\", 0) + SIZEOF_HEADERS;", 
        "  .note.gnu.build-id : { *(.note.gnu.build-id) }", 
        "  .hash           : { *(.hash) }", 
        "  .gnu.hash       : { *(.gnu.hash) }", 
        "  .dynsym         : { *(.dynsym) }", 
        "  .dynstr         : { *(.dynstr) }", 
        "  .gnu.version    : { *(.gnu.version) }", 
        "  .gnu.version_d  : { *(.gnu.version_d) }", 
        "  .gnu.version_r  : { *(.gnu.version_r) }", 
        "  .rel.init       : { *(.rel.init) }", 
        "  .rel.text       : { *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*) }", 
        "  .rel.fini       : { *(.rel.fini) }", 
        "  .rel.rodata     : { *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*) }", 
        "  .rel.data.rel.ro   : { *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*) }", 
        "  .rel.data       : { *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*) }", 
        "  .rel.tdata", 
        "  : { *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*) }", 
        "  .rel.tbss", 
        "  : { *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*) }", 
        "  .rel.ctors      : { *(.rel.ctors) }", 
        "  .rel.dtors      : { *(.rel.dtors) }", 
        "  .rel.got        : { *(.rel.got) }", 
        "  .rel.bss        : { *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*) }", 
        "  .rel.ifunc      : { *(.rel.ifunc) }", 
        "  .rel.plt        :", 
        "      *(.rel.plt)", 
        "      *(.rel.iplt)", 
        "  . = ALIGN(CONSTANT (MAXPAGESIZE));", 
        "  .init           :", 
        "    KEEP (*(SORT_NONE(.init)))", 
        "  .plt            : { *(.plt) *(.iplt) }", 
        ".plt.got        : { *(.plt.got) }", 
        ".plt.sec        : { *(.plt.sec) }", 
        "  .text           :", 
        "    *(.text.unlikely .text.*_unlikely .text.unlikely.*)", 
        "    *(.text.exit .text.exit.*)", 
        "    *(.text.startup .text.startup.*)", 
        "    *(.text.hot .text.hot.*)", 
        "    *(.text .stub .text.* .gnu.linkonce.t.*)", 
        "    /* .gnu.warning sections are handled specially by elf32.em.  */", 
        "    *(.gnu.warning)", 
        "  .fini           :", 
        "    KEEP (*(SORT_NONE(.fini)))", 
        "  PROVIDE (__etext = .);", 
        "  PROVIDE (_etext = .);", 
        "  PROVIDE (etext = .);", 
        "  . = ALIGN(CONSTANT (MAXPAGESIZE));", 
        "  /* Adjust the address for the rodata segment.  We want to adjust up to", 
        "     the same address within the page on the next page up.  */", 
        "  . = SEGMENT_START(\"rodata-segment\", ALIGN(CONSTANT (MAXPAGESIZE)) + (. & (CONSTANT (MAXPAGESIZE) - 1)));", 
        "  .rodata         : { *(.rodata .rodata.* .gnu.linkonce.r.*) }", 
        "  .rodata1        : { *(.rodata1) }", 
        "  .eh_frame_hdr : { *(.eh_frame_hdr) *(.eh_frame_entry .eh_frame_entry.*) }", 
        "  .eh_frame       : ONLY_IF_RO { KEEP (*(.eh_frame)) *(.eh_frame.*) }", 
        "  .gcc_except_table   : ONLY_IF_RO { *(.gcc_except_table", 
        "  .gcc_except_table.*) }", 
        "  .gnu_extab   : ONLY_IF_RO { *(.gnu_extab*) }", 
        "  /* These sections are generated by the Sun/Oracle C++ compiler.  */", 
        "  .exception_ranges   : ONLY_IF_RO { *(.exception_ranges", 
        "  .exception_ranges*) }", 
        "  /* Adjust the address for the data segment.  We want to adjust up to", 
        "     the same address within the page on the next page up.  */", 
        "  . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE));", 
        "  /* Exception handling  */", 
        "  .eh_frame       : ONLY_IF_RW { KEEP (*(.eh_frame)) *(.eh_frame.*) }", 
        "  .gnu_extab      : ONLY_IF_RW { *(.gnu_extab) }", 
        "  .gcc_except_table   : ONLY_IF_RW { *(.gcc_except_table .gcc_except_table.*) }", 
        "  .exception_ranges   : ONLY_IF_RW { *(.exception_ranges .exception_ranges*) }", 
        "  /* Thread Local Storage sections  */", 
        "  .tdata", 
        "  : { *(.tdata .tdata.* .gnu.linkonce.td.*) }", 
        "  .tbss", 
        "  : { *(.tbss .tbss.* .gnu.linkonce.tb.*) *(.tcommon) }", 
        "  .preinit_array     :", 
        "    KEEP (*(.preinit_array))", 
        "  .init_array     :", 
        "    KEEP (*(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*)))", 
        "    KEEP (*(.init_array EXCLUDE_FILE (*crtbegin.o *crtbegin?.o *crtend.o *crtend?.o ) .ctors))", 
        "  .fini_array     :", 
        "    KEEP (*(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*)))", 
        "    KEEP (*(.fini_array EXCLUDE_FILE (*crtbegin.o *crtbegin?.o *crtend.o *crtend?.o ) .dtors))", 
        "  .ctors          :", 
        "    /* gcc uses crtbegin.o to find the start of", 
        "       the constructors, so we make sure it is", 
        "       first.  Because this is a wildcard, it", 
        "       doesn't matter if the user does not", 
        "       actually link against crtbegin.o; the", 
        "       linker won't look for a file to match a", 
        "       wildcard.  The wildcard also means that it", 
        "       doesn't matter which directory crtbegin.o", 
        "       is in.  */", 
        "    KEEP (*crtbegin.o(.ctors))", 
        "    KEEP (*crtbegin?.o(.ctors))", 
        "    /* We don't want to include the .ctor section from", 
        "       the crtend.o file until after the sorted ctors.", 
        "       The .ctor section from the crtend file contains the", 
        "       end of ctors marker and it must be last */", 
        "    KEEP (*(EXCLUDE_FILE (*crtend.o *crtend?.o ) .ctors))", 
        "    KEEP (*(SORT(.ctors.*)))", 
        "    KEEP (*(.ctors))", 
        "  .dtors          :", 
        "    KEEP (*crtbegin.o(.dtors))", 
        "    KEEP (*crtbegin?.o(.dtors))", 
        "    KEEP (*(EXCLUDE_FILE (*crtend.o *crtend?.o ) .dtors))", 
        "    KEEP (*(SORT(.dtors.*)))", 
        "    KEEP (*(.dtors))", 
        "  .jcr            : { KEEP (*(.jcr)) }", 
        "  .data.rel.ro : { *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*) *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*) }", 
        "  .dynamic        : { *(.dynamic) }", 
        "  .got            : { *(.got) *(.igot) }", 
        "  . = DATA_SEGMENT_RELRO_END (SIZEOF (.got.plt) >= 12 ? 12 : 0, .);", 
        "  .got.plt        : { *(.got.plt)  *(.igot.plt) }", 
        "  .data           :", 
        "    *(.data .data.* .gnu.linkonce.d.*)", 
        "    SORT(CONSTRUCTORS)", 
        "  .data1          : { *(.data1) }", 
        "  _edata = .; PROVIDE (edata = .);", 
        "  . = .;", 
        "  __bss_start = .;", 
        "  .bss            :", 
        "   *(.dynbss)", 
        "   *(.bss .bss.* .gnu.linkonce.b.*)", 
        "   *(COMMON)", 
        "   /* Align here to ensure that the .bss section occupies space up to", 
        "      _end.  Align after .bss to ensure correct alignment even if the", 
        "      .bss section disappears because there are no input sections.", 
        "      FIXME: Why do we need it? When there is no .bss section, we don't", 
        "      pad the .data section.  */", 
        "   . = ALIGN(. != 0 ? 32 / 8 : 1);", 
        "  . = ALIGN(32 / 8);", 
        "  . = SEGMENT_START(\"ldata-segment\", .);", 
        "  . = ALIGN(32 / 8);", 
        "  _end = .; PROVIDE (end = .);", 
        "  . = DATA_SEGMENT_END (.);", 
        "  /* Stabs debugging sections.  */", 
        "  .stab          0 : { *(.stab) }", 
        "  .stabstr       0 : { *(.stabstr) }", 
        "  .stab.excl     0 : { *(.stab.excl) }", 
        "  .stab.exclstr  0 : { *(.stab.exclstr) }", 
        "  .stab.index    0 : { *(.stab.index) }", 
        "  .stab.indexstr 0 : { *(.stab.indexstr) }", 
        "  .comment       0 : { *(.comment) }", 
        "  /* DWARF debug sections.", 
        "     Symbols in the DWARF debugging sections are relative to the beginning", 
        "     of the section so we begin them at 0.  */", 
        "  /* DWARF 1 */", 
        "  .debug          0 : { *(.debug) }", 
        "  .line           0 : { *(.line) }", 
        "  /* GNU DWARF 1 extensions */", 
        "  .debug_srcinfo  0 : { *(.debug_srcinfo) }", 
        "  .debug_sfnames  0 : { *(.debug_sfnames) }", 
        "  /* DWARF 1.1 and DWARF 2 */", 
        "  .debug_aranges  0 : { *(.debug_aranges) }", 
        "  .debug_pubnames 0 : { *(.debug_pubnames) }", 
        "  /* DWARF 2 */", 
        "  .debug_info     0 : { *(.debug_info .gnu.linkonce.wi.*) }", 
        "  .debug_abbrev   0 : { *(.debug_abbrev) }", 
        "  .debug_line     0 : { *(.debug_line .debug_line.* .debug_line_end ) }", 
        "  .debug_frame    0 : { *(.debug_frame) }", 
        "  .debug_str      0 : { *(.debug_str) }", 
        "  .debug_loc      0 : { *(.debug_loc) }", 
        "  .debug_macinfo  0 : { *(.debug_macinfo) }", 
        "  /* SGI/MIPS DWARF 2 extensions */", 
        "  .debug_weaknames 0 : { *(.debug_weaknames) }", 
        "  .debug_funcnames 0 : { *(.debug_funcnames) }", 
        "  .debug_typenames 0 : { *(.debug_typenames) }", 
        "  .debug_varnames  0 : { *(.debug_varnames) }", 
        "  /* DWARF 3 */", 
        "  .debug_pubtypes 0 : { *(.debug_pubtypes) }", 
        "  .debug_ranges   0 : { *(.debug_ranges) }", 
        "  /* DWARF Extension.  */", 
        "  .debug_macro    0 : { *(.debug_macro) }", 
        "  .debug_addr     0 : { *(.debug_addr) }", 
        "  .gnu.attributes 0 : { KEEP (*(.gnu.attributes)) }", 
        "  /DISCARD/ : { *(.note.GNU-stack) *(.gnu_debuglink) *(.gnu.lto_*) }", 
        "/* Script for -N: mix text and data on same page; don't align data */", 
        "/* Copyright (C) 2014-2018 Free Software Foundation, Inc.", 
        "   Copying and distribution of this script, with or without modification,", 
        "   are permitted in any medium without royalty provided the copyright", 
        "   notice and this notice are preserved.  */", 
        "OUTPUT_FORMAT(\"elf32-i386\", \"elf32-i386\",", 
        "      \"elf32-i386\")", 
        "OUTPUT_ARCH(i386)", 
        "ENTRY(_start)", 
        "SEARCH_DIR(\"=/usr/local/lib/i386-linux-gnu\"); SEARCH_DIR(\"=/lib/i386-linux-gnu\"); SEARCH_DIR(\"=/usr/lib/i386-linux-gnu\"); SEARCH_DIR(\"=/usr/lib/i386-linux-gnu32\"); SEARCH_DIR(\"=/usr/local/lib32\"); SEARCH_DIR(\"=/lib32\"); SEARCH_DIR(\"=/usr/lib32\"); SEARCH_DIR(\"=/usr/local/lib\"); SEARCH_DIR(\"=/lib\"); SEARCH_DIR(\"=/usr/lib\"); SEARCH_DIR(\"=/usr/i686-linux-gnu/lib32\"); SEARCH_DIR(\"=/usr/i686-linux-gnu/lib\");", 
        "SECTIONS", 
        "  /* Read-only sections, merged into text segment: */", 
        "  PROVIDE (__executable_start = SEGMENT_START(\"text-segment\", 0x08048000)); . = SEGMENT_START(\"text-segment\", 0x08048000) + SIZEOF_HEADERS;", 
        "  .interp         : { *(.interp) }", 
        "  .note.gnu.build-id : { *(.note.gnu.build-id) }", 
        "  .hash           : { *(.hash) }", 
        "  .gnu.hash       : { *(.gnu.hash) }", 
        "  .dynsym         : { *(.dynsym) }", 
        "  .dynstr         : { *(.dynstr) }", 
        "  .gnu.version    : { *(.gnu.version) }", 
        "  .gnu.version_d  : { *(.gnu.version_d) }", 
        "  .gnu.version_r  : { *(.gnu.version_r) }", 
        "  .rel.init       : { *(.rel.init) }", 
        "  .rel.text       : { *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*) }", 
        "  .rel.fini       : { *(.rel.fini) }", 
        "  .rel.rodata     : { *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*) }", 
        "  .rel.data.rel.ro   : { *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*) }", 
        "  .rel.data       : { *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*) }", 
        "  .rel.tdata", 
        "  : { *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*) }", 
        "  .rel.tbss", 
        "  : { *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*) }", 
        "  .rel.ctors      : { *(.rel.ctors) }", 
        "  .rel.dtors      : { *(.rel.dtors) }", 
        "  .rel.got        : { *(.rel.got) }", 
        "  .rel.bss        : { *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*) }", 
        "  .rel.ifunc      : { *(.rel.ifunc) }", 
        "  .rel.plt        :", 
        "      *(.rel.plt)", 
        "      PROVIDE_HIDDEN (__rel_iplt_start = .);", 
        "      *(.rel.iplt)", 
        "      PROVIDE_HIDDEN (__rel_iplt_end = .);", 
        "  .init           :", 
        "    KEEP (*(SORT_NONE(.init)))", 
        "  .plt            : { *(.plt) *(.iplt) }", 
        ".plt.got        : { *(.plt.got) }", 
        ".plt.sec        : { *(.plt.sec) }", 
        "  .text           :", 
        "    *(.text.unlikely .text.*_unlikely .text.unlikely.*)", 
        "    *(.text.exit .text.exit.*)", 
        "    *(.text.startup .text.startup.*)", 
        "    *(.text.hot .text.hot.*)", 
        "    *(.text .stub .text.* .gnu.linkonce.t.*)", 
        "    /* .gnu.warning sections are handled specially by elf32.em.  */", 
        "    *(.gnu.warning)", 
        "  .fini           :", 
        "    KEEP (*(SORT_NONE(.fini)))", 
        "  PROVIDE (__etext = .);", 
        "  PROVIDE (_etext = .);", 
        "  PROVIDE (etext = .);", 
        "  .rodata         : { *(.rodata .rodata.* .gnu.linkonce.r.*) }", 
        "  .rodata1        : { *(.rodata1) }", 
        "  .eh_frame_hdr : { *(.eh_frame_hdr) *(.eh_frame_entry .eh_frame_entry.*) }", 
        "  .eh_frame       : ONLY_IF_RO { KEEP (*(.eh_frame)) *(.eh_frame.*) }", 
        "  .gcc_except_table   : ONLY_IF_RO { *(.gcc_except_table", 
        "  .gcc_except_table.*) }", 
        "  .gnu_extab   : ONLY_IF_RO { *(.gnu_extab*) }", 
        "  /* These sections are generated by the Sun/Oracle C++ compiler.  */", 
        "  .exception_ranges   : ONLY_IF_RO { *(.exception_ranges", 
        "  .exception_ranges*) }", 
        "  /* Adjust the address for the data segment.  We want to adjust up to", 
        "     the same address within the page on the next page up.  */", 
        "  . = .;", 
        "  /* Exception handling  */", 
        "  .eh_frame       : ONLY_IF_RW { KEEP (*(.eh_frame)) *(.eh_frame.*) }", 
        "  .gnu_extab      : ONLY_IF_RW { *(.gnu_extab) }", 
        "  .gcc_except_table   : ONLY_IF_RW { *(.gcc_except_table .gcc_except_table.*) }", 
        "  .exception_ranges   : ONLY_IF_RW { *(.exception_ranges .exception_ranges*) }", 
        "  /* Thread Local Storage sections  */", 
        "  .tdata", 
        "  : { *(.tdata .tdata.* .gnu.linkonce.td.*) }", 
        "  .tbss", 
        "  : { *(.tbss .tbss.* .gnu.linkonce.tb.*) *(.tcommon) }", 
        "  .preinit_array     :", 
        "    PROVIDE_HIDDEN (__preinit_array_start = .);", 
        "    KEEP (*(.preinit_array))", 
        "    PROVIDE_HIDDEN (__preinit_array_end = .);", 
        "  .init_array     :", 
        "    PROVIDE_HIDDEN (__init_array_start = .);", 
        "    KEEP (*(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*)))", 
        "    KEEP (*(.init_array EXCLUDE_FILE (*crtbegin.o *crtbegin?.o *crtend.o *crtend?.o ) .ctors))", 
        "    PROVIDE_HIDDEN (__init_array_end = .);", 
        "  .fini_array     :", 
        "    PROVIDE_HIDDEN (__fini_array_start = .);", 
        "    KEEP (*(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*)))", 
        "    KEEP (*(.fini_array EXCLUDE_FILE (*crtbegin.o *crtbegin?.o *crtend.o *crtend?.o ) .dtors))", 
        "    PROVIDE_HIDDEN (__fini_array_end = .);", 
        "  .ctors          :", 
        "    /* gcc uses crtbegin.o to find the start of", 
        "       the constructors, so we make sure it is", 
        "       first.  Because this is a wildcard, it", 
        "       doesn't matter if the user does not", 
        "       actually link against crtbegin.o; the", 
        "       linker won't look for a file to match a", 
        "       wildcard.  The wildcard also means that it", 
        "       doesn't matter which directory crtbegin.o", 
        "       is in.  */", 
        "    KEEP (*crtbegin.o(.ctors))", 
        "    KEEP (*crtbegin?.o(.ctors))", 
        "    /* We don't want to include the .ctor section from", 
        "       the crtend.o file until after the sorted ctors.", 
        "       The .ctor section from the crtend file contains the", 
        "       end of ctors marker and it must be last */", 
        "    KEEP (*(EXCLUDE_FILE (*crtend.o *crtend?.o ) .ctors))", 
        "    KEEP (*(SORT(.ctors.*)))", 
        "    KEEP (*(.ctors))", 
        "  .dtors          :", 
        "    KEEP (*crtbegin.o(.dtors))", 
        "    KEEP (*crtbegin?.o(.dtors))", 
        "    KEEP (*(EXCLUDE_FILE (*crtend.o *crtend?.o ) .dtors))", 
        "    KEEP (*(SORT(.dtors.*)))", 
        "    KEEP (*(.dtors))", 
        "  .jcr            : { KEEP (*(.jcr)) }", 
        "  .data.rel.ro : { *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*) *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*) }", 
        "  .dynamic        : { *(.dynamic) }", 
        "  .got            : { *(.got) *(.igot) }", 
        "  .got.plt        : { *(.got.plt)  *(.igot.plt) }", 
        "  .data           :", 
        "    *(.data .data.* .gnu.linkonce.d.*)", 
        "    SORT(CONSTRUCTORS)", 
        "  .data1          : { *(.data1) }", 
        "  _edata = .; PROVIDE (edata = .);", 
        "  . = .;", 
        "  __bss_start = .;", 
        "  .bss            :", 
        "   *(.dynbss)", 
        "   *(.bss .bss.* .gnu.linkonce.b.*)", 
        "   *(COMMON)", 
        "   /* Align here to ensure that the .bss section occupies space up to", 
        "      _end.  Align after .bss to ensure correct alignment even if the", 
        "      .bss section disappears because there are no input sections.", 
        "      FIXME: Why do we need it? When there is no .bss section, we don't", 
        "      pad the .data section.  */", 
        "   . = ALIGN(. != 0 ? 32 / 8 : 1);", 
        "  . = ALIGN(32 / 8);", 
        "  . = SEGMENT_START(\"ldata-segment\", .);", 
        "  . = ALIGN(32 / 8);", 
        "  _end = .; PROVIDE (end = .);", 
        "  /* Stabs debugging sections.  */", 
        "  .stab          0 : { *(.stab) }", 
        "  .stabstr       0 : { *(.stabstr) }", 
        "  .stab.excl     0 : { *(.stab.excl) }", 
        "  .stab.exclstr  0 : { *(.stab.exclstr) }", 
        "  .stab.index    0 : { *(.stab.index) }", 
        "  .stab.indexstr 0 : { *(.stab.indexstr) }", 
        "  .comment       0 : { *(.comment) }", 
        "  /* DWARF debug sections.", 
        "     Symbols in the DWARF debugging sections are relative to the beginning", 
        "     of the section so we begin them at 0.  */", 
        "  /* DWARF 1 */", 
        "  .debug          0 : { *(.debug) }", 
        "  .line           0 : { *(.line) }", 
        "  /* GNU DWARF 1 extensions */", 
        "  .debug_srcinfo  0 : { *(.debug_srcinfo) }", 
        "  .debug_sfnames  0 : { *(.debug_sfnames) }", 
        "  /* DWARF 1.1 and DWARF 2 */", 
        "  .debug_aranges  0 : { *(.debug_aranges) }", 
        "  .debug_pubnames 0 : { *(.debug_pubnames) }", 
        "  /* DWARF 2 */", 
        "  .debug_info     0 : { *(.debug_info .gnu.linkonce.wi.*) }", 
        "  .debug_abbrev   0 : { *(.debug_abbrev) }", 
        "  .debug_line     0 : { *(.debug_line .debug_line.* .debug_line_end ) }", 
        "  .debug_frame    0 : { *(.debug_frame) }", 
        "  .debug_str      0 : { *(.debug_str) }", 
        "  .debug_loc      0 : { *(.debug_loc) }", 
        "  .debug_macinfo  0 : { *(.debug_macinfo) }", 
        "  /* SGI/MIPS DWARF 2 extensions */", 
        "  .debug_weaknames 0 : { *(.debug_weaknames) }", 
        "  .debug_funcnames 0 : { *(.debug_funcnames) }", 
        "  .debug_typenames 0 : { *(.debug_typenames) }", 
        "  .debug_varnames  0 : { *(.debug_varnames) }", 
        "  /* DWARF 3 */", 
        "  .debug_pubtypes 0 : { *(.debug_pubtypes) }", 
        "  .debug_ranges   0 : { *(.debug_ranges) }", 
        "  /* DWARF Extension.  */", 
        "  .debug_macro    0 : { *(.debug_macro) }", 
        "  .debug_addr     0 : { *(.debug_addr) }", 
        "  .gnu.attributes 0 : { KEEP (*(.gnu.attributes)) }", 
        "  /DISCARD/ : { *(.note.GNU-stack) *(.gnu_debuglink) *(.gnu.lto_*) }", 
        "/* Script for -n: mix text and data on same page */", 
        "/* Copyright (C) 2014-2018 Free Software Foundation, Inc.", 
        "   Copying and distribution of this script, with or without modification,", 
        "   are permitted in any medium without royalty provided the copyright", 
        "   notice and this notice are preserved.  */", 
        "OUTPUT_FORMAT(\"elf32-i386\", \"elf32-i386\",", 
        "      \"elf32-i386\")", 
        "OUTPUT_ARCH(i386)", 
        "ENTRY(_start)", 
        "SEARCH_DIR(\"=/usr/local/lib/i386-linux-gnu\"); SEARCH_DIR(\"=/lib/i386-linux-gnu\"); SEARCH_DIR(\"=/usr/lib/i386-linux-gnu\"); SEARCH_DIR(\"=/usr/lib/i386-linux-gnu32\"); SEARCH_DIR(\"=/usr/local/lib32\"); SEARCH_DIR(\"=/lib32\"); SEARCH_DIR(\"=/usr/lib32\"); SEARCH_DIR(\"=/usr/local/lib\"); SEARCH_DIR(\"=/lib\"); SEARCH_DIR(\"=/usr/lib\"); SEARCH_DIR(\"=/usr/i686-linux-gnu/lib32\"); SEARCH_DIR(\"=/usr/i686-linux-gnu/lib\");", 
        "SECTIONS", 
        "  /* Read-only sections, merged into text segment: */", 
        "  PROVIDE (__executable_start = SEGMENT_START(\"text-segment\", 0x08048000)); . = SEGMENT_START(\"text-segment\", 0x08048000) + SIZEOF_HEADERS;", 
        "  .interp         : { *(.interp) }", 
        "  .note.gnu.build-id : { *(.note.gnu.build-id) }", 
        "  .hash           : { *(.hash) }", 
        "  .gnu.hash       : { *(.gnu.hash) }", 
        "  .dynsym         : { *(.dynsym) }", 
        "  .dynstr         : { *(.dynstr) }", 
        "  .gnu.version    : { *(.gnu.version) }", 
        "  .gnu.version_d  : { *(.gnu.version_d) }", 
        "  .gnu.version_r  : { *(.gnu.version_r) }", 
        "  .rel.init       : { *(.rel.init) }", 
        "  .rel.text       : { *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*) }", 
        "  .rel.fini       : { *(.rel.fini) }", 
        "  .rel.rodata     : { *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*) }", 
        "  .rel.data.rel.ro   : { *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*) }", 
        "  .rel.data       : { *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*) }", 
        "  .rel.tdata", 
        "  : { *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*) }", 
        "  .rel.tbss", 
        "  : { *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*) }", 
        "  .rel.ctors      : { *(.rel.ctors) }", 
        "  .rel.dtors      : { *(.rel.dtors) }", 
        "  .rel.got        : { *(.rel.got) }", 
        "  .rel.bss        : { *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*) }", 
        "  .rel.ifunc      : { *(.rel.ifunc) }", 
        "  .rel.plt        :", 
        "      *(.rel.plt)", 
        "      PROVIDE_HIDDEN (__rel_iplt_start = .);", 
        "      *(.rel.iplt)", 
        "      PROVIDE_HIDDEN (__rel_iplt_end = .);", 
        "  .init           :", 
        "    KEEP (*(SORT_NONE(.init)))", 
        "  .plt            : { *(.plt) *(.iplt) }", 
        ".plt.got        : { *(.plt.got) }", 
        ".plt.sec        : { *(.plt.sec) }", 
        "  .text           :", 
        "    *(.text.unlikely .text.*_unlikely .text.unlikely.*)", 
        "    *(.text.exit .text.exit.*)", 
        "    *(.text.startup .text.startup.*)", 
        "    *(.text.hot .text.hot.*)", 
        "    *(.text .stub .text.* .gnu.linkonce.t.*)", 
        "    /* .gnu.warning sections are handled specially by elf32.em.  */", 
        "    *(.gnu.warning)", 
        "  .fini           :", 
        "    KEEP (*(SORT_NONE(.fini)))", 
        "  PROVIDE (__etext = .);", 
        "  PROVIDE (_etext = .);", 
        "  PROVIDE (etext = .);", 
        "  .rodata         : { *(.rodata .rodata.* .gnu.linkonce.r.*) }", 
        "  .rodata1        : { *(.rodata1) }", 
        "  .eh_frame_hdr : { *(.eh_frame_hdr) *(.eh_frame_entry .eh_frame_entry.*) }", 
        "  .eh_frame       : ONLY_IF_RO { KEEP (*(.eh_frame)) *(.eh_frame.*) }", 
        "  .gcc_except_table   : ONLY_IF_RO { *(.gcc_except_table", 
        "  .gcc_except_table.*) }", 
        "  .gnu_extab   : ONLY_IF_RO { *(.gnu_extab*) }", 
        "  /* These sections are generated by the Sun/Oracle C++ compiler.  */", 
        "  .exception_ranges   : ONLY_IF_RO { *(.exception_ranges", 
        "  .exception_ranges*) }", 
        "  /* Adjust the address for the data segment.  We want to adjust up to", 
        "     the same address within the page on the next page up.  */", 
        "  . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE));", 
        "  /* Exception handling  */", 
        "  .eh_frame       : ONLY_IF_RW { KEEP (*(.eh_frame)) *(.eh_frame.*) }", 
        "  .gnu_extab      : ONLY_IF_RW { *(.gnu_extab) }", 
        "  .gcc_except_table   : ONLY_IF_RW { *(.gcc_except_table .gcc_except_table.*) }", 
        "  .exception_ranges   : ONLY_IF_RW { *(.exception_ranges .exception_ranges*) }", 
        "  /* Thread Local Storage sections  */", 
        "  .tdata", 
        "  : { *(.tdata .tdata.* .gnu.linkonce.td.*) }", 
        "  .tbss", 
        "  : { *(.tbss .tbss.* .gnu.linkonce.tb.*) *(.tcommon) }", 
        "  .preinit_array     :", 
        "    PROVIDE_HIDDEN (__preinit_array_start = .);", 
        "    KEEP (*(.preinit_array))", 
        "    PROVIDE_HIDDEN (__preinit_array_end = .);", 
        "  .init_array     :", 
        "    PROVIDE_HIDDEN (__init_array_start = .);", 
        "    KEEP (*(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*)))", 
        "    KEEP (*(.init_array EXCLUDE_FILE (*crtbegin.o *crtbegin?.o *crtend.o *crtend?.o ) .ctors))", 
        "    PROVIDE_HIDDEN (__init_array_end = .);", 
        "  .fini_array     :", 
        "    PROVIDE_HIDDEN (__fini_array_start = .);", 
        "    KEEP (*(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*)))", 
        "    KEEP (*(.fini_array EXCLUDE_FILE (*crtbegin.o *crtbegin?.o *crtend.o *crtend?.o ) .dtors))", 
        "    PROVIDE_HIDDEN (__fini_array_end = .);", 
        "  .ctors          :", 
        "    /* gcc uses crtbegin.o to find the start of", 
        "       the constructors, so we make sure it is", 
        "       first.  Because this is a wildcard, it", 
        "       doesn't matter if the user does not", 
        "       actually link against crtbegin.o; the", 
        "       linker won't look for a file to match a", 
        "       wildcard.  The wildcard also means that it", 
        "       doesn't matter which directory crtbegin.o", 
        "       is in.  */", 
        "    KEEP (*crtbegin.o(.ctors))", 
        "    KEEP (*crtbegin?.o(.ctors))", 
        "    /* We don't want to include the .ctor section from", 
        "       the crtend.o file until after the sorted ctors.", 
        "       The .ctor section from the crtend file contains the", 
        "       end of ctors marker and it must be last */", 
        "    KEEP (*(EXCLUDE_FILE (*crtend.o *crtend?.o ) .ctors))", 
        "    KEEP (*(SORT(.ctors.*)))", 
        "    KEEP (*(.ctors))", 
        "  .dtors          :", 
        "    KEEP (*crtbegin.o(.dtors))", 
        "    KEEP (*crtbegin?.o(.dtors))", 
        "    KEEP (*(EXCLUDE_FILE (*crtend.o *crtend?.o ) .dtors))", 
        "    KEEP (*(SORT(.dtors.*)))", 
        "    KEEP (*(.dtors))", 
        "  .jcr            : { KEEP (*(.jcr)) }", 
        "  .data.rel.ro : { *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*) *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*) }", 
        "  .dynamic        : { *(.dynamic) }", 
        "  .got            : { *(.got) *(.igot) }", 
        "  . = DATA_SEGMENT_RELRO_END (SIZEOF (.got.plt) >= 12 ? 12 : 0, .);", 
        "  .got.plt        : { *(.got.plt)  *(.igot.plt) }", 
        "  .data           :", 
        "    *(.data .data.* .gnu.linkonce.d.*)", 
        "    SORT(CONSTRUCTORS)", 
        "  .data1          : { *(.data1) }", 
        "  _edata = .; PROVIDE (edata = .);", 
        "  . = .;", 
        "  __bss_start = .;", 
        "  .bss            :", 
        "   *(.dynbss)", 
        "   *(.bss .bss.* .gnu.linkonce.b.*)", 
        "   *(COMMON)", 
        "   /* Align here to ensure that the .bss section occupies space up to", 
        "      _end.  Align after .bss to ensure correct alignment even if the", 
        "      .bss section disappears because there are no input sections.", 
        "      FIXME: Why do we need it? When there is no .bss section, we don't", 
        "      pad the .data section.  */", 
        "   . = ALIGN(. != 0 ? 32 / 8 : 1);", 
        "  . = ALIGN(32 / 8);", 
        "  . = SEGMENT_START(\"ldata-segment\", .);", 
        "  . = ALIGN(32 / 8);", 
        "  _end = .; PROVIDE (end = .);", 
        "  . = DATA_SEGMENT_END (.);", 
        "  /* Stabs debugging sections.  */", 
        "  .stab          0 : { *(.stab) }", 
        "  .stabstr       0 : { *(.stabstr) }", 
        "  .stab.excl     0 : { *(.stab.excl) }", 
        "  .stab.exclstr  0 : { *(.stab.exclstr) }", 
        "  .stab.index    0 : { *(.stab.index) }", 
        "  .stab.indexstr 0 : { *(.stab.indexstr) }", 
        "  .comment       0 : { *(.comment) }", 
        "  /* DWARF debug sections.", 
        "     Symbols in the DWARF debugging sections are relative to the beginning", 
        "     of the section so we begin them at 0.  */", 
        "  /* DWARF 1 */", 
        "  .debug          0 : { *(.debug) }", 
        "  .line           0 : { *(.line) }", 
        "  /* GNU DWARF 1 extensions */", 
        "  .debug_srcinfo  0 : { *(.debug_srcinfo) }", 
        "  .debug_sfnames  0 : { *(.debug_sfnames) }", 
        "  /* DWARF 1.1 and DWARF 2 */", 
        "  .debug_aranges  0 : { *(.debug_aranges) }", 
        "  .debug_pubnames 0 : { *(.debug_pubnames) }", 
        "  /* DWARF 2 */", 
        "  .debug_info     0 : { *(.debug_info .gnu.linkonce.wi.*) }", 
        "  .debug_abbrev   0 : { *(.debug_abbrev) }", 
        "  .debug_line     0 : { *(.debug_line .debug_line.* .debug_line_end ) }", 
        "  .debug_frame    0 : { *(.debug_frame) }", 
        "  .debug_str      0 : { *(.debug_str) }", 
        "  .debug_loc      0 : { *(.debug_loc) }", 
        "  .debug_macinfo  0 : { *(.debug_macinfo) }", 
        "  /* SGI/MIPS DWARF 2 extensions */", 
        "  .debug_weaknames 0 : { *(.debug_weaknames) }", 
        "  .debug_funcnames 0 : { *(.debug_funcnames) }", 
        "  .debug_typenames 0 : { *(.debug_typenames) }", 
        "  .debug_varnames  0 : { *(.debug_varnames) }", 
        "  /* DWARF 3 */", 
        "  .debug_pubtypes 0 : { *(.debug_pubtypes) }", 
        "  .debug_ranges   0 : { *(.debug_ranges) }", 
        "  /* DWARF Extension.  */", 
        "  .debug_macro    0 : { *(.debug_macro) }", 
        "  .debug_addr     0 : { *(.debug_addr) }", 
        "  .gnu.attributes 0 : { KEEP (*(.gnu.attributes)) }", 
        "  /DISCARD/ : { *(.note.GNU-stack) *(.gnu_debuglink) *(.gnu.lto_*) }", 
        "/* Script for -pie -z combreloc -z now -z relro -z separate-code: position independent executable, combine & sort relocs with separate code segment */", 
        "/* Copyright (C) 2014-2018 Free Software Foundation, Inc.", 
        "   Copying and distribution of this script, with or without modification,", 
        "   are permitted in any medium without royalty provided the copyright", 
        "   notice and this notice are preserved.  */", 
        "OUTPUT_FORMAT(\"elf32-i386\", \"elf32-i386\",", 
        "      \"elf32-i386\")", 
        "OUTPUT_ARCH(i386)", 
        "ENTRY(_start)", 
        "SEARCH_DIR(\"=/usr/local/lib/i386-linux-gnu\"); SEARCH_DIR(\"=/lib/i386-linux-gnu\"); SEARCH_DIR(\"=/usr/lib/i386-linux-gnu\"); SEARCH_DIR(\"=/usr/lib/i386-linux-gnu32\"); SEARCH_DIR(\"=/usr/local/lib32\"); SEARCH_DIR(\"=/lib32\"); SEARCH_DIR(\"=/usr/lib32\"); SEARCH_DIR(\"=/usr/local/lib\"); SEARCH_DIR(\"=/lib\"); SEARCH_DIR(\"=/usr/lib\"); SEARCH_DIR(\"=/usr/i686-linux-gnu/lib32\"); SEARCH_DIR(\"=/usr/i686-linux-gnu/lib\");", 
        "SECTIONS", 
        "  /* Read-only sections, merged into text segment: */", 
        "  PROVIDE (__executable_start = SEGMENT_START(\"text-segment\", 0)); . = SEGMENT_START(\"text-segment\", 0) + SIZEOF_HEADERS;", 
        "  .interp         : { *(.interp) }", 
        "  .note.gnu.build-id : { *(.note.gnu.build-id) }", 
        "  .hash           : { *(.hash) }", 
        "  .gnu.hash       : { *(.gnu.hash) }", 
        "  .dynsym         : { *(.dynsym) }", 
        "  .dynstr         : { *(.dynstr) }", 
        "  .gnu.version    : { *(.gnu.version) }", 
        "  .gnu.version_d  : { *(.gnu.version_d) }", 
        "  .gnu.version_r  : { *(.gnu.version_r) }", 
        "  .rel.dyn        :", 
        "      *(.rel.init)", 
        "      *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)", 
        "      *(.rel.fini)", 
        "      *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)", 
        "      *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)", 
        "      *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)", 
        "      *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)", 
        "      *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)", 
        "      *(.rel.ctors)", 
        "      *(.rel.dtors)", 
        "      *(.rel.got)", 
        "      *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)", 
        "      *(.rel.ifunc)"
    ], 
    "metadata": {
        "output": {
            "pcap": {
                "basename": "dump.pcap", 
                "sha256": "a145fef50b0efbeddae792a14e072b10c7d82a6d0099690b1c7c0475c44cc461", 
                "dirname": ""
            }
        }
    }
}