{
    "info": {
        "added": 1626981282.66022, 
        "started": 1627058522.378153, 
        "duration": 83, 
        "ended": 1627058605.759295, 
        "owner": null, 
        "score": 0.0, 
        "id": 2325907, 
        "category": "file", 
        "git": {
            "head": "", 
            "fetch_head": ""
        }, 
        "monitor": null, 
        "package": "elf", 
        "route": "internet", 
        "custom": null, 
        "machine": {
            "status": "stopped", 
            "name": "Ubuntu1904x643", 
            "label": "Ubuntu1904x643", 
            "platform": "linux", 
            "manager": "VirtualBox", 
            "started_on": "2021-07-23 16:42:03", 
            "shutdown_on": "2021-07-23 16:43:25"
        }, 
        "platform": "linux", 
        "version": "2.0.7", 
        "options": "procmemdump=yes,route=internet"
    }, 
    "signatures": [], 
    "target": {
        "category": "file", 
        "file": {
            "mimetype": "application/x-sharedlib", 
            "yara": [], 
            "sha1": "7567aaf669266263536e152d26f226edcf2e5ee8", 
            "name": "sane-find-scanner", 
            "type": "ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=b29dfd476faf44d1107017e57f1d02103bbee674, stripped", 
            "sha256": "ca7956913b3b2966d0853f8b36fad9c79bae79e2ae00d15ff8350ea5bc9ec87e", 
            "urls": [], 
            "crc32": "771A9A2A", 
            "path": "/srv/cuckoo/cwd/storage/binaries/ca7956913b3b2966d0853f8b36fad9c79bae79e2ae00d15ff8350ea5bc9ec87e", 
            "ssdeep": null, 
            "size": 120728, 
            "sha512": "72130373dfd42760d8772e89af7ea814cd1b94db262f9c0404638d12eeb198a2090ad24249838c034577b568478c0faa87069bcecc524bc51ba9f3941fa83bea", 
            "md5": "e44547bb4eec4fba5826d287f046be3d"
        }, 
        "custom": null
    }, 
    "irma": {
        "status": 0, 
        "probes_finished": 16, 
        "scan_id": "8a7d2cce-5bdf-46b8-8d09-482d8212af8b", 
        "parent_file_sha256": null, 
        "name": "ca7956913b3b2966d0853f8b36fad9c79bae79e2ae00d15ff8350ea5bc9ec87e", 
        "scan_date": 1627076766, 
        "other_results": [], 
        "submitter": "cli", 
        "probes_total": 16, 
        "file_infos": {
            "mimetype": "ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV)", 
            "sha1": "7567aaf669266263536e152d26f226edcf2e5ee8", 
            "tags": [], 
            "timestamp_first_scan": 1626896165.34, 
            "timestamp_last_scan": 1627076794.76, 
            "sha256": "ca7956913b3b2966d0853f8b36fad9c79bae79e2ae00d15ff8350ea5bc9ec87e", 
            "md5": "e44547bb4eec4fba5826d287f046be3d", 
            "size": 120728
        }, 
        "probe_results": {
            "antivirus": {
                "Avast Core Security (Linux)": {
                    "status": 0, 
                    "duration": 0.01, 
                    "version": "3.0.3", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "F-Secure Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 0.03, 
                    "version": "11.10", 
                    "results": null, 
                    "virus_database_version": "2021-06-08_09"
                }, 
                "Windows Defender (Windows)": {
                    "status": 0, 
                    "duration": 0.03, 
                    "version": "1.1.18300.4", 
                    "results": null, 
                    "virus_database_version": "1.343.1173.0"
                }, 
                "Comodo Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 2.06, 
                    "version": "1.1.268025.1", 
                    "results": null, 
                    "virus_database_version": "2021-05-05"
                }, 
                "ESET NOD32 Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 3.89, 
                    "version": "4.0.96", 
                    "results": null, 
                    "virus_database_version": "6087dbf0-1e845 (2021-04-27)"
                }, 
                "GData (Windows)": {
                    "status": 0, 
                    "duration": 0.16, 
                    "version": "5.5.20197.1358", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Forticlient (Linux)": {
                    "status": -1, 
                    "duration": 3.22, 
                    "version": "unavailable", 
                    "virus_database_version": "unavailable", 
                    "error": "/opt/forticlient/scan.sh: line 8: 1794373 Segmentation fault      (core dumped) \"$scanbin\" -s \"$vir_sig\" -o \"$tmpdir\" --unit \"${forti}/\" -d \"$1\""
                }, 
                "Avira (Windows)": {
                    "status": 0, 
                    "duration": 3.81, 
                    "version": "8.3.62.226", 
                    "results": null, 
                    "virus_database_version": "8.18.36.236"
                }, 
                "Kaspersky (Windows)": {
                    "status": 0, 
                    "duration": 3.91, 
                    "version": "21.3", 
                    "results": null, 
                    "virus_database_version": "2021-07-21 19:18:00 (full)"
                }, 
                "McAfee CLI scanner (Linux)": {
                    "status": 0, 
                    "duration": 4.88, 
                    "version": "6.0.6.653", 
                    "results": null, 
                    "virus_database_version": "9966"
                }, 
                "Sophos Anti-Virus (Linux)": {
                    "status": 0, 
                    "duration": 11.64, 
                    "version": "5.74.0", 
                    "results": null, 
                    "virus_database_version": "5.83 (23 March 2021)"
                }, 
                "DrWeb Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 0.08, 
                    "version": "11.1.9.2103151924", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "ClamAV (Linux)": {
                    "status": 0, 
                    "duration": 0.02, 
                    "version": "0.103.2", 
                    "results": null, 
                    "virus_database_version": "26190"
                }, 
                "eScan Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 3.73, 
                    "version": "7.0.21", 
                    "results": null, 
                    "virus_database_version": "7.88854 (16/06/2021)"
                }, 
                "Emsisoft Commandline Scanner (Windows)": {
                    "status": 0, 
                    "duration": 0.23, 
                    "version": "2021.1.0.10606", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Bitdefender Antivirus Scanner (Linux)": {
                    "status": 0, 
                    "duration": 5.47, 
                    "version": "7.90123", 
                    "results": null, 
                    "virus_database_version": null
                }
            }
        }, 
        "path": "", 
        "result_id": "2b88bef6-c816-442d-ba84-64a2dedd85b9", 
        "file_sha256": "ca7956913b3b2966d0853f8b36fad9c79bae79e2ae00d15ff8350ea5bc9ec87e"
    }, 
    "suricata": {
        "tls": [], 
        "files": [], 
        "alerts": [], 
        "http": []
    }, 
    "virustotal": {
        "scans": {
            "Bkav": {
                "detected": false, 
                "version": "1.3.0.9899", 
                "result": null, 
                "normalized": [], 
                "update": "20210507"
            }, 
            "Lionic": {
                "detected": false, 
                "version": "4.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "ClamAV": {
                "detected": false, 
                "version": "0.103.2.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210509"
            }, 
            "FireEye": {
                "detected": false, 
                "version": "32.44.1.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "CAT-QuickHeal": {
                "detected": false, 
                "version": "14.00", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "McAfee": {
                "detected": false, 
                "version": "6.0.6.653", 
                "result": null, 
                "normalized": [], 
                "update": "20210504"
            }, 
            "Malwarebytes": {
                "detected": false, 
                "version": "4.2.2.27", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Zillya": {
                "detected": false, 
                "version": "2.0.0.4358", 
                "result": null, 
                "normalized": [], 
                "update": "20210507"
            }, 
            "Sangfor": {
                "detected": false, 
                "version": "2.9.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210416"
            }, 
            "K7AntiVirus": {
                "detected": false, 
                "version": "11.181.37123", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "K7GW": {
                "detected": false, 
                "version": "11.181.37125", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Arcabit": {
                "detected": false, 
                "version": "1.0.0.886", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Baidu": {
                "detected": false, 
                "version": "1.0.0.2", 
                "result": null, 
                "normalized": [], 
                "update": "20190318"
            }, 
            "Cyren": {
                "detected": false, 
                "version": "6.3.0.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Symantec": {
                "detected": false, 
                "version": "1.14.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210509"
            }, 
            "ESET-NOD32": {
                "detected": false, 
                "version": "23269", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "TrendMicro-HouseCall": {
                "detected": false, 
                "version": "10.0.0.1040", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Avast": {
                "detected": false, 
                "version": "21.1.5827.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Cynet": {
                "detected": false, 
                "version": "4.0.0.27", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Kaspersky": {
                "detected": false, 
                "version": "21.0.1.45", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "BitDefender": {
                "detected": false, 
                "version": "7.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "NANO-Antivirus": {
                "detected": false, 
                "version": "1.0.146.25279", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "SUPERAntiSpyware": {
                "detected": false, 
                "version": "5.6.0.1032", 
                "result": null, 
                "normalized": [], 
                "update": "20210507"
            }, 
            "MicroWorld-eScan": {
                "detected": false, 
                "version": "14.0.409.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Tencent": {
                "detected": false, 
                "version": "1.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Ad-Aware": {
                "detected": false, 
                "version": "3.0.21.179", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Emsisoft": {
                "detected": false, 
                "version": "2018.12.0.1641", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Comodo": {
                "detected": false, 
                "version": "33515", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "F-Secure": {
                "detected": false, 
                "version": "12.0.86.52", 
                "result": null, 
                "normalized": [], 
                "update": "20210331"
            }, 
            "DrWeb": {
                "detected": false, 
                "version": "7.0.49.9080", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "VIPRE": {
                "detected": false, 
                "version": "92442", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "TrendMicro": {
                "detected": false, 
                "version": "11.0.0.1006", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "McAfee-GW-Edition": {
                "detected": false, 
                "version": "v2019.1.2+3728", 
                "result": null, 
                "normalized": [], 
                "update": "20210509"
            }, 
            "CMC": {
                "detected": false, 
                "version": "2.10.2019.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210506"
            }, 
            "Sophos": {
                "detected": false, 
                "version": "1.0.2.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Ikarus": {
                "detected": false, 
                "version": "0.1.5.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210509"
            }, 
            "Avast-Mobile": {
                "detected": false, 
                "version": "210510-00", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Jiangmin": {
                "detected": false, 
                "version": "16.0.100", 
                "result": null, 
                "normalized": [], 
                "update": "20210509"
            }, 
            "Avira": {
                "detected": false, 
                "version": "8.3.3.12", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Antiy-AVL": {
                "detected": false, 
                "version": "3.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Kingsoft": {
                "detected": false, 
                "version": "2017.9.26.565", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Gridinsoft": {
                "detected": false, 
                "version": "1.0.39.131", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Microsoft": {
                "detected": false, 
                "version": "1.1.18100.6", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "ViRobot": {
                "detected": false, 
                "version": "2014.3.20.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "ZoneAlarm": {
                "detected": false, 
                "version": "1.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "GData": {
                "detected": false, 
                "version": "A:25.29596B:27.22953", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "TACHYON": {
                "detected": false, 
                "version": "2021-05-10.02", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "AhnLab-V3": {
                "detected": false, 
                "version": "3.20.0.10177", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Acronis": {
                "detected": false, 
                "version": "1.1.1.81", 
                "result": null, 
                "normalized": [], 
                "update": "20210211"
            }, 
            "BitDefenderTheta": {
                "detected": false, 
                "version": "7.2.37796.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210504"
            }, 
            "ALYac": {
                "detected": false, 
                "version": "1.1.3.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "MAX": {
                "detected": false, 
                "version": "2019.9.16.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "VBA32": {
                "detected": false, 
                "version": "5.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210507"
            }, 
            "Zoner": {
                "detected": false, 
                "version": "0.0.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210509"
            }, 
            "Rising": {
                "detected": false, 
                "version": "25.0.0.26", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Yandex": {
                "detected": false, 
                "version": "5.5.2.24", 
                "result": null, 
                "normalized": [], 
                "update": "20210508"
            }, 
            "SentinelOne": {
                "detected": false, 
                "version": "5.0.0.20", 
                "result": null, 
                "normalized": [], 
                "update": "20210215"
            }, 
            "MaxSecure": {
                "detected": false, 
                "version": "1.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210508"
            }, 
            "Fortinet": {
                "detected": false, 
                "version": "6.2.142.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }, 
            "Panda": {
                "detected": false, 
                "version": "4.6.4.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210509"
            }, 
            "Qihoo-360": {
                "detected": false, 
                "version": "1.0.0.1120", 
                "result": null, 
                "normalized": [], 
                "update": "20210510"
            }
        }, 
        "scan_id": "ca7956913b3b2966d0853f8b36fad9c79bae79e2ae00d15ff8350ea5bc9ec87e-1620634551", 
        "sha1": "7567aaf669266263536e152d26f226edcf2e5ee8", 
        "resource": "e44547bb4eec4fba5826d287f046be3d", 
        "response_code": 1, 
        "scan_date": "2021-05-10 08:15:51", 
        "permalink": "https://www.virustotal.com/gui/file/ca7956913b3b2966d0853f8b36fad9c79bae79e2ae00d15ff8350ea5bc9ec87e/detection/f-ca7956913b3b2966d0853f8b36fad9c79bae79e2ae00d15ff8350ea5bc9ec87e-1620634551", 
        "summary": {
            "positives": 0, 
            "permalink": "https://www.virustotal.com/gui/file/ca7956913b3b2966d0853f8b36fad9c79bae79e2ae00d15ff8350ea5bc9ec87e/detection/f-ca7956913b3b2966d0853f8b36fad9c79bae79e2ae00d15ff8350ea5bc9ec87e-1620634551", 
            "scan_date": "2021-05-10 08:15:51"
        }, 
        "sha256": "ca7956913b3b2966d0853f8b36fad9c79bae79e2ae00d15ff8350ea5bc9ec87e", 
        "normalized": [], 
        "total": 61, 
        "positives": 0, 
        "verbose_msg": "Scan finished, information embedded", 
        "md5": "e44547bb4eec4fba5826d287f046be3d"
    }, 
    "network": {
        "tls": [], 
        "udp": [], 
        "dns_servers": [], 
        "http": [], 
        "icmp": [], 
        "smtp": [], 
        "tcp": [], 
        "smtp_ex": [], 
        "geoinfo": {}, 
        "mitm": [], 
        "hosts": [], 
        "pcap_sha256": "704e5e5b3234433c01fcfd1b20a306e77e985038120492dc53965c3edd38a4ea", 
        "dns": [], 
        "http_ex": [], 
        "domains": [], 
        "dead_hosts": [], 
        "irc": [], 
        "https_ex": []
    }, 
    "resubmit": {
        "resubmit_ids": []
    }, 
    "snort": {
        "alerts": []
    }, 
    "behavior": {
        "generic": [
            {
                "process_path": null, 
                "process_name": "sh", 
                "pid": 2084, 
                "summary": {}, 
                "first_seen": 1626981294.606368, 
                "ppid": -1
            }
        ], 
        "processes": [
            {
                "calls": [
                    {
                        "status": "ENOENT", 
                        "process_name": "sh", 
                        "pid": 2084, 
                        "raw": "Thu Jul 22 19:14:54 2021.606368 sh@7f54a5e3c957[2084] execve(\"/tmp/sane-find-scanner\", [\"/tmp/sane-find-scanner\"], [\"SUDO_GID=0\", \"MAIL=/var/mail/root\", \"USER=root\", \"HOME=/root\", \"SUDO_UID=0\", \"LOGNAME=root\", \"SYSTEMTAP_MODULE=stap_\", \"TERM=unknown\", \"SYSTEMTAP_VERBOSE=2\", \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin\", \"DISPLAY=:0\", \"LANG=en_US.UTF-8\", \"XAUTHORITY=/root/.Xauthority\", \"SUDO_COMMAND=/usr/bin/staprun -vv -o stap.log /root/.cuckoo/stap_.ko -c sh -c /tmp/sane-find-scanner\", \"SHELL=/bin/bash\", \"SUDO_USER=root\", \"PWD=/tmp/t) = -2 (ENOENT)\n", 
                        "api": "execve", 
                        "return_value": "-2", 
                        "category": "process", 
                        "instruction_pointer": "7f54a5e3c957", 
                        "arguments": {
                            "p2": [
                                "SUDO_GID=0", 
                                "MAIL=/var/mail/root", 
                                "USER=root", 
                                "HOME=/root", 
                                "SUDO_UID=0", 
                                "LOGNAME=root", 
                                "SYSTEMTAP_MODULE=stap_", 
                                "TERM=unknown", 
                                "SYSTEMTAP_VERBOSE=2", 
                                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin", 
                                "DISPLAY=:0", 
                                "LANG=en_US.UTF-8", 
                                "XAUTHORITY=/root/.Xauthority", 
                                "SUDO_COMMAND=/usr/bin/staprun -vv -o stap.log /root/.cuckoo/stap_.ko -c sh -c /tmp/sane-find-scanner", 
                                "SHELL=/bin/bash", 
                                "SUDO_USER=root", 
                                "\"PWD=/tmp/t"
                            ], 
                            "p0": "/tmp/sane-find-scanner", 
                            "p1": [
                                "/tmp/sane-find-scanner"
                            ]
                        }, 
                        "time": 1626981294.606368
                    }, 
                    {
                        "status": "", 
                        "process_name": "sh", 
                        "pid": 2084, 
                        "raw": "Thu Jul 22 19:14:54 2021.606525 sh@7f54a5e68024[2084] write(2, \"sh: 1: \", 7) = 7\n", 
                        "api": "write", 
                        "return_value": "7", 
                        "category": "process", 
                        "instruction_pointer": "7f54a5e68024", 
                        "arguments": {
                            "p2": "7", 
                            "p0": "2", 
                            "p1": "sh: 1: "
                        }, 
                        "time": 1626981294.606525
                    }, 
                    {
                        "status": "", 
                        "process_name": "sh", 
                        "pid": 2084, 
                        "raw": "Thu Jul 22 19:14:54 2021.606563 sh@7f54a5e68024[2084] write(2, \"/tmp/sane-find-scanner: not found\", 33) = 33\n", 
                        "api": "write", 
                        "return_value": "33", 
                        "category": "process", 
                        "instruction_pointer": "7f54a5e68024", 
                        "arguments": {
                            "p2": "33", 
                            "p0": "2", 
                            "p1": "/tmp/sane-find-scanner: not found"
                        }, 
                        "time": 1626981294.606563
                    }, 
                    {
                        "status": "", 
                        "process_name": "sh", 
                        "pid": 2084, 
                        "raw": "Thu Jul 22 19:14:54 2021.606594 sh@7f54a5e68024[2084] write(2, \"\\n\", 1) = 1\n", 
                        "api": "write", 
                        "return_value": "1", 
                        "category": "process", 
                        "instruction_pointer": "7f54a5e68024", 
                        "arguments": {
                            "p2": "1", 
                            "p0": "2", 
                            "p1": "\n"
                        }, 
                        "time": 1626981294.606594
                    }, 
                    {
                        "status": "", 
                        "process_name": "sh", 
                        "pid": 2084, 
                        "raw": "Thu Jul 22 19:14:54 2021.606628 sh@7f54a5e3c926[2084] exit_group(127)\n", 
                        "api": "exit_group", 
                        "return_value": "", 
                        "category": "process", 
                        "instruction_pointer": "7f54a5e3c926", 
                        "arguments": {
                            "p0": "127"
                        }, 
                        "time": 1626981294.606628
                    }
                ], 
                "pid": 2084, 
                "process_name": "sh", 
                "command_line": "", 
                "first_seen": 1626981294.606368, 
                "ppid": -1, 
                "type": "process"
            }
        ], 
        "processtree": [
            {
                "track": true, 
                "pid": 2084, 
                "process_name": "sh", 
                "command_line": "", 
                "first_seen": 1626981294.606368, 
                "ppid": -1, 
                "children": []
            }
        ]
    }, 
    "debug": {
        "action": [], 
        "dbgview": [], 
        "errors": [], 
        "log": [
            "2021-07-22 19:14:42,001 [root] DEBUG: Starting analyzer from: /tmp/tmpVdyxKt\n", 
            "2021-07-22 19:14:42,002 [root] DEBUG: Storing results at: /tmp/jDXjRUmmEn\n", 
            "2021-07-22 19:14:43,480 [modules.auxiliary.filecollector] INFO: FileCollector started v0.08\n", 
            "2021-07-22 19:14:43,483 [modules.auxiliary.human] INFO: Human started v0.02\n", 
            "2021-07-22 19:14:43,985 [modules.auxiliary.screenshots] INFO: Screenshots started v0.03\n", 
            "2021-07-22 19:14:54,597 [lib.core.packages] INFO: Process startup took 10.61 seconds\n", 
            "2021-07-22 19:14:54,598 [root] INFO: Added new process to list with pid: 2070\n", 
            "2021-07-22 19:15:06,614 [root] INFO: Process with pid 2070 has terminated\n", 
            "2021-07-22 19:15:06,615 [root] INFO: Process list is empty, terminating analysis.\n", 
            "2021-07-22 19:15:09,619 [lib.core.packages] INFO: Package requested stop\n", 
            "2021-07-22 19:15:09,620 [lib.core.packages] WARNING: Exception uploading log: [Errno 3] No such process\n"
        ], 
        "cuckoo": [
            "2021-07-23 16:42:02,876 [cuckoo.core.scheduler] INFO: Task #2325907: acquired machine Ubuntu1904x643 (label=Ubuntu1904x643)\n", 
            "2021-07-23 16:42:02,876 [cuckoo.core.resultserver] DEBUG: Now tracking machine 192.168.168.103 for task #2325907\n", 
            "2021-07-23 16:42:02,993 [cuckoo.auxiliary.sniffer] INFO: Started sniffer with PID 3760789 (interface=vboxnet0, host=192.168.168.103)\n", 
            "2021-07-23 16:42:03,111 [cuckoo.machinery.virtualbox] DEBUG: Starting vm Ubuntu1904x643\n", 
            "2021-07-23 16:42:03,470 [cuckoo.machinery.virtualbox] DEBUG: Restoring virtual machine Ubuntu1904x643 to Snapshot\n", 
            "2021-07-23 16:42:13,342 [cuckoo.core.guest] INFO: Starting analysis #2325907 on guest (id=Ubuntu1904x643, ip=192.168.168.103)\n", 
            "2021-07-23 16:42:14,347 [cuckoo.core.guest] DEBUG: Ubuntu1904x643: not ready yet\n", 
            "2021-07-23 16:42:15,352 [cuckoo.core.guest] DEBUG: Ubuntu1904x643: not ready yet\n", 
            "2021-07-23 16:42:16,358 [cuckoo.core.guest] DEBUG: Ubuntu1904x643: not ready yet\n", 
            "2021-07-23 16:42:16,411 [cuckoo.core.guest] DEBUG: Ubuntu1904x643: not ready yet\n", 
            "2021-07-23 16:42:19,426 [cuckoo.core.guest] INFO: Guest is running Cuckoo Agent 0.10 (id=Ubuntu1904x643, ip=192.168.168.103)\n", 
            "2021-07-23 16:42:19,436 [cuckoo.core.guest] DEBUG: Uploading analyzer to guest (id=Ubuntu1904x643, ip=192.168.168.103, monitor=latest, size=70098)\n", 
            "2021-07-23 16:42:19,586 [cuckoo.core.resultserver] DEBUG: Task #2325907: live log analysis.log initialized.\n", 
            "2021-07-23 16:42:24,763 [cuckoo.core.resultserver] DEBUG: Task #2325907: File upload for 'shots/0001.jpg'\n", 
            "2021-07-23 16:42:24,786 [cuckoo.core.resultserver] DEBUG: Task #2325907 uploaded file length: 171490\n", 
            "2021-07-23 16:42:34,618 [cuckoo.core.guest] DEBUG: Ubuntu1904x643: analysis #2325907 still processing\n", 
            "2021-07-23 16:42:47,217 [cuckoo.core.resultserver] DEBUG: Task #2325907: File upload for 'logs/all.stap'\n", 
            "2021-07-23 16:42:47,244 [cuckoo.core.resultserver] DEBUG: Task #2325907 uploaded file length: 924\n", 
            "2021-07-23 16:42:49,692 [cuckoo.core.guest] DEBUG: Ubuntu1904x643: analysis #2325907 still processing\n", 
            "2021-07-23 16:43:01,750 [cuckoo.core.guest] INFO: Ubuntu1904x643: end of analysis reached!\n", 
            "2021-07-23 16:43:01,759 [cuckoo.core.plugins] DEBUG: Stopped auxiliary module: Redsocks\n", 
            "2021-07-23 16:43:01,824 [cuckoo.core.plugins] DEBUG: Stopped auxiliary module: Sniffer\n", 
            "2021-07-23 16:43:14,032 [cuckoo.machinery.virtualbox] INFO: Successfully generated memory dump for virtual machine with label Ubuntu1904x643 to path /srv/cuckoo/cwd/storage/analyses/2325907/memory.dmp\n", 
            "2021-07-23 16:43:14,034 [cuckoo.machinery.virtualbox] DEBUG: Stopping vm Ubuntu1904x643\n", 
            "2021-07-23 16:43:25,459 [cuckoo.core.resultserver] DEBUG: Stopped tracking machine 192.168.168.103 for task #2325907\n", 
            "2021-07-23 16:43:25,460 [cuckoo.core.resultserver] DEBUG: Cancel <Context for LOG> for task 2325907\n", 
            "2021-07-23 16:43:25,563 [cuckoo.core.scheduler] DEBUG: Released database task #2325907\n", 
            "2021-07-23 16:43:25,645 [cuckoo.core.scheduler] INFO: Task #2325907: analysis procedure completed\n"
        ]
    }, 
    "strings": [
        "/lib/ld-linux.so.2", 
        "libusb-1.0.so.0", 
        "_ITM_deregisterTMCloneTable", 
        "__gmon_start__", 
        "_ITM_registerTMCloneTable", 
        "libusb_release_interface", 
        "libusb_get_device_descriptor", 
        "libusb_interrupt_transfer", 
        "libusb_get_configuration", 
        "libusb_close", 
        "libusb_bulk_transfer", 
        "libusb_get_device_list", 
        "libusb_get_config_descriptor", 
        "libusb_free_device_list", 
        "libusb_set_debug", 
        "libusb_open", 
        "libusb_reset_device", 
        "libusb_set_interface_alt_setting", 
        "libusb_claim_interface", 
        "libusb_get_bus_number", 
        "libusb_get_device_address", 
        "libusb_clear_halt", 
        "libusb_ref_device", 
        "libusb_control_transfer", 
        "libusb_init", 
        "libusb_set_configuration", 
        "libusb_exit", 
        "libusb_free_config_descriptor", 
        "libieee1284.so.3", 
        "ieee1284_free_ports", 
        "ieee1284_read_data", 
        "ieee1284_read_status", 
        "ieee1284_claim", 
        "ieee1284_release", 
        "ieee1284_open", 
        "ieee1284_write_control", 
        "ieee1284_epp_read_data", 
        "ieee1284_write_data", 
        "ieee1284_find_ports", 
        "ieee1284_epp_write_addr", 
        "ieee1284_read_control", 
        "ieee1284_close", 
        "libc.so.6", 
        "_IO_stdin_used", 
        "strcpy", 
        "__printf_chk", 
        "readdir", 
        "strncmp", 
        "isfdtype", 
        "strrchr", 
        "__fdelt_chk", 
        "closedir", 
        "strncpy", 
        "sigprocmask", 
        "sigfillset", 
        "readdir_r", 
        "putchar", 
        "select", 
        "realloc", 
        "strdup", 
        "__assert_fail", 
        "strtod", 
        "strtol", 
        "calloc", 
        "strlen", 
        "memset", 
        "strstr", 
        "__errno_location", 
        "__syslog_chk", 
        "strndup", 
        "__fprintf_chk", 
        "memcpy", 
        "fclose", 
        "malloc", 
        "opendir", 
        "__ctype_b_loc", 
        "getenv", 
        "sscanf", 
        "stderr", 
        "system", 
        "__snprintf_chk", 
        "getuid", 
        "strncasecmp", 
        "fileno", 
        "usleep", 
        "fwrite", 
        "__vfprintf_chk", 
        "__vsyslog_chk", 
        "__cxa_finalize", 
        "__sprintf_chk", 
        "__xstat", 
        "strsep", 
        "strcmp", 
        "strerror", 
        "__libc_start_main", 
        "ferror", 
        "sysconf", 
        "__stack_chk_fail", 
        "_edata", 
        "__bss_start", 
        "sanei_debug_sanei_debug", 
        "sanei_scsi_max_request_size", 
        "sanei_debug_sanei_usb", 
        "_fp_hw", 
        "sanei_debug_sanei_config", 
        "sanei_debug_sanei_pa4s2", 
        "sanei_debug_sanei_scsi", 
        "sfs_usb_ctx", 
        "GLIBC_2.3", 
        "GLIBC_2.1.3", 
        "GLIBC_2.15", 
        "GLIBC_2.4", 
        "GLIBC_2.1", 
        "GLIBC_2.0", 
        "GLIBC_2.3.4", 
        "t$\\e35", 
        "t$,WPj", 
        "T$P9T$", 
        "D$T9D$", 
        "|$0WUj", 
        "D$,Phr\"", 
        "D$0Phv\"", 
        "D$(Phq\"", 
        "D$ PQRWU", 
        "t$0VPj", 
        "t$8jFj", 
        "t$ jBj", 
        "t$$WPj", 
        ";T$lt#k", 
        "t$XSPj", 
        "D$ _DEB", 
        "D$$UG_", 
        "Success (no error)", 
        "Input/output error", 
        "Invalid parameter", 
        "Entity not found", 
        "Resource busy", 
        "Operation timed out", 
        "Overflow", 
        "Pipe error", 
        "Insufficient memory", 
        "Other error", 
        "Unknown libusb-1.0 error code", 
        "/proc/devices", 
        " %*d %s", 
        "scanning directory %s", 
        "cannot stat `%s' (%s)", 
        "`%s' is not a directory", 
        "uscanner", 
        "checking %s...", 
        " failed to open (%s)", 
        "filename too long", 
        "unknown device", 
        " open ok", 
        "Inquiry for device:", 
        " %2.2x", 
        "  %s    %s", 
        "  %3.3d:", 
        "Remote Wakeup", 
        "Self-powered", 
        "control", 
        "isochronous", 
        "interrupt", 
        "-h: print this help message", 
        "sane-backends 1.0.27", 
        "searching for SCSI scanners:", 
        "searching for USB scanners:", 
        "ignoring libusb devices", 
        "trying libusb:", 
        "# Skipping libusb devices", 
        " (%s%s%s)", 
        "bLength               %d", 
        "bDescriptorType       %d", 
        "bDeviceClass          %d", 
        "bDeviceSubClass       %d", 
        "bDeviceProtocol       %d", 
        "bMaxPacketSize0       %d", 
        "idVendor              0x%04X", 
        "idProduct             0x%04X", 
        "bNumConfigurations    %d", 
        " <configuration %d>", 
        " bLength              %d", 
        " bDescriptorType      %d", 
        " wTotalLength         %d", 
        " bNumInterfaces       %d", 
        " bConfigurationValue  %d", 
        " MaxPower             %d mA", 
        "  <interface %d>", 
        "   <altsetting %d>", 
        "   bLength            %d", 
        "   bDescriptorType    %d", 
        "   bInterfaceNumber   %d", 
        "   bAlternateSetting  %d", 
        "   bNumEndpoints      %d", 
        "   bInterfaceClass    %d", 
        "   bInterfaceSubClass %d", 
        "   bInterfaceProtocol %d", 
        "    <endpoint %d>", 
        "    bLength           %d", 
        "    bDescriptorType   %d", 
        "    wMaxPacketSize    %d", 
        "    bInterval         %d ms", 
        "    bRefresh          %d", 
        "    bSynchAddress     %d", 
        ", product=0x%04x", 
        ", chip=%s", 
        ") at libusb:%03d:%03d", 
        "printer", 
        "processor", 
        "CD-writer", 
        "CD-drive", 
        "optical-drive", 
        "jukebox", 
        "communicator", 
        "/dev/usb/scanner", 
        "/dev/usb/scanner0", 
        "/dev/usb/scanner1", 
        "/dev/usb/scanner2", 
        "/dev/usb/scanner3", 
        "/dev/usb/scanner4", 
        "/dev/usb/scanner5", 
        "/dev/usb/scanner7", 
        "/dev/usb/scanner8", 
        "/dev/usb/scanner9", 
        "/dev/usb/scanner10", 
        "/dev/usb/scanner11", 
        "/dev/usb/scanner12", 
        "/dev/usb/scanner13", 
        "/dev/usb/scanner14", 
        "/dev/usb/scanner15", 
        "/dev/usbscanner", 
        "/dev/usbscanner0", 
        "/dev/usbscanner1", 
        "/dev/usbscanner2", 
        "/dev/usbscanner3", 
        "/dev/usbscanner4", 
        "/dev/usbscanner5", 
        "/dev/usbscanner6", 
        "/dev/usbscanner7", 
        "/dev/usbscanner8", 
        "/dev/usbscanner9", 
        "/dev/usbscanner10", 
        "/dev/usbscanner11", 
        "/dev/usbscanner12", 
        "/dev/usbscanner13", 
        "/dev/usbscanner14", 
        "/dev/usbscanner15", 
        "/dev/scanner", 
        "/dev/sg0", 
        "/dev/sg1", 
        "/dev/sg2", 
        "/dev/sg3", 
        "/dev/sg4", 
        "/dev/sg5", 
        "/dev/sg6", 
        "/dev/sg7", 
        "/dev/sg8", 
        "/dev/sg9", 
        "/dev/sga", 
        "/dev/sgb", 
        "/dev/sgc", 
        "/dev/sgd", 
        "/dev/sge", 
        "/dev/sgf", 
        "/dev/sgg", 
        "/dev/sgh", 
        "/dev/sgi", 
        "/dev/sgj", 
        "/dev/sgk", 
        "/dev/sgl", 
        "/dev/sgm", 
        "/dev/sgn", 
        "/dev/sgo", 
        "/dev/sgp", 
        "/dev/sgq", 
        "/dev/sgr", 
        "/dev/sgs", 
        "/dev/sgt", 
        "/dev/sgu", 
        "/dev/sgv", 
        "/dev/sgw", 
        "/dev/sgx", 
        "/dev/sgy", 
        "/dev/sgz", 
        "Access denied (insufficient permissions)", 
        "No such device (it may have been disconnected)", 
        "System call interrupted (perhaps due to signal)", 
        "Operation not supported or unimplemented on this platform", 
        "cannot read directory `%s' (%s)", 
        "checking %s even though doesn't look like a USB device...", 
        "ignored %s (not a USB device)", 
        " open ok, vendor and product ids were identified", 
        "found USB scanner (vendor=0x%04x, product=0x%04x) at %s", 
        " open ok, but vendor and product could NOT be identified", 
        "found USB scanner (UNKNOWN vendor and product) at device %s", 
        "could not fetch string descriptor: %s", 
        "could not fetch string descriptor (again): %s", 
        "checking %s even though it looks like a USB device...", 
        "ignored %s (not a SCSI device)", 
        "inquiry for device %s failed (%s)", 
        "found SCSI %s \"%s %s %s\" at %s", 
        "Usage: %s [-hvqf] [devname ...]", 
        "-v: be more verbose (can be used multiple times)", 
        "-q: be quiet (print only devices, no comments)", 
        "-f: force opening devname as SCSI even if it looks like USB", 
        "-p: enable scanning for parallel port devices", 
        "option -F not implemented with libusb-1.0", 
        "unknown option: -%c, try -h for help", 
        "This is sane-find-scanner from %s", 
        "  # sane-find-scanner will now attempt to detect your scanner. If the", 
        "  # result is different from what you expected, first make sure your", 
        "  # scanner is powered up and properly connected to your computer.", 
        "  # Your SCSI scanner was detected. It may or may not be supported by SANE. Try", 
        "  # scanimage -L and read the backend's manpage.", 
        "  # No SCSI scanners found. If you expected something different, make sure that", 
        "  # you have loaded a kernel SCSI driver for your SCSI adapter.", 
        "  # Also you need support for SCSI Generic (sg) in your operating system.", 
        "  # If using Linux, try \"modprobe sg\".", 
        "# Could not initialize libusb-1.0, error %d", 
        "# Could not get device list, error %d", 
        "could not get device descriptor for device at %03d:%03d: %s", 
        "could not open USB device 0x%04x/0x%04x at %03d:%03d: %s", 
        "could not get configuration for device 0x%04x/0x%04x at %03d:%03d: %s", 
        "<device descriptor of 0x%04x/0x%04x at %03d:%03d", 
        "bcdUSB                %d.%d%d", 
        "bcdDevice             %d.%d%d", 
        "iManufacturer         %d (%s)", 
        "iProduct              %d (%s)", 
        "could not get configuration descriptor %d: %s", 
        " iConfiguration       %d (%s)", 
        " bmAttributes         %d (%s%s)", 
        "   iInterface         %d (%s)", 
        "    bEndpointAddress  0x%02X (%s 0x%02X)", 
        "    bmAttributes      %d (%s)", 
        "could not get config[0] descriptor: %s", 
        "found USB scanner (vendor=0x%04x", 
        "  # Your USB scanner was (probably) detected. It may or may not be supported by", 
        "  # SANE. Try scanimage -L and read the backend's manpage.", 
        "  # Your USB scanner was detected. It may or may not be supported by", 
        "  # SANE. Try scanimage -L and read the backend's manpage.", 
        "  # `UNKNOWN vendor and product' means that there seems to be a scanner at this", 
        "  # device file but the vendor and product ids couldn't be identified.", 
        "  # Currently identification only works with Linux versions >= 2.4.8. You may", 
        "  # need to configure your backend manually, see the backend's manpage.", 
        "  # No USB scanners found. If you expected something different, make sure that", 
        "  # you have loaded a kernel driver for your USB host controller and have setup", 
        "  # the USB system correctly. See man sane-usb for details.", 
        "searching for Mustek parallel port scanners:", 
        "found possible Mustek parallel port scanner at \"%s\"", 
        "checking %s (SCSI emulation)...", 
        "found possible Mustek SCSI over PP scanner at \"%s\"", 
        "  # Your Mustek parallel port scanner was detected.  It may or", 
        "  # may not be supported by SANE.  Please read the sane-mustek_pp", 
        "  # man-page for setup instructions.", 
        "  # No Mustek parallel port scanners found. If you expected something", 
        "  # different, make sure the scanner is correctly connected to your computer", 
        "  # and you have appropriate access rights.", 
        "  # Not checking for parallel port scanners.", 
        "  # Most Scanners connected to the parallel port or other proprietary ports", 
        "  # can't be detected by this program.", 
        "  # You may want to run this program as root to find all devices. Once you", 
        "  # found the scanner devices, be sure to adjust access permissions as", 
        "  # necessary.", 
        "iSerialNumber         %d (%s)", 
        "LM9830", 
        "LM9831", 
        "LM983x?", 
        "GT-6816", 
        "GT-6801", 
        "LM9832/3", 
        "GL646_HP", 
        "GL848+", 
        "    checking for GT-6801 ...", 
        "    checking for GT-6816 ...", 
        "    checking for GLxxx ...", 
        "<trying to find out which USB chip is used>", 
        "couldnt set device to configuration %d", 
        "could not claim USB device interface", 
        "    checking for LM983[1,2,3] ...", 
        "    this is not a LM983x (bDeviceClass = %d, bInterfaceClass = %d)", 
        "    this is not a LM983x (bcdUSB = 0x%x)", 
        "    this is not a LM983x (bDeviceSubClass = 0x%x)", 
        "    this is not a LM983x (bDeviceProtocol = 0x%x)", 
        "    this is not a LM983x (bNumEndpoints = %d)", 
        "    this is not a LM983x (bEndpointAddress = 0x%x, bmAttributes = 0x%x, wMaxPacketSize = 0x%x, bInterval = 0x%x)", 
        "  Couldn't access LM983x registers.", 
        "    this is not a GT-6801 (bDeviceClass = %d)", 
        "    this is not a GT-6801 (bcdUSB = 0x%x)", 
        "    this is not a GT-6801 (bDeviceSubClass = 0x%x)", 
        "    this is not a GT-6801 (bDeviceProtocol = 0x%x)", 
        "    this is not a GT-6801 (bNumEndpoints = %d)", 
        "    this is not a GT-6801 (bEndpointAddress = 0x%x, bmAttributes = 0x%x, wMaxPacketSize = 0x%x, bInterval = 0x%x)", 
        "    Couldn't send write control message (%s)", 
        "    Couldn't send read control message (%s)", 
        "    Unexpected result from control message (%0x/%0x)", 
        "    this is not a GT-6816 (bDeviceClass = %d, bInterfaceClass = %d)", 
        "    this is not a GT-6816 (bcdUSB = 0x%x)", 
        "    this is not a GT-6816 (bDeviceSubClass = 0x%x)", 
        "    this is not a GT-6816 (bDeviceProtocol = 0x%x)", 
        "    this is not a GT-6816 (bNumInterfaces = 0x%x)", 
        "    this is not a GT-6816 (bNumEndpoints = %d)", 
        "    this is not a GT-6816 (bEndpointAddress = 0x%x, bmAttributes = 0x%x, wMaxPacketSize = 0x%x, bInterval = 0x%x)", 
        "    this is not a GL646 (bcdUSB = 0x%x)", 
        "    this is not a GL646 (bDeviceSubClass = 0x%x)", 
        "    this is not a GL646 (bDeviceProtocol = 0x%x)", 
        "    this is not a GL646 (bNumEndpoints = %d)", 
        "    this is not a GL646 (bEndpointAddress = 0x%x, bmAttributes = 0x%x, wMaxPacketSize = 0x%x, bInterval = 0x%x)", 
        "    this is not a GL646 (writing register failed)", 
        "    this is not a GL646 (reading register failed)", 
        "    this is not a GL646 (reg 0x4e != reg 0x38)", 
        "    this is not a GL646 (bDeviceClass = %d, bInterfaceClass = %d)", 
        "    this is not a GLxxx (bDeviceClass = %d, bInterfaceClass = %d)", 
        "    this is not a GLxxx (bDeviceSubClass = 0x%x)", 
        "    this is not a GLxxx (bDeviceProtocol = 0x%x)", 
        "    this is not a GLxxx (bNumEndpoints = %d)", 
        "    this is not a GLxxx (bEndpointAddress = 0x%x, bmAttributes = 0x%x, wMaxPacketSize = 0x%x, bInterval = 0x%x)", 
        "    this is not a GLxxx (writing register failed)", 
        "    this is not a GLxxx (reading register failed)", 
        "    this is not a GLxxx (reg 0x38 != 0x15)", 
        "<This USB chip looks like a %s (result from %s)>", 
        "<Couldn't determine the type of the USB chip (result from %s)>", 
        "Success", 
        "Operation not supported", 
        "Operation was cancelled", 
        "Device busy", 
        "Invalid argument", 
        "End of file reached", 
        "Document feeder jammed", 
        "Scanner cover is open", 
        "Error during device I/O", 
        "Out of memory", 
        "Unknown SANE status code %d", 
        "Document feeder out of documents", 
        "Access to resource has been denied", 
        "sanei_scsi", 
        "SANE_SG_BUFFERSIZE", 
        "/proc/sys/kernel/sg-big-buff", 
        "sanei_scsi.issue: %p", 
        "cat /proc/scsi/sg/debug 1>&2", 
        "/dev/sg", 
        "sanei_scsi.c", 
        "scsi_req_enter: entered %p", 
        "vendor", 
        "sanei_scsi_find_devices", 
        "/sys/bus/scsi/devices", 
        "/proc/scsi/scsi", 
        "sanei_proc_scsi_find_devices", 
        "%s: no match", 
        "%s/%s/%s", 
        "%s: could not open %s: %s", 
        "%s: error reading %s", 
        "%s: invalid type %ld", 
        "%s: bad attach", 
        "Vendor:", 
        "Model:", 
        "Channel:", 
        "SANE_SCSICMD_TIMEOUT", 
        "Scanner", 
        "Processor", 
        "src_size == cmd_size", 
        "src_size >= cmd_size", 
        "Direct-Access    ", 
        "Sequential-Access", 
        "Printer          ", 
        "Processor        ", 
        "WORM             ", 
        "CD-ROM           ", 
        "Scanner          ", 
        "Optical Device   ", 
        "Medium Changer   ", 
        "Communications   ", 
        "ASC IT8          ", 
        "RAID             ", 
        "Enclosure        ", 
        "Direct-Access-RBC", 
        "Optical card     ", 
        "Bridge controller", 
        "Object storage   ", 
        "Automation/Drive ", 
        "/dev/uk", 
        "/dev/gsc", 
        "get_max_buffer_size for %s: %i", 
        "lx_chk_id: %d,%d  %d,%d  %d,%d  %d,%d", 
        "sanei_scsi.issue: bad write (errno=%i) %s %li", 
        "sanei_scsi.issue: SG_IO ioctl error (errno=%i, ret=%d) %s", 
        "sanei_scsi.issue: SG_BIG_BUF inconsistency? Check file PROBLEMS.", 
        "issue: ENOMEM - cannot queue SCSI command. Trying again later.", 
        "issue: EAGAIN - cannot queue SCSI command. Trying again later.", 
        "/dev/scsi/host%d/bus%d/target%d/lun%d/generic", 
        "lx_chk_devicename: matched device(devfs): %s", 
        "lx_chk_devicename: matched device(direct): %s", 
        "lx_scan_sg: k=%d, exclude=%d, missed=%d", 
        "lx_chk_devicename: matched device(scan): %s", 
        "sanei_scsi_req_enter: failed to malloc %lu bytes", 
        "sanei_scsi_req_enter2: ioctl to set command length failed", 
        "sanei_scsi_req_enter2 warning: truncating write data from requested %li bytes to allowed %li bytes", 
        "sanei_scsi_req_enter2 warning: truncating write data from requested %li bytes to allowed %i bytes", 
        "scsi_req_enter: queue_used: %i, queue_max: %i", 
        "req == ((fdparms *) fd_info[req->fd].pdata)->sane_qhead", 
        "sanei_scsi_req_wait: waiting for %p", 
        "sanei_scsi_req_wait: read %ld bytes", 
        "sanei_scsi_req_wait: read returned %ld (errno=%d)", 
        "sanei_scsi_req_wait: SCSI command complained: %s", 
        "sense buffer: %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x", 
        "target status: %02x host status: %02x driver status: %02x", 
        "target status: %02x host status: %04x driver status: %04x", 
        "sanei_scsi_req_wait: SG driver returned resid %i", 
        "                     NOTE: This value may be bogus", 
        "%s: looking for: v=%s m=%s t=%s b=%d c=%d i=%d l=%d", 
        "%s: could not open %s; falling back to /proc", 
        "%s: could not open %s for reading", 
        "%s: found: vendor=%s model=%s type=%s", 
        "bus=%d chan=%d id=%d lun=%d num=%d", 
        "sanei_scsi_find_devices: bad attach", 
        "%s: could not read directory %s: %s", 
        "%s: invalid integer in string (%s): %s", 
        "%s: no integer found in string: %s (%d)", 
        "%s: parse error on string %s (%d)", 
        "%s: skipping %s/%s, PATH_MAX exceeded on %s", 
        "%s: invalid integer in type string (%s): %s", 
        "%s: no integer found in type string: %s", 
        "sanei_scsi_open: timeout value must be between 1 and 1200 seconds", 
        "sanei_scsi_open: sanei_scsi_max_request_size=%d bytes", 
        "sanei_scsi_open: open of `%s' failed: %s", 
        "sanei_scsi_open: SG driver version: %i", 
        "sanei_scsi_open: The file %s is not an SG device file", 
        "sanei_scsi_open: The device found for %s does not look like a scanner", 
        "sanei_scsi_open_extended: using %i bytes as SCSI buffer", 
        "sanei_scsi_open: cannot read SG buffer size - %s", 
        "trying to enable low level command queueing", 
        "sanei_scsi_open: Host adapter queue depth: %i", 
        "sanei_scsi_open: using old SG driver logic", 
        "sanei_scsi_open: SG driver can change buffer size at run time", 
        "sanei_scsi_open: low level command queueing enabled", 
        "sanei_scsi_open: using new SG header structure", 
        "sanei_scsi_open: could not allocate SG buffer memory wanted: %i got: %i", 
        "sanei_scsi_cmd", 
        "sanei_scsi_req_enter", 
        "sanei_scsi_req_wait", 
        "sanei_scsi_req_flush_all", 
        "sanei_config", 
        "SANE_CONFIG_DIR", 
        ".:/etc/sane.d", 
        "%s%c%s", 
        "sanei_configure_attach: exit", 
        "option", 
        "sanei_config_get_paths: using config directories  %s", 
        "sanei_config_open: could not find config file `%s'", 
        "sanei_config_open: attempting to open `%s'", 
        "sanei_config_open: using file `%s'", 
        "sanei_configure_attach: start", 
        "sanei_configure_attach: couldn't access %s", 
        "sanei_configure_attach: couldn't find a string to parse", 
        "sanei_configure_attach: couldn't find a valid boolean value", 
        "sanei_configure_attach: couldn't find a string value to parse", 
        "sanei_configure_attach: incorrect type %d for option %s, skipping option ...", 
        "sanei_configure_attach: failed to parse option '%s', line '%s'", 
        "sanei_configure_attach: trying to attach with '%s'", 
        "GEverything went fine", 
        "Not available on this system", 
        "Negotiation went wrong", 
        "No memory left", 
        "Error initializing port", 
        "Error interfacing system", 
        "No IEEE 1284 ID available", 
        "Invalid port", 
        "Unknown error", 
        "sanei_pa4s2", 
        "pa4s2_init: port %d is `%s`", 
        "pa4s2_open: opening device", 
        "sanei_pa4s2_devices: invoked", 
        "sanei_pa4s2_close: fd = %d", 
        "sanei_pa4s2_close: failed", 
        "pa4s2_close: fd=%d", 
        "pa4s2_close: disabling port", 
        "sanei_pa4s2_close: finished", 
        "sanei_pa4s2_enable: aborting", 
        "sanei_pa4s2_open: mode works", 
        "Not implemented in libieee1284", 
        "IEEE 1284 negotiation rejected", 
        "pa4s2_disable: using alternative command set", 
        "pa4s2_disable: state restored", 
        "pa4s2_init: static int first_time = %u", 
        "pa4s2_init: sanei already initialized", 
        "pa4s2_init: called for the first time", 
        "pa4s2_init: initializing libieee1284", 
        "pa4s2_init: initializing IEEE 1284 failed (%s)", 
        "pa4s2_init: %d ports reported by IEEE 1284 library", 
        "pa4s2_init: allocating port list", 
        "pa4s2_init: not enough free memory", 
        "pa4s2_init: initialized successfully", 
        "pa4s2_open: trying to attach dev `%s`", 
        "pa4s2_open: failed to initialize", 
        "pa4s2_open: looking up port in list", 
        "pa4s2_open: device `%s` is already in use", 
        "pa4s2_open: returning SANE_STATUS_DEVICE_BUSY", 
        "pa4s2_open: setting up port data", 
        "pa4s2_open: name=%s in_use=SANE_TRUE", 
        "pa4s2_open: enabled=SANE_FALSE mode=PA4S2_MODE_NIB", 
        "pa4s2_open: could not open device `%s` (%s)", 
        "pa4s2_open: marking port %d as unused", 
        "pa4s2_open: device `%s` opened...", 
        "pa4s2_open: returning SANE_STATUS_GOOD", 
        "pa4s2_open: open dev `%s` as fd %u", 
        "pa4s2_open: `%s` is not a valid device name", 
        "pa4s2_open: returning SANE_STATUS_INVAL", 
        "pa4s2_open: port is in list at port[%d]", 
        "%s: interface called for the first time", 
        "sanei_pa4s2_devices: failed to initialize (%s)", 
        "sanei_pa4s2_devices: not enough free memory", 
        "sanei_pa4s2_scsi_pp_get_status: called for fd %d", 
        "sanei_pa4s2_scsi_pp_get_status: invalid fd %d", 
        "sanei_pa4s2_scsi_pp_get_status: returning SANE_STATUS_INVAL", 
        "sanei_pa4s2_scsi_pp_get_status: port is not in use", 
        "sanei_pa4s2_scsi_pp_get_status: port is '%s'", 
        "sanei_pa4s2_scsi_pp_get_status: port is not enabled", 
        "sanei_pa4s2_scsi_pp_get_status: status=0x%02X", 
        "sanei_pa4s2_scsi_pp_get_status: returning SANE_STATUS_GOOD", 
        "sanei_pa4s2_scsi_pp_reg_select: invalid fd %d", 
        "sanei_pa4s2_scsi_pp_reg_select: returning SANE_STATUS_INVAL", 
        "sanei_pa4s2_scsi_pp_reg_select: port is not in use", 
        "sanei_pa4s2_scsi_pp_reg_select: port is not enabled", 
        "sanei_pa4s2_scsi_pp_reg_select: selecting register %u at port '%s'", 
        "sanei_pa4s2_close: fd %d is invalid", 
        "sanei_pa4s2_close: port is not in use", 
        "sanei_pa4s2_close: port is '%s'", 
        "sanei_pa4s2_close: freeing resources", 
        "pa4s2_close: this is port '%s'", 
        "pa4s2_close: checking whether port is enabled", 
        "pa4s2_close: trying to free io port", 
        "pa4s2_close: can't free port '%s' (%s)", 
        "pa4s2_close: returning SANE_STATUS_IO_ERROR", 
        "sanei_pa4s2_close: could not close scanner", 
        "pa4s2_close: marking port as unused", 
        "pa4s2_close: returning SANE_STATUS_GOOD", 
        "sanei_pa4s2_enable: called for fd %d with value %d", 
        "sanei_pa4s2_enable: fd %d is invalid", 
        "sanei_pa4s2_enable: returning SANE_STATUS_INVAL", 
        "sanei_pa4s2_enable: port is not in use", 
        "sanei_pa4s2_enable: invalid value %d", 
        "sanei_pa4s2_enable: senseless call...", 
        "sanei_pa4s2_enable: returning SANE_STATUS_GOOD", 
        "sanei_pa4s2_enable: enable port '%s'", 
        "pa4s2_enable: failed to claim the port (%s)", 
        "sanei_pa4s2_enable: failed to enable port", 
        "sanei_pa4s2_enable: returning SANE_STATUS_IO_ERROR", 
        "pa4s2_enable: prelock[] = {0x%02x, 0x%02x, 0x%02x}", 
        "sanei_pa4s2_enable: disable port '%s'", 
        "sanei_pa4s2_scsi_pp_open: called for device '%s'", 
        "sanei_pa4s2_scsi_pp_open: trying to connect to port", 
        "sanei_pa4s2_scsi_pp_open: connection failed", 
        "sanei_pa4s2_scsi_pp_open: connected to device using fd %u", 
        "sanei_pa4s2_scsi_pp_open: checking for scanner", 
        "sanei_pa4s2_scsi_pp_open: error enabling device", 
        "sanei_pa4s2_scsi_pp_open: error getting device status", 
        "sanei_pa4s2_scsi_pp_open: device returned status 0x%02X", 
        "sanei_pa4s2_scsi_pp_open: error disabling device", 
        "sanei_pa4s2_scsi_pp_open: returning SANE_STATUS_GOOD", 
        "sanei_pa4s2_readbegin: called for fd %d and register %u", 
        "sanei_pa4s2_readbegin: invalid fd %d", 
        "sanei_pa4s2_readbegin: returning SANE_STATUS_INVAL", 
        "sanei_pa4s2_readbegin: port is not in use", 
        "sanei_pa4s2_readbegin: port is not enabled", 
        "sanei_pa4s2_readbegin: EPP readbegin", 
        "pa4s2_readbegin_epp: selecting register %u at '%s'", 
        "sanei_pa4s2_readbegin: UNI readbegin", 
        "pa4s2_readbegin_uni: selecting register %u for '%s'", 
        "sanei_pa4s2_readbegin: NIB readbegin", 
        "pa4s2_readbegin_nib: selecting register %u at '%s'", 
        "sanei_pa4s2_readbegin: port info broken", 
        "sanei_pa4s2_readbegin: invalid port mode", 
        "sanei_pa4s2_readbegin: return SANE_STATUS_INVAL", 
        "sanei_pa4s2_readbegin: returning SANE_STATUS_GOOD", 
        "sanei_pa4s2_readbyte: called with fd %d", 
        "sanei_pa4s2_readbyte: got NULL pointer as result buffer", 
        "sanei_pa4s2_readbyte: invalid fd %d", 
        "sanei_pa4s2_readbyte: returning SANE_STATUS_INVAL", 
        "sanei_pa4s2_readbyte: port is not in use", 
        "sanei_pa4s2_readbyte: port is not enabled", 
        "sanei_pa4s2_readbyte: we hope, the backend called", 
        "sanei_pa4s2_readbyte: readbegin, so the port is ok...", 
        "sanei_pa4s2_readbyte: this means, I did not check it - it's", 
        "sanei_pa4s2_readbyte: not my fault, if your PC burns down.", 
        "sanei_pa4s2_readbyte: read in EPP mode", 
        "pa4s2_readbyte_epp: reading value 0x%02x from '%s'", 
        "sanei_pa4s2_readbyte: read in UNI mode", 
        "pa4s2_readbyte_uni: reading value 0x%02x from '%s'", 
        "sanei_pa4s2_readbyte: read in NIB mode", 
        "pa4s2_readbyte_nib: reading value 0x%02x from '%s'", 
        "sanei_pa4s2_readbyte: port info broken", 
        "sanei_pa4s2_readbyte: probably the port wasn't correct configured...", 
        "sanei_pa4s2_readbyte: invalid port mode", 
        "sanei_pa4s2_readbyte: port mode %u", 
        "sanei_pa4s2_readbyte: I told you!!!", 
        "sanei_pa4s2_readbyte: return SANE_STATUS_INVAL", 
        "sanei_pa4s2_readbyte: read finished", 
        "sanei_pa4s2_readbyte: got value 0x%02x", 
        "sanei_pa4s2_readbyte: returning SANE_STATUS_GOOD", 
        "sanei_pa4s2_readend: called for fd %d", 
        "sanei_pa4s2_readend: invalid fd %d", 
        "sanei_pa4s2_readend: returning SANE_STATUS_INVAL", 
        "sanei_pa4s2_readend: port is not in use", 
        "sanei_pa4s2_readend: port is not enabled", 
        "sanei_pa4s2_readend: we hope, the backend called", 
        "sanei_pa4s2_readend: readbegin, so the port is ok...", 
        "sanei_pa4s2_readend: this means, I did not check it - it's", 
        "sanei_pa4s2_readend: not my fault, if your PC burns down.", 
        "sanei_pa4s2_readend: EPP mode readend", 
        "pa4s2_readend_epp: end of reading sequence", 
        "sanei_pa4s2_readend: UNI mode readend", 
        "pa4s2_readend_uni: end of reading sequence for fd %d", 
        "sanei_pa4s2_readend: NIB mode readend", 
        "pa4s2_readend_nib: end of reading sequence for fd %d", 
        "sanei_pa4s2_readend: port info broken", 
        "sanei_pa4s2_readend: probably the port wasn't correct configured...", 
        "sanei_pa4s2_readend: invalid port mode", 
        "sanei_pa4s2_readend: port mode %u", 
        "sanei_pa4s2_readend: I told you!!!", 
        "sanei_pa4s2_readend: return SANE_STATUS_INVAL", 
        "sanei_pa4s2_readend: returning SANE_STATUS_GOOD", 
        "sanei_pa4s2_open: called for device '%s'", 
        "sanei_pa4s2_open: trying to connect to port", 
        "sanei_pa4s2_open: connection failed", 
        "sanei_pa4s2_open: connected to device using fd %u", 
        "sanei_pa4s2_open: checking for scanner", 
        "sanei_pa4s2_open: reading ASIC id", 
        "sanei_pa4s2_open: detected ASIC id 1013", 
        "sanei_pa4s2_open: detected ASIC id 1015", 
        "sanei_pa4s2_open: detected ASIC id 1505", 
        "sanei_pa4s2_open: could not find scanner", 
        "sanei_pa4s2_open: reported ASIC id 0x%02x", 
        "sanei_pa4s2_open: closing port", 
        "sanei_pa4s2_open: returning SANE_STATUS_INVAL", 
        "sanei_pa4s2_open: trying better modes", 
        "sanei_pa4s2_open: skipping mode UNI", 
        "sanei_pa4s2_open: skipping mode EPP", 
        "sanei_pa4s2_open: trying mode %u", 
        "sanei_pa4s2_open: mode failed", 
        "sanei_pa4s2_open: returned ASIC-ID 0x%02x", 
        "sanei_pa4s2_open: using mode %u", 
        "sanei_pa4s2_open: returning SANE_STATUS_GOOD", 
        "sanei_pa4s2_writebyte: called for fd %d, reg %u and val %u", 
        "sanei_pa4s2_writebyte: invalid fd %d", 
        "sanei_pa4s2_writebyte: returning SANE_STATUS_INVAL", 
        "sanei_pa4s2_writebyte: port is not in use", 
        "sanei_pa4s2_writebyte: port is not enabled", 
        "sanei_pa4s2_writebyte: NIB/UNI/EPP write", 
        "pa4s2_writebyte_any: writing value 0x%02x in reg %u to '%s'", 
        "sanei_pa4s2_writebyte: returning SANE_STATUS_GOOD", 
        "sanei_pa4s2_writebyte: port info broken", 
        "sanei_pa4s2_writebyte: invalid port mode", 
        "sanei_pa4s2_writebyte: port mode %u", 
        "sanei_pa4s2_writebyte: return SANE_STATUS_INVAL", 
        "sanei_pa4s2_options: called with options %u and set = %d", 
        "sanei_pa4s2_options: value of set is invalid", 
        "sanei_pa4s2_options: value of *options is invalid", 
        "sanei_pa4s2_options: returning SANE_STATUS_GOOD", 
        "sanei_pa4s2_options: setting options to %u", 
        "sanei_pa4s2_options: options are set to %u", 
        "sanei_pa4s2_options", 
        "sanei_pa4s2_writebyte", 
        "sanei_pa4s2_readend", 
        "sanei_pa4s2_readbyte", 
        "sanei_pa4s2_readbegin", 
        "sanei_pa4s2_enable", 
        "sanei_pa4s2_close", 
        "sanei_pa4s2_open", 
        "sanei_pa4s2_scsi_pp_open", 
        "sanei_pa4s2_scsi_pp_reg_select", 
        "sanei_pa4s2_scsi_pp_get_status", 
        "sanei_pa4s2_devices", 
        "sanei_usb", 
        "store_device: no room for %s", 
        "libusb:%03d:%03d", 
        "%s: freeing resources", 
        "%s: freeing device %02d", 
        "%s: marking existing devices", 
        "%s: device %02d is %s", 
        "%s: found %d devices", 
        "%s: initializing libusb-1.0", 
        "sanei_usb_reset: ret=%d", 
        "SANE_USB_WORKAROUND", 
        "sanei_usb_get_descriptor", 
        "%s: Looking for libusb-1.0 devices", 
        "%s: failed to get libusb-1.0 device list, error %d", 
        "%s: could not get device descriptor for device at %03d:%03d (err %d)", 
        "%s: device 0x%04x/0x%04x at %03d:%03d looks like a root hub", 
        "%s: skipping device 0x%04x/0x%04x at %03d:%03d: cannot open: %s", 
        "%s: could not get configuration for device 0x%04x/0x%04x at %03d:%03d (err %d)", 
        "%s: device 0x%04x/0x%04x at %03d:%03d is not configured", 
        "%s: could not get config[0] descriptor for device 0x%04x/0x%04x at %03d:%03d (err %d)", 
        "%s: device 0x%04x/0x%04x doesn't have an altsetting for interface %d", 
        "%s: device 0x%04x/0x%04x, interface %d doesn't look like a scanner (%d/%d)", 
        "%s: found libusb-1.0 device (0x%04x/0x%04x) interface %d at %s", 
        "store_device: not storing device %s", 
        "store_device: overwrite dn %d with %s", 
        "store_device: add dn %d with %s", 
        "%s: device 0x%04x/0x%04x at %03d:%03d: no suitable interfaces", 
        "%s: sanei_usb in not initialized!", 
        "%s: not freeing resources since use count is %d", 
        "%s: sanei_usb is not initialized!", 
        "%s: failed to initialize libusb-1.0, error %d", 
        "sanei_usb_get_vendor_product_byname: not support for this method", 
        "sanei_usb_get_vendor_product_byname: can't find device `%s' in list", 
        "sanei_usb_get_vendor_product: dn >= device number || dn < 0", 
        "sanei_usb_get_vendor_product: dn=%d is missing!", 
        "sanei_usb_get_vendor_product: device %d: Your OS doesn't seem to support detection of vendor+product ids", 
        "sanei_usb_get_vendor_product: device %d: vendorID: 0x%04x, productID: 0x%04x", 
        "sanei_usb_find_devices: vendor=0x%04x, product=0x%04x", 
        "sanei_usb_set_endpoint: dn >= device number || dn < 0", 
        "sanei_usb_set_endpoint: Setting endpoint of type 0x%02x to 0x%02x", 
        "sanei_usb_get_endpoint: dn >= device number || dn < 0", 
        "sanei_usb_open: trying to open device `%s'", 
        "sanei_usb_open: can't open `%s': dn == NULL", 
        "sanei_usb_open: device `%s' already open", 
        "sanei_usb_open: can't find device `%s' in list", 
        "sanei_usb_open: can't open device `%s': %s", 
        "Make sure you run as root or set appropriate permissions", 
        "Maybe the kernel scanner driver claims the scanner's interface?", 
        "sanei_usb_open: could not get configuration for device `%s' (err %d)", 
        "sanei_usb_open: device `%s' not configured?", 
        "sanei_usb_open: could not get device descriptor for device `%s' (err %d)", 
        "sanei_usb_open: could not get config[0] descriptor for device `%s' (err %d)", 
        "sanei_usb_open: more than one configuration (%d), choosing first config (%d)", 
        "sanei_usb_open: libusb complained: %s", 
        "Maybe the kernel scanner driver or usblp claims the interface? Ignoring this error...", 
        "sanei_usb_open: could not get config[%d] descriptor for device `%s' (err %d)", 
        "sanei_usb_open: configuration nr: %d", 
        "sanei_usb_open:     interface nr: %d", 
        "sanei_usb_open:   alt_setting nr: %d", 
        "sanei_usb_open: interface %d not detected as a scanner by sanei_usb_init, ignoring.", 
        "sanei_usb_open: endpoint nr: %d", 
        "sanei_usb_open: direction: %d", 
        "sanei_usb_open: address: %d transfertype: %d", 
        "sanei_usb_open: we already have a int-in endpoint (address: 0x%02x), ignoring the new one", 
        "sanei_usb_open: we already have a int-out endpoint (address: 0x%02x), ignoring the new one", 
        "sanei_usb_open: we already have a bulk-in endpoint (address: 0x%02x), ignoring the new one", 
        "sanei_usb_open: we already have a bulk-out endpoint (address: 0x%02x), ignoring the new one", 
        "sanei_usb_open: we already have a isochronous-in endpoint (address: 0x%02x), ignoring the new one", 
        "sanei_usb_open: we already have a isochronous-out endpoint (address: 0x%02x), ignoring the new one", 
        "sanei_usb_open: we already have a control-in endpoint (address: 0x%02x), ignoring the new one", 
        "sanei_usb_open: we already have a control-out endpoint (address: 0x%02x), ignoring the new one", 
        "sanei_usb_open: open of `%s' failed: %s", 
        "sanei_usb_open: fcntl of `%s' failed: %s", 
        "sanei_usb_open: can't open device `%s': usbcalls support missing", 
        "sanei_usb_open: access method %d not implemented", 
        "sanei_usb_open: opened usb device `%s' (*dn=%d)", 
        "sanei_usb_open: found interrupt-%s endpoint (address 0x%02x)", 
        "sanei_usb_open: found bulk-%s endpoint (address 0x%02x)", 
        "sanei_usb_open: found isochronous-%s endpoint (address 0x%02x)", 
        "sanei_usb_open: found control-%s endpoint (address 0x%02x)", 
        "sanei_usb_read_bulk: size == NULL", 
        "sanei_usb_read_bulk: dn >= device number || dn < 0", 
        "sanei_usb_read_bulk: trying to read %lu bytes", 
        "sanei_usb_read_bulk: read failed: %s", 
        "sanei_usb_read_bulk: can't read without a bulk-in endpoint", 
        "sanei_usb_read_bulk: usbcalls support missing", 
        "sanei_usb_read_bulk: access method %d not implemented", 
        "sanei_usb_read_bulk: read returned EOF", 
        "sanei_usb_read_bulk: wanted %lu bytes, got %ld bytes", 
        "sanei_usb_write_bulk: size == NULL", 
        "sanei_usb_write_bulk: dn >= device number || dn < 0", 
        "sanei_usb_write_bulk: trying to write %lu bytes", 
        "sanei_usb_write_bulk: write failed: %s", 
        "sanei_usb_write_bulk: can't write without a bulk-out endpoint", 
        "sanei_usb_write_bulk: usbcalls support missing", 
        "sanei_usb_write_bulk: access method %d not implemented", 
        "sanei_usb_write_bulk: wanted %lu bytes, wrote %ld bytes", 
        "sanei_usb_control_msg: dn >= device number || dn < 0, dn=%d", 
        "sanei_usb_control_msg: rtype = 0x%02x, req = %d, value = %d, index = %d, len = %d", 
        "sanei_usb_control_msg: SCANNER_IOCTL_CTRLMSG error - %s", 
        "sanei_usb_control_msg: libusb complained: %s", 
        "sanei_usb_control_msg: usbcalls support missing", 
        "sanei_usb_control_msg: access method %d not implemented", 
        "sanei_usb_read_int: size == NULL", 
        "sanei_usb_read_int: dn >= device number || dn < 0", 
        "sanei_usb_read_int: trying to read %lu bytes", 
        "sanei_usb_read_int: access method %d not implemented", 
        "sanei_usb_read_int: can't read without an int endpoint", 
        "sanei_usb_read_int: usbcalls support missing", 
        "sanei_usb_read_int: read returned EOF", 
        "sanei_usb_read_int: wanted %lu bytes, got %ld bytes", 
        "sanei_usb_set_configuration: dn >= device number || dn < 0, dn=%d", 
        "sanei_usb_set_configuration: configuration = %d", 
        "sanei_usb_set_configuration: libusb complained: %s", 
        "sanei_usb_set_configuration: access method %d not implemented", 
        "sanei_usb_claim_interface: dn >= device number || dn < 0, dn=%d", 
        "sanei_usb_claim_interface: device dn=%d is missing", 
        "sanei_usb_claim_interface: interface_number = %d", 
        "sanei_usb_claim_interface: libusb complained: %s", 
        "sanei_usb_claim_interface: access method %d not implemented", 
        "sanei_usb_release_interface: dn >= device number || dn < 0, dn=%d", 
        "sanei_usb_release_interface: device dn=%d is missing", 
        "sanei_usb_release_interface: interface_number = %d", 
        "sanei_usb_release_interface: libusb complained: %s", 
        "sanei_usb_release_interface: access method %d not implemented", 
        "sanei_usb_set_altinterface: dn >= device number || dn < 0, dn=%d", 
        "sanei_usb_set_altinterface: alternate = %d", 
        "sanei_usb_set_altinterface: libusb complained: %s", 
        "sanei_usb_set_altinterface: access method %d not implemented", 
        "sanei_usb_close: evaluating environment variable SANE_USB_WORKAROUND", 
        "sanei_usb_close: workaround: %d", 
        "sanei_usb_close: closing device %d", 
        "sanei_usb_close: dn >= device number || dn < 0", 
        "sanei_usb_close: device %d already closed or never opened", 
        "sanei_usb_close: usbcalls support missing", 
        "sanei_usb_clear_halt: evaluating environment variable SANE_USB_WORKAROUND", 
        "sanei_usb_clear_halt: dn >= device number || dn < 0", 
        "sanei_usb_clear_halt: workaround: %d", 
        "sanei_usb_clear_halt: BULK_IN ret=%d", 
        "sanei_usb_clear_halt: BULK_OUT ret=%d", 
        "sanei_usb_get_descriptor: dn >= device number || dn < 0, dn=%d", 
        "sanei_usb_get_descriptor: libusb error: %s", 
        "libusb_scan_devices", 
        "sanei_usb_scan_devices", 
        "sanei_usb_exit", 
        "sanei_usb_init", 
        "[sanei_debug] malloc() failed", 
        "Setting debug level of %s to %d.", 
        "[%s] %s", 
        "sanei_debug", 
        "9dfd476faf44d1107017e57f1d02103bbee674.debug", 
        ".shstrtab", 
        ".interp", 
        ".note.ABI-tag", 
        ".note.gnu.build-id", 
        ".gnu.hash", 
        ".dynsym", 
        ".dynstr", 
        ".gnu.version", 
        ".gnu.version_r", 
        ".rel.dyn", 
        ".rel.plt", 
        ".plt.got", 
        ".rodata", 
        ".eh_frame_hdr", 
        ".eh_frame", 
        ".init_array", 
        ".fini_array", 
        ".data.rel.ro", 
        ".dynamic", 
        ".gnu_debuglink"
    ], 
    "metadata": {
        "output": {
            "pcap": {
                "basename": "dump.pcap", 
                "sha256": "704e5e5b3234433c01fcfd1b20a306e77e985038120492dc53965c3edd38a4ea", 
                "dirname": ""
            }
        }
    }
}