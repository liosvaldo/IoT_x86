{
    "info": {
        "added": 1626981177.615322, 
        "started": 1627054527.342967, 
        "duration": 78, 
        "ended": 1627054606.079046, 
        "owner": null, 
        "score": 0.0, 
        "id": 2325576, 
        "category": "file", 
        "git": {
            "head": "", 
            "fetch_head": ""
        }, 
        "monitor": null, 
        "package": "elf", 
        "route": "internet", 
        "custom": null, 
        "machine": {
            "status": "stopped", 
            "name": "Ubuntu1904x644", 
            "label": "Ubuntu1904x644", 
            "platform": "linux", 
            "manager": "VirtualBox", 
            "started_on": "2021-07-23 15:35:27", 
            "shutdown_on": "2021-07-23 15:36:45"
        }, 
        "platform": "linux", 
        "version": "2.0.7", 
        "options": "procmemdump=yes,route=internet"
    }, 
    "signatures": [], 
    "target": {
        "category": "file", 
        "file": {
            "mimetype": "application/x-sharedlib", 
            "yara": [], 
            "sha1": "f81685ea163392181d92eb8f54667785201a3b45", 
            "name": "png.so", 
            "type": "ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV), dynamically linked, BuildID[sha1]=8517e9aa108eb7ed6239ad68bced683011d139d1, stripped", 
            "sha256": "e80e41bbf9d47d49165efb302bf7ace4dcbfb07f6badbe5113b729ae042ae46c", 
            "urls": [
                "http://www.libpng.org/", 
                "http://www.libpng.org/pub/mng/"
            ], 
            "crc32": "18FD3900", 
            "path": "/srv/cuckoo/cwd/storage/binaries/e80e41bbf9d47d49165efb302bf7ace4dcbfb07f6badbe5113b729ae042ae46c", 
            "ssdeep": null, 
            "size": 178200, 
            "sha512": "ff87b9331703531d8a39e6a5688f939e5fbf2fd4a45b4d80ec3ecd5f403228cf746998d85eebddc341b23ec2ddb91d07ff557b421a1ea65d92b117407e10a9b7", 
            "md5": "a5820c9d65edbd104e2e56691df8e278"
        }, 
        "custom": null
    }, 
    "irma": {
        "status": 0, 
        "probes_finished": 16, 
        "scan_id": "1a7ca11f-2647-4f6c-8b0d-5502f19b8a71", 
        "parent_file_sha256": null, 
        "name": "e80e41bbf9d47d49165efb302bf7ace4dcbfb07f6badbe5113b729ae042ae46c", 
        "scan_date": 1627075651, 
        "other_results": [], 
        "submitter": "cli", 
        "probes_total": 16, 
        "file_infos": {
            "mimetype": "ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV)", 
            "sha1": "f81685ea163392181d92eb8f54667785201a3b45", 
            "tags": [], 
            "timestamp_first_scan": 1626891969.3, 
            "timestamp_last_scan": 1627075668.72, 
            "sha256": "e80e41bbf9d47d49165efb302bf7ace4dcbfb07f6badbe5113b729ae042ae46c", 
            "md5": "a5820c9d65edbd104e2e56691df8e278", 
            "size": 178200
        }, 
        "probe_results": {
            "antivirus": {
                "Avast Core Security (Linux)": {
                    "status": 0, 
                    "duration": 0.02, 
                    "version": "3.0.3", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "F-Secure Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 0.02, 
                    "version": "11.10", 
                    "results": null, 
                    "virus_database_version": "2021-06-08_09"
                }, 
                "Windows Defender (Windows)": {
                    "status": 0, 
                    "duration": 0.06, 
                    "version": "1.1.18300.4", 
                    "results": null, 
                    "virus_database_version": "1.343.1173.0"
                }, 
                "Comodo Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 3.99, 
                    "version": "1.1.268025.1", 
                    "results": null, 
                    "virus_database_version": "2021-05-05"
                }, 
                "ESET NOD32 Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 3.87, 
                    "version": "4.0.96", 
                    "results": null, 
                    "virus_database_version": "6087dbf0-1e845 (2021-04-27)"
                }, 
                "GData (Windows)": {
                    "status": 0, 
                    "duration": 0.19, 
                    "version": "5.5.20197.1358", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Forticlient (Linux)": {
                    "status": -1, 
                    "duration": 3.26, 
                    "version": "unavailable", 
                    "virus_database_version": "unavailable", 
                    "error": "/opt/forticlient/scan.sh: line 8: 1788669 Segmentation fault      (core dumped) \"$scanbin\" -s \"$vir_sig\" -o \"$tmpdir\" --unit \"${forti}/\" -d \"$1\""
                }, 
                "Avira (Windows)": {
                    "status": 0, 
                    "duration": 5.81, 
                    "version": "8.3.62.226", 
                    "results": null, 
                    "virus_database_version": "8.18.36.236"
                }, 
                "Kaspersky (Windows)": {
                    "status": 0, 
                    "duration": 4.16, 
                    "version": "21.3", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "McAfee CLI scanner (Linux)": {
                    "status": 0, 
                    "duration": 6.4, 
                    "version": "6.0.6.653", 
                    "results": null, 
                    "virus_database_version": "9966"
                }, 
                "Sophos Anti-Virus (Linux)": {
                    "status": 0, 
                    "duration": 12.75, 
                    "version": "5.74.0", 
                    "results": null, 
                    "virus_database_version": "5.83 (23 March 2021)"
                }, 
                "DrWeb Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 0.12, 
                    "version": "11.1.9.2103151924", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "ClamAV (Linux)": {
                    "status": 0, 
                    "duration": 0.04, 
                    "version": "0.103.2", 
                    "results": null, 
                    "virus_database_version": "26190"
                }, 
                "eScan Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 5.04, 
                    "version": "7.0.21", 
                    "results": null, 
                    "virus_database_version": "7.88854 (16/06/2021)"
                }, 
                "Emsisoft Commandline Scanner (Windows)": {
                    "status": 0, 
                    "duration": 0.25, 
                    "version": "2021.1.0.10606", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Bitdefender Antivirus Scanner (Linux)": {
                    "status": 0, 
                    "duration": 7.1, 
                    "version": "7.90123", 
                    "results": null, 
                    "virus_database_version": null
                }
            }
        }, 
        "path": "", 
        "result_id": "d86a5aaf-4e2f-482c-b56a-b4eb12f3840d", 
        "file_sha256": "e80e41bbf9d47d49165efb302bf7ace4dcbfb07f6badbe5113b729ae042ae46c"
    }, 
    "suricata": {
        "tls": [], 
        "files": [], 
        "alerts": [], 
        "http": []
    }, 
    "virustotal": {
        "scans": {
            "Bkav": {
                "detected": false, 
                "version": "1.3.0.9899", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "Lionic": {
                "detected": false, 
                "version": "4.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "DrWeb": {
                "detected": false, 
                "version": "7.0.49.9080", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "MicroWorld-eScan": {
                "detected": false, 
                "version": "14.0.409.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "CMC": {
                "detected": false, 
                "version": "2.10.2019.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210506"
            }, 
            "CAT-QuickHeal": {
                "detected": false, 
                "version": "14.00", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "McAfee": {
                "detected": false, 
                "version": "6.0.6.653", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Malwarebytes": {
                "detected": false, 
                "version": "4.2.2.27", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Zillya": {
                "detected": false, 
                "version": "2.0.0.4376", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "Sangfor": {
                "detected": false, 
                "version": "2.9.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210416"
            }, 
            "K7AntiVirus": {
                "detected": false, 
                "version": "11.184.37304", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "K7GW": {
                "detected": false, 
                "version": "11.184.37304", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Arcabit": {
                "detected": false, 
                "version": "1.0.0.886", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "BitDefenderTheta": {
                "detected": false, 
                "version": "7.2.37796.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210525"
            }, 
            "Cyren": {
                "detected": false, 
                "version": "6.3.0.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Symantec": {
                "detected": false, 
                "version": "1.14.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "ESET-NOD32": {
                "detected": false, 
                "version": "23379", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "TrendMicro-HouseCall": {
                "detected": false, 
                "version": "10.0.0.1040", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Avast": {
                "detected": false, 
                "version": "21.1.5827.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "ClamAV": {
                "detected": false, 
                "version": "0.103.2.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "Kaspersky": {
                "detected": false, 
                "version": "21.0.1.45", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "BitDefender": {
                "detected": false, 
                "version": "7.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "NANO-Antivirus": {
                "detected": false, 
                "version": "1.0.146.25311", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "SUPERAntiSpyware": {
                "detected": false, 
                "version": "5.6.0.1032", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "Tencent": {
                "detected": false, 
                "version": "1.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Ad-Aware": {
                "detected": false, 
                "version": "3.0.21.179", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "TACHYON": {
                "detected": false, 
                "version": "2021-05-30.02", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Emsisoft": {
                "detected": false, 
                "version": "2018.12.0.1641", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Comodo": {
                "detected": false, 
                "version": "33575", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "F-Secure": {
                "detected": false, 
                "version": "12.0.86.52", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Baidu": {
                "detected": false, 
                "version": "1.0.0.2", 
                "result": null, 
                "normalized": [], 
                "update": "20190318"
            }, 
            "VIPRE": {
                "detected": false, 
                "version": "92924", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "TrendMicro": {
                "detected": false, 
                "version": "11.0.0.1006", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "McAfee-GW-Edition": {
                "detected": false, 
                "version": "v2019.1.2+3728", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "FireEye": {
                "detected": false, 
                "version": "32.44.1.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Sophos": {
                "detected": false, 
                "version": "1.0.2.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "SentinelOne": {
                "detected": false, 
                "version": "5.1.0.5", 
                "result": null, 
                "normalized": [], 
                "update": "20210518"
            }, 
            "GData": {
                "detected": false, 
                "version": "A:25.29809B:27.23186", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Jiangmin": {
                "detected": false, 
                "version": "16.0.100", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "Avira": {
                "detected": false, 
                "version": "8.3.3.12", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Antiy-AVL": {
                "detected": false, 
                "version": "3.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Kingsoft": {
                "detected": false, 
                "version": "2017.9.26.565", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Gridinsoft": {
                "detected": false, 
                "version": "1.0.41.133", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Microsoft": {
                "detected": false, 
                "version": "1.1.18200.4", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "ViRobot": {
                "detected": false, 
                "version": "2014.3.20.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "ZoneAlarm": {
                "detected": false, 
                "version": "1.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Avast-Mobile": {
                "detected": false, 
                "version": "210530-02", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Cynet": {
                "detected": false, 
                "version": "4.0.0.27", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "AhnLab-V3": {
                "detected": false, 
                "version": "3.20.1.10133", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Acronis": {
                "detected": false, 
                "version": "1.1.1.82", 
                "result": null, 
                "normalized": [], 
                "update": "20210512"
            }, 
            "ALYac": {
                "detected": false, 
                "version": "1.1.3.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "MAX": {
                "detected": false, 
                "version": "2019.9.16.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "VBA32": {
                "detected": false, 
                "version": "5.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210528"
            }, 
            "Zoner": {
                "detected": false, 
                "version": "0.0.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "Rising": {
                "detected": false, 
                "version": "25.0.0.26", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Yandex": {
                "detected": false, 
                "version": "5.5.2.24", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "Ikarus": {
                "detected": false, 
                "version": "0.1.5.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "MaxSecure": {
                "detected": false, 
                "version": "1.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "Fortinet": {
                "detected": false, 
                "version": "6.2.142.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Panda": {
                "detected": false, 
                "version": "4.6.4.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Qihoo-360": {
                "detected": false, 
                "version": "1.0.0.1120", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }
        }, 
        "scan_id": "e80e41bbf9d47d49165efb302bf7ace4dcbfb07f6badbe5113b729ae042ae46c-1622367647", 
        "sha1": "f81685ea163392181d92eb8f54667785201a3b45", 
        "resource": "a5820c9d65edbd104e2e56691df8e278", 
        "response_code": 1, 
        "scan_date": "2021-05-30 09:40:47", 
        "permalink": "https://www.virustotal.com/gui/file/e80e41bbf9d47d49165efb302bf7ace4dcbfb07f6badbe5113b729ae042ae46c/detection/f-e80e41bbf9d47d49165efb302bf7ace4dcbfb07f6badbe5113b729ae042ae46c-1622367647", 
        "summary": {
            "positives": 0, 
            "permalink": "https://www.virustotal.com/gui/file/e80e41bbf9d47d49165efb302bf7ace4dcbfb07f6badbe5113b729ae042ae46c/detection/f-e80e41bbf9d47d49165efb302bf7ace4dcbfb07f6badbe5113b729ae042ae46c-1622367647", 
            "scan_date": "2021-05-30 09:40:47"
        }, 
        "sha256": "e80e41bbf9d47d49165efb302bf7ace4dcbfb07f6badbe5113b729ae042ae46c", 
        "normalized": [], 
        "total": 61, 
        "positives": 0, 
        "verbose_msg": "Scan finished, information embedded", 
        "md5": "a5820c9d65edbd104e2e56691df8e278"
    }, 
    "network": {
        "tls": [], 
        "udp": [], 
        "dns_servers": [], 
        "http": [], 
        "icmp": [], 
        "smtp": [], 
        "tcp": [], 
        "smtp_ex": [], 
        "geoinfo": {}, 
        "mitm": [], 
        "hosts": [], 
        "pcap_sha256": "704e5e5b3234433c01fcfd1b20a306e77e985038120492dc53965c3edd38a4ea", 
        "dns": [], 
        "http_ex": [], 
        "domains": [], 
        "dead_hosts": [], 
        "irc": [], 
        "https_ex": []
    }, 
    "resubmit": {
        "resubmit_ids": []
    }, 
    "snort": {
        "alerts": []
    }, 
    "debug": {
        "action": [], 
        "dbgview": [], 
        "errors": [], 
        "log": [
            "2021-07-22 19:12:57,003 [root] DEBUG: Starting analyzer from: /tmp/tmpGFf5gD\n", 
            "2021-07-22 19:12:57,003 [root] DEBUG: Storing results at: /tmp/KpVTPXlvrC\n", 
            "2021-07-22 19:12:59,232 [modules.auxiliary.filecollector] INFO: FileCollector started v0.08\n", 
            "2021-07-22 19:12:59,234 [modules.auxiliary.human] INFO: Human started v0.02\n", 
            "2021-07-22 19:12:59,235 [modules.auxiliary.screenshots] INFO: Screenshots started v0.03\n", 
            "2021-07-22 19:13:04,846 [lib.core.packages] INFO: Process startup took 5.60 seconds\n", 
            "2021-07-22 19:13:04,846 [root] INFO: Added new process to list with pid: 3841\n", 
            "2021-07-22 19:13:13,859 [root] INFO: Process with pid 3841 has terminated\n", 
            "2021-07-22 19:13:13,860 [root] INFO: Process list is empty, terminating analysis.\n", 
            "2021-07-22 19:13:16,864 [lib.core.packages] INFO: Package requested stop\n", 
            "2021-07-22 19:13:16,866 [lib.core.packages] WARNING: Exception uploading log: [Errno 3] No such process\n"
        ], 
        "cuckoo": [
            "2021-07-23 15:35:27,724 [cuckoo.core.scheduler] INFO: Task #2325576: acquired machine Ubuntu1904x644 (label=Ubuntu1904x644)\n", 
            "2021-07-23 15:35:27,724 [cuckoo.core.resultserver] DEBUG: Now tracking machine 192.168.168.104 for task #2325576\n", 
            "2021-07-23 15:35:27,837 [cuckoo.auxiliary.sniffer] INFO: Started sniffer with PID 3675475 (interface=vboxnet0, host=192.168.168.104)\n", 
            "2021-07-23 15:35:27,947 [cuckoo.machinery.virtualbox] DEBUG: Starting vm Ubuntu1904x644\n", 
            "2021-07-23 15:35:28,325 [cuckoo.machinery.virtualbox] DEBUG: Restoring virtual machine Ubuntu1904x644 to Snapshot\n", 
            "2021-07-23 15:35:41,629 [cuckoo.core.guest] INFO: Starting analysis #2325576 on guest (id=Ubuntu1904x644, ip=192.168.168.104)\n", 
            "2021-07-23 15:35:42,633 [cuckoo.core.guest] DEBUG: Ubuntu1904x644: not ready yet\n", 
            "2021-07-23 15:35:43,386 [cuckoo.core.guest] DEBUG: Ubuntu1904x644: not ready yet\n", 
            "2021-07-23 15:35:46,405 [cuckoo.core.guest] INFO: Guest is running Cuckoo Agent 0.10 (id=Ubuntu1904x644, ip=192.168.168.104)\n", 
            "2021-07-23 15:35:46,418 [cuckoo.core.guest] DEBUG: Uploading analyzer to guest (id=Ubuntu1904x644, ip=192.168.168.104, monitor=latest, size=70098)\n", 
            "2021-07-23 15:35:47,589 [cuckoo.core.resultserver] DEBUG: Task #2325576: live log analysis.log initialized.\n", 
            "2021-07-23 15:35:56,662 [cuckoo.core.resultserver] DEBUG: Task #2325576: File upload for 'shots/0001.jpg'\n", 
            "2021-07-23 15:35:56,696 [cuckoo.core.resultserver] DEBUG: Task #2325576 uploaded file length: 171514\n", 
            "2021-07-23 15:36:01,542 [cuckoo.core.guest] DEBUG: Ubuntu1904x644: analysis #2325576 still processing\n", 
            "2021-07-23 15:36:07,464 [cuckoo.core.resultserver] DEBUG: Task #2325576: File upload for 'logs/all.stap'\n", 
            "2021-07-23 15:36:07,475 [cuckoo.core.resultserver] DEBUG: Task #2325576 uploaded file length: 0\n", 
            "2021-07-23 15:36:16,604 [cuckoo.core.guest] DEBUG: Ubuntu1904x644: analysis #2325576 still processing\n", 
            "2021-07-23 15:36:28,705 [cuckoo.core.guest] INFO: Ubuntu1904x644: end of analysis reached!\n", 
            "2021-07-23 15:36:28,713 [cuckoo.core.plugins] DEBUG: Stopped auxiliary module: Redsocks\n", 
            "2021-07-23 15:36:28,787 [cuckoo.core.plugins] DEBUG: Stopped auxiliary module: Sniffer\n", 
            "2021-07-23 15:36:40,908 [cuckoo.machinery.virtualbox] INFO: Successfully generated memory dump for virtual machine with label Ubuntu1904x644 to path /srv/cuckoo/cwd/storage/analyses/2325576/memory.dmp\n", 
            "2021-07-23 15:36:40,909 [cuckoo.machinery.virtualbox] DEBUG: Stopping vm Ubuntu1904x644\n", 
            "2021-07-23 15:36:45,759 [cuckoo.core.resultserver] DEBUG: Stopped tracking machine 192.168.168.104 for task #2325576\n", 
            "2021-07-23 15:36:45,760 [cuckoo.core.resultserver] DEBUG: Cancel <Context for LOG> for task 2325576\n", 
            "2021-07-23 15:36:45,874 [cuckoo.core.scheduler] DEBUG: Released database task #2325576\n", 
            "2021-07-23 15:36:45,977 [cuckoo.core.scheduler] INFO: Task #2325576: analysis procedure completed\n"
        ]
    }, 
    "strings": [
        "__gmon_start__", 
        "_ITM_deregisterTMCloneTable", 
        "_ITM_registerTMCloneTable", 
        "__cxa_finalize", 
        "RelinquishMagickMemory", 
        "AcquireMagickMemory", 
        "png_get_io_ptr", 
        "WriteBlob", 
        "png_error", 
        "ReadBlob", 
        "FormatLocaleString", 
        "png_warning", 
        "LocaleCompare", 
        "png_get_error_ptr", 
        "LogMagickEvent", 
        "ThrowMagickException", 
        "png_longjmp", 
        "png_get_tIME", 
        "SetImageProperty", 
        "__assert_fail", 
        "ResetImageProfileIterator", 
        "GetNextImageProfile", 
        "GetImageProfile", 
        "LocaleNCompare", 
        "CloneStringInfo", 
        "GetStringInfoDatum", 
        "GetStringInfoLength", 
        "DestroyStringInfo", 
        "CloneImageInfo", 
        "CloneImage", 
        "CopyMagickString", 
        "SeparateImageChannel", 
        "CloseBlob", 
        "OpenBlob", 
        "ImageToBlob", 
        "DestroyImage", 
        "RelinquishUniqueFileResource", 
        "DestroyImageInfo", 
        "CopyMagickMemory", 
        "SetImageGray", 
        "NegateImage", 
        "AcquireUniqueFilename", 
        "SetImageArtifact", 
        "GetImageProperty", 
        "SetImageType", 
        "ResetMagickMemory", 
        "CatchImageException", 
        "GetVirtualPixels", 
        "png_get_user_chunk_ptr", 
        "ConcatenateMagickString", 
        "png_get_libpng_ver", 
        "zlibVersion", 
        "TransformImageColorspace", 
        "GetAuthenticPixels", 
        "SyncAuthenticPixels", 
        "png_create_write_struct_2", 
        "png_create_info_struct", 
        "png_set_write_fn", 
        "__longjmp_chk", 
        "png_set_longjmp_fn", 
        "_setjmp", 
        "png_destroy_write_struct", 
        "UnlockSemaphoreInfo", 
        "RelinquishVirtualMemory", 
        "AcquireImageColormap", 
        "GetAuthenticIndexQueue", 
        "SyncImage", 
        "LockSemaphoreInfo", 
        "png_set_benign_errors", 
        "GetMagickResourceLimit", 
        "png_set_user_limits", 
        "png_permit_mng_features", 
        "png_set_check_for_invalid_index", 
        "sRGB_info", 
        "png_set_compression_buffer_size", 
        "png_set_compression_mem_level", 
        "png_set_compression_level", 
        "png_set_compression_strategy", 
        "png_set_sig_bytes", 
        "png_set_IHDR", 
        "png_set_sRGB", 
        "png_set_gAMA", 
        "png_set_cHRM", 
        "png_set_oFFs", 
        "GetImageOption", 
        "sscanf", 
        "png_set_tIME", 
        "png_write_info_before_PLTE", 
        "png_set_tRNS", 
        "png_write_info", 
        "png_set_packing", 
        "AcquireVirtualMemory", 
        "GetVirtualMemoryBlob", 
        "AcquireQuantumInfo", 
        "SetQuantumDepth", 
        "SetQuantumEndian", 
        "png_set_interlace_handling", 
        "SaveImageTag", 
        "ExportQuantumPixels", 
        "png_write_row", 
        "DestroyQuantumInfo", 
        "png_write_end", 
        "png_get_valid", 
        "png_set_iCCP", 
        "png_malloc", 
        "png_set_text", 
        "png_free", 
        "png_set_filter", 
        "SetImageOpacity", 
        "png_set_bKGD", 
        "png_set_pHYs", 
        "png_set_PLTE", 
        "ResetImagePropertyIterator", 
        "GetNextImageProperty", 
        "strlen", 
        "__printf_chk", 
        "IsOptionMember", 
        "GetImageArtifact", 
        "SetGeometry", 
        "ParseMetaGeometry", 
        "GetNextImageInList", 
        "GetPreviousImageInList", 
        "SyncNextImageInList", 
        "GetImageListLength", 
        "SaveImagesTag", 
        "png_create_read_struct_2", 
        "png_set_read_fn", 
        "png_set_keep_unknown_chunks", 
        "png_set_read_user_chunk_fn", 
        "png_set_chunk_cache_max", 
        "png_read_info", 
        "png_get_IHDR", 
        "png_get_tRNS", 
        "png_get_bKGD", 
        "GetImageQuantumDepth", 
        "png_get_gAMA", 
        "png_get_x_offset_pixels", 
        "png_get_y_offset_pixels", 
        "png_get_pHYs", 
        "png_read_update_info", 
        "png_get_rowbytes", 
        "png_destroy_read_struct", 
        "DestroyImageList", 
        "InheritException", 
        "png_get_PLTE", 
        "png_set_swap", 
        "png_get_cHRM", 
        "png_get_sRGB", 
        "png_get_iCCP", 
        "BlobToStringInfo", 
        "SetImageProfile", 
        "SetImageExtent", 
        "LoadImageTag", 
        "AcquireQuantumMemory", 
        "png_read_row", 
        "QueueAuthenticPixels", 
        "png_read_end", 
        "SetImageColorspace", 
        "png_get_text", 
        "png_free_data", 
        "png_set_invalid", 
        "png_set_option", 
        "png_set_sBIT", 
        "DestroyString", 
        "memcmp", 
        "strtol", 
        "ImportQuantumPixels", 
        "SetImageBackgroundColor", 
        "AcquireImage", 
        "GetBlobSize", 
        "DestroyJNG", 
        "GetAuthenticPixelQueue", 
        "AcquireNextImage", 
        "LoadImagesTag", 
        "TellBlob", 
        "ReadBlobMSBLong", 
        "ReadBlobByte", 
        "GetImageInfo", 
        "SeekBlob", 
        "ReadImage", 
        "GetImageException", 
        "DeleteImageFromList", 
        "CropImage", 
        "GetFirstImageInList", 
        "CoalesceImages", 
        "RegisterPNGImage", 
        "png_get_header_ver", 
        "SetMagickInfo", 
        "ConstantString", 
        "RegisterMagickInfo", 
        "AllocateSemaphoreInfo", 
        "UnregisterPNGImage", 
        "UnregisterMagickInfo", 
        "DestroySemaphoreInfo", 
        "libMagickCore-6.Q16.so.3", 
        "libpng16.so.16", 
        "libz.so.1", 
        "libc.so.6", 
        "__stack_chk_fail", 
        "png.so", 
        "GLIBC_2.11", 
        "GLIBC_2.3.4", 
        "GLIBC_2.1.3", 
        "GLIBC_2.4", 
        "GLIBC_2.0", 
        "PNG16_0", 
        "Y(;Z(t", 
        "2f91t$", 
        "D$lPVU", 
        "t$XPhI2", 
        ">vpAgt", 
        "D$49G ", 
        "D$P9D$h", 
        "SVQRPV", 
        "H4f9O4", 
        "\\$(9\\$0", 
        "PQRVPQR", 
        "t,< t(", 
        "|$H9W ", 
        "L$l9L$p", 
        "\\$P9G ", 
        "D$hXZj", 
        "9L$\\}6", 
        "t$D9p ", 
        ";l$(t9f", 
        "\\$D9X ", 
        "D$,9D$8", 
        "|$H9x ", 
        "9T$L|N", 
        ";D$\\t[9L$\\ti", 
        "D$8+D$D;D$,", 
        "D$$9\\$", 
        "WriteBlob Failed", 
        "Read Exception", 
        "Missing PLTE before tRNS", 
        "1.6.34", 
        "  libpng-%s warning: %s", 
        "../../coders/png.c", 
        "  libpng-%s error: %s", 
        "png:tIME", 
        "image != (Image *) NULL", 
        "  Found %s profile", 
        "  Enter WriteOneJNGImage()", 
        "MemoryAllocationFailed", 
        "  Creating jpeg_image.", 
        "png:exclude-chunks", 
        "png:bit-depth-written", 
        "    JNG width:%15lu", 
        "    JNG height:%14lu", 
        "    JNG color type:%10d", 
        "    JNG sample depth:%8d", 
        "    JNG compression:%9d", 
        "    JNG interlace:%11d", 
        "    JNG alpha depth:%9d", 
        "    JNG alpha compression:%3d", 
        "    JNG alpha filter:%8d", 
        "    JNG alpha interlace:%5d", 
        "JNG-chunk-b", 
        "  Creating jpeg_image_info.", 
        "  Creating blob.", 
        "JNG-chunk-e", 
        "Enter WriteJNGImage()", 
        "WidthOrHeightExceedsLimit", 
        "  exit WriteJNGImage()", 
        "Perceptual Intent", 
        "Relative Intent", 
        "Saturation Intent", 
        "Absolute Intent", 
        "Undefined Intent", 
        "    image->taint=MagickTrue", 
        "    image->taint=MagickFalse", 
        "Unknown", 
        "Gray+Alpha", 
        "Palette", 
        "RGB+Alpha", 
        "  Enter WriteOnePNGImage()", 
        "1.2.11", 
        "    IM version     = %s", 
        "    Libpng version = %s", 
        "    Zlib version   = %s", 
        "      running with   %s", 
        "      with crc=%8x", 
        "    image_info->magick= %s", 
        "    Freeing bogus colormap", 
        "    Enter BUILD_PALETTE:", 
        "      image->columns=%.20g", 
        "      image->rows=%.20g", 
        "      image->matte=%.20g", 
        "      image->depth=%.20g", 
        "      Original colormap:", 
        "        %d    (%d,%d,%d,%d)", 
        "      image->colors=%d", 
        "        (zero means unknown)", 
        "      Regenerate the colormap", 
        "      image has %d colors", 
        "incompatible colorspace", 
        "      Sort the new colormap", 
        "      AcquireImageColormap", 
        "      image->colors=%d (%d)", 
        "       %d     (%d,%d,%d,%d)", 
        "    Exit BUILD_PALETTE:", 
        "    width=%.20g", 
        "    height=%.20g", 
        "    image_matte=%.20g", 
        "    Setting up pHYs chunk", 
        "    Setting up bKGD chunk (1)", 
        "    ping_bit_depth=%d", 
        "    %5ld (%5d,%5d,%5d)", 
        "number_colors <= 256", 
        "image->colormap != NULL", 
        "  Selecting PNG colortype:", 
        "    Selected PNG colortype=%d", 
        "image has 0 colors", 
        "    image_info->type: %.20g", 
        "    image_depth: %.20g", 
        "    image->depth: %.20g", 
        "    ping_bit_depth: %.20g", 
        "    to (%d,%d,%d)", 
        "  Setting up bKGD chunk (2)", 
        "      to %d", 
        "     background   =(%d,%d,%d)", 
        "    PNG color type: %s (%d)", 
        "    Compression mem level: 9", 
        "    Compression level:    %d", 
        "  Setting up filtering", 
        "    Compression strategy: %d", 
        "    Base filter method: NONE", 
        "    Base filter method: %d", 
        "  Writing PNG header chunks", 
        "  Setting up empty PLTE chunk", 
        "     PLTE[%d] = (%d,%d,%d)", 
        "  Setting up iCCP chunk", 
        "ng-chunk-", 
        "Raw profile type ", 
        "  Setting up sRGB chunk", 
        "  Setting up gAMA chunk", 
        "  Setting up cHRM chunk", 
        "    Setting up bKGD chunk", 
        "      index = %d, gray=%d", 
        "      x_resolution=%lu", 
        "      y_resolution=%lu", 
        "      unit_type=%lu", 
        "  Reset tIME in tainted image", 
        "date:modify", 
        "%d-%d-%dT%d:%d:%dZ", 
        "PNG-chunk-b", 
        "     tRNS color   =(%d,%d,%d)", 
        "PNG-chunk-m", 
        "  Writing PNG image data", 
        "    Writing row of pixels (0)", 
        "    Writing row of pixels (1)", 
        "    Writing row of pixels (2)", 
        "    Writing row of pixels (3)", 
        "  Wrote PNG image data", 
        "    Width: %.20g", 
        "    Height: %.20g", 
        "    PNG bit-depth written: %d", 
        "    Defined png:bit-depth: %d", 
        "    PNG Interlace method: %d", 
        "PNG-chunk-e", 
        "density", 
        "  Setting up text chunk", 
        "    keyword: '%s'", 
        "  Writing PNG end info", 
        "  exit WriteOnePNGImage()", 
        "Enter WritePNGImage()", 
        "png:format", 
        "  Format=%s", 
        "png:IHDR.bit-depth-orig", 
        "png:IHDR.color-type-orig", 
        "png:bit-depth", 
        "png:color-type", 
        "png:preserve-colormap", 
        "png:preserve-iCCP", 
        "png:compression-level", 
        "png:compression-strategy", 
        "png:compression-filter", 
        "png:exclude-chunk", 
        "png:include-chunks", 
        "png:include-chunk", 
        "    bKGD", 
        "    cHRM", 
        "    date", 
        "    EXIF", 
        "    gAMA", 
        "    iCCP", 
        "    oFFs", 
        "    pHYs", 
        "    sRGB", 
        "    tEXt", 
        "    tIME", 
        "    tRNS", 
        "    vpAg", 
        "    zCCP", 
        "    zTXt", 
        "exit WritePNGImage()", 
        "Enter WriteMNGImage()", 
        "      Matte: True", 
        "      Matte: False", 
        "      Number of colors: %.20g", 
        " 10 cs `%s'", 
        "mng:need-cacheoff", 
        "CACHEOFF", 
        "     TERM delay: %.20g", 
        "     TERM iterations: %.20g", 
        "     Image iterations: %.20g", 
        "  Writing JNG object.", 
        "  Writing PNG object.", 
        "exit WriteMNGImage()", 
        "Grayscale", 
        "Truecolor", 
        "Indexed", 
        "GrayAlpha", 
        "UndefinedColorType", 
        "profile:skip", 
        "png:swap-bytes", 
        "    Found PNG iCCP chunk.", 
        "    Found PNG gAMA chunk.", 
        "    Found PNG cHRM chunk.", 
        "    Found PNG sRGB chunk.", 
        "    Reading PNG iCCP chunk.", 
        "ICC profile is NULL", 
        "No global PLTE in file", 
        "    Reading PNG tRNS chunk.", 
        "Memory allocation failed", 
        "%d, %d", 
        "png:IHDR.width,height", 
        "png:IHDR.bit_depth", 
        "png:IHDR.color_type", 
        "%d (Not interlaced)", 
        "png:IHDR.interlace_method", 
        "%d (Adam7 method)", 
        "%d (Unknown method)", 
        "png:PLTE.number_colors", 
        "  exit ReadOnePNGImage().", 
        "    Reading PNG IDAT chunk(s)", 
        "    ...got one.", 
        "    Found transparent pixel", 
        "    image->gamma=%f", 
        "    image->colorspace=%d", 
        "    Reading PNG text chunk", 
        "invalid profile length", 
        "      length: %lu", 
        "unable to copy profile", 
        "ran out of profile data", 
        "    Read raw profile %s", 
        "    Skipping raw profile %s", 
        "png:text", 
        "%d were found", 
        "png:text-encoded profiles", 
        "png:cHRM", 
        "chunk was found", 
        "png:bKGD", 
        "png:iCCP", 
        "png:tRNS", 
        "intent=%d (%s)", 
        "png:sRGB", 
        "gamma=%.8g (See Gamma, above)", 
        "png:gAMA", 
        "png:pHYs", 
        "x_off=%.20g, y_off=%.20g", 
        "png:oFFs", 
        "width=%.20g, height=%.20g", 
        "png:vpAg", 
        "  exit ReadOnePNGImage()", 
        "Enter ReadPNGImage()", 
        "UnableToOpenFile", 
        "ImproperImageHeader", 
        "InsufficientImageDataInFile", 
        "CorruptImage", 
        "exit ReadPNGImage()", 
        "  Enter ReadOneJNGImage()", 
        "  AcquireNextImage()", 
        "NegativeOrZeroImageSize", 
        "    Creating color_blob.", 
        "    Creating alpha_blob.", 
        "color_image == (Image *) NULL", 
        "alpha_image == (Image *) NULL", 
        "Enter ReadJNGImage()", 
        "exit ReadJNGImage()", 
        "  Enter ReadOneMNGImage()", 
        "DeltaPNGNotSupported", 
        "  Skip to IEND.", 
        "  MNG width: %.20g", 
        "  MNG height: %.20g", 
        "%.20gx%.20g+0+0", 
        "object id too large", 
        "    Framing_mode=%d", 
        "    Framing_delay=%.20g", 
        "    Framing_timeout=%.20g", 
        "CLON is not implemented yet", 
        "PAST is not implemented yet", 
        "SHOW is not implemented yet", 
        "pHYg is not implemented.", 
        "BASI is not implemented yet", 
        "  Processing %c%c%c%c chunk", 
        "  Skipping invisible object", 
        "  Processing MNG MAGN chunk", 
        "    Allocate magnified image", 
        "    Magnify the rows to %.20g", 
        "    Delete original image", 
        "  Finished MAGN processing", 
        "  Crop the PNG image", 
        "  No beginning", 
        "  Corrupt list", 
        "  First image null", 
        "  No visible images found.", 
        "No visible images in file", 
        "  Before coalesce:", 
        "    scene 0 delay=%.20g", 
        "    scene %.20g delay=%.20g", 
        "  Coalesce Images", 
        "  After coalesce:", 
        "  exit ReadOneJNGImage();", 
        "Enter ReadMNGImage()", 
        "exit ReadMNGImage()", 
        "libpng ", 
        "video/x-mng", 
        "Portable Network Graphics", 
        "image/png", 
        "JPEG Network Graphics", 
        "image/x-jng", 
        "Expected %.20g bytes; found %.20g bytes", 
        "%04d-%02d-%02dT%02d:%02d:%02dZ", 
        "  Writing %c%c%c%c chunk, length: %.20g", 
        "image->signature == MagickSignature", 
        "  Creating jpeg_image_info for opacity.", 
        "    JNG Quality           = %d", 
        "    JNG Color Type        = %d", 
        "    JNG Alpha Compression = %d", 
        "    JNG Alpha Depth       = %d", 
        "    JNG Alpha Quality     = %d", 
        "  Creating PNG blob for alpha.", 
        "  Write IDAT chunks from blob, length=%.20g.", 
        "    Skipping %c%c%c%c chunk, length=%.20g.", 
        "  Write JDAA chunk, length=%.20g.", 
        "  Created jpeg_image, %.20g x %.20g.", 
        "  Successfully read jpeg_image into a blob, length=%.20g.", 
        "  Write JDAT chunk, length=%.20g.", 
        "  exit WriteOneJNGImage(); unique_filenames=%d", 
        "  Creating JPEG blob for alpha.", 
        "image_info != (const ImageInfo *) NULL", 
        "image_info->signature == MagickSignature", 
        "    OK to reduce PNG bit depth to 8 without loss of info", 
        "    Not OK to reduce PNG bit depth to 8 without loss of info", 
        " read_vpag_chunk: found %c%c%c%c chunk", 
        "    Got a %lu-byte ICC profile (potentially sRGB)", 
        "      It is sRGB with rendering intent = %s", 
        "    image->storage_class=UndefinedClass", 
        "    image->storage_class=DirectClass", 
        "    image->storage_class=PseudoClass", 
        "        i    (red,green,blue,opacity)", 
        "      Check colormap for background (%d,%d,%d)", 
        "      background_color index is %d", 
        "      No room in the colormap to add background color", 
        "      image has more than 256 colors", 
        "   image_colors (%d) and n (%d)  don't match", 
        "      Update the pixel indexes", 
        "       i     (red,green,blue,opacity)", 
        "      number_transparent     = %d", 
        "      number_transparent     > 256", 
        "      number_opaque          = %d", 
        "      number_opaque          > 256", 
        "      number_semitransparent = %d", 
        "      number_semitransparent > 256", 
        "      All pixels and the background are black or white", 
        "      All pixels and the background are gray", 
        "      At least one pixel or the background is non-gray", 
        "    Thresholding the alpha channel to binary", 
        "    Quantizing the background color to 4-4-4", 
        "    Quantizing the pixel colors to 4-4-4", 
        "    Quantizing the colormap to 4-4-4", 
        "    Quantizing the background color to 3-3-3", 
        "    Quantizing the pixel colors to 3-3-3-1", 
        "    Quantizing the colormap to 3-3-3-1", 
        "    Quantizing the background color to 3-3-2", 
        "    Quantizing the pixel colors to 3-3-2-1", 
        "    Quantizing the colormap to 3-3-2-1", 
        "    Merging two dark red background colors to 3-3-2-1", 
        "    Merging two dark red pixel colors to 3-3-2-1", 
        "   Cheap transparency is not possible.", 
        "   Cheap transparency is possible.", 
        "Cannot write PNG8 or color-type 3; colormap is NULL", 
        "    Tentative ping_bit_depth=%.20g", 
        "    Set up PNG pHYs chunk: xres: %.20g, yres: %.20g, units: %d.", 
        "  Setting up PLTE chunk with %d colors (%d)", 
        "   PNG colortype %d was specified:", 
        "    Tentative PNG bit depth: %d", 
        "    Tentative PNG color type: %s (%.20g)", 
        "  Scaling ping_trans_color (0)", 
        "  Setting up PLTE chunk with %d colors", 
        "  Scaling ping_trans_color (1)", 
        "    Scaling ping_trans_color from (%d,%d,%d)", 
        "      ping_background.index is %d", 
        "      ping_background.gray is %d", 
        "  Scaling ping_trans_color.gray from %d", 
        "  Setting up bKGD chunk with index=%d", 
        "      No room in PLTE to add bKGD color", 
        "  Setting up deflate compression", 
        "    Compression buffer size: 32768", 
        "    Base filter method: ADAPTIVE", 
        "  Image has transparency but tRNS chunk was excluded", 
        "  Defined png:bit-depth=%u, Computed depth=%u", 
        "Cannot write image with defined png:bit-depth or png:color-type.", 
        "  Defined png:color-type=%u, Computed color type=%u", 
        "  Added an opaque matte channel", 
        "  Setting ping_have_tRNS=MagickTrue.", 
        "     PLTE[%d] = (%d,%d,%d), tRNS[%d] = (%d)", 
        "  Setting up zTXT chunk with uuencoded ICC", 
        "writing raw profile: type=%s, length=%.20g", 
        "  Setting up text chunk with %s profile", 
        "      background color = (%d,%d,%d)", 
        "    Setting up oFFs chunk with x=%d, y=%d, units=0", 
        "Invalid date format specified for png:tIME", 
        "  Calling png_set_tRNS with num_trans=%d", 
        "    Allocating %.20g bytes of memory for pixels", 
        "Allocation of memory for pixels failed", 
        "Memory allocation for quantum_info failed", 
        "    Writing GRAY PNG pixels (2)", 
        "    Writing GRAY_ALPHA PNG pixels (2)", 
        "    Writing GRAY_ALPHA PNG pixels (3)", 
        "  pass %d, Image Is not GRAY or GRAY_ALPHA", 
        "  pass %d, Image Is RGB, 16-bit GRAY, or GRAY_ALPHA", 
        "  Writing GRAY_ALPHA PNG pixels (4)", 
        "  Writing row of non-gray pixels (4)", 
        "  ping_pixels[0]=%d,ping_pixels[1]=%d", 
        "    PNG color-type written: %d", 
        "    Defined png:color-type: %d", 
        "Cannot convert GIF with disposal method 3 to MNG-LC", 
        "    Got a %lu-byte ICC profile not recognized as sRGB", 
        "  png00 inherited bit depth=%s", 
        "  png00 inherited color type=%s", 
        "ignoring invalid defined png:bit-depth", 
        "  png:bit-depth=%d was defined.", 
        "ignoring invalid defined png:color-type", 
        "  png:color-type=%d was defined.", 
        "ignoring invalid defined png:compression-level", 
        "ignoring invalid defined png:compression-strategy", 
        "ignoring invalid defined png:compression-filter", 
        "  png:exclude-chunk=%s found in image options.", 
        "  png:exclude-chunk=%s found in image artifacts.", 
        "  png:include-chunk=%s found in image options.", 
        "  png:include-chunk=%s found in image artifacts.", 
        "  Chunks to be excluded from the output png:", 
        "  Checking input image(s)", 
        "    Image_info depth: %.20g,    Type: %d", 
        "    Scene: %.20g", 
        ",   Image depth: %.20g", 
        "      Storage class: PseudoClass", 
        "      Storage class: DirectClass", 
        "      Number of colors: unspecified", 
        "input has zero delay between all frames; assuming", 
        "  Enter ReadOnePNGImage()", 
        "    IM version     = %s", 
        "    Libpng version = %s", 
        "    Before reading:", 
        "      image->matte=%d", 
        "      image->rendering_intent=%d", 
        "      image->colorspace=%d", 
        "      image->gamma=%f", 
        "  exit ReadOnePNGImage() with error.", 
        "    PNG width: %.20g, height: %.20g", 
        "    PNG color_type: %d, bit_depth: %d", 
        "    PNG compression_method: %d", 
        "    PNG interlace_method: %d, filter_method: %d", 
        "    Reading PNG sRGB chunk: rendering_intent: %d", 
        "    Reading PNG gAMA chunk: gamma: %f", 
        "    Setting sRGB as if in input", 
        "    Reading PNG oFFs chunk: x: %.20g, y: %.20g.", 
        "    Reading PNG pHYs chunk: xres: %.20g, yres: %.20g, units: %d.", 
        "global tRNS has more entries than global PLTE", 
        "    Reading PNG bKGD chunk, raw ping_background=(%d,%d,%d).", 
        "    bkgd_scale=%d.  ping_background=(%d,%d,%d).", 
        "    image->background_color=(%.20g,%.20g,%.20g).", 
        "    Ignoring PNG tRNS chunk with out-of-range sample.", 
        "    Raw tRNS graylevel = %d, scaled graylevel = %d.", 
        "    Reading PNG PLTE chunk: number_colors: %d.", 
        "    Skipping PNG image data for scene %.20g", 
        "    Converting PNG pixels to pixel packets", 
        "Failed to allocate quantum_info", 
        "    Looking for cheap transparent pixel", 
        "    Converting grayscale pixels to pixel packets", 
        "    No transparent pixel was found", 
        "  exit ReadOnePNGImage() early.", 
        " Found a generic profile, type %s", 
        "      length: %lu", 
        "      Keyword: %s", 
        "%d tEXt/zTXt/iTXt chunks were found", 
        "chunk was found (see Chromaticity, above)", 
        "chunk was found (see Background color, above)", 
        "x_res=%.10g, y_res=%.10g, units=%d", 
        "exception != (ExceptionInfo *) NULL", 
        "exception->signature == MagickSignature", 
        "exit ReadPNGImage() with error", 
        "exit ReadPNGImage() with error.", 
        "  page.w: %.20g, page.h: %.20g,page.x: %.20g, page.y: %.20g.", 
        "  Reading JNG chunk type %c%c%c%c, length: %.20g", 
        "    jng_width:      %16lu,    jng_height:     %16lu", 
        "    jng_color_type: %16d,     jng_image_sample_depth: %3d", 
        "    jng_image_compression_method:%3d", 
        "    jng_image_interlace_method:  %3d    jng_alpha_sample_depth:      %3d", 
        "    jng_alpha_compression_method:%3d", 
        "    jng_alpha_filter_method:     %3d", 
        "    jng_alpha_interlace_method:  %3d", 
        "    JNG width or height too large: (%lu x %lu)", 
        "    Writing IHDR chunk to alpha_blob.", 
        "    Copying JDAT chunk data to color_blob.", 
        "    Copying IDAT chunk data to alpha_blob.", 
        "    Copying JDAA chunk data to alpha_blob.", 
        "    Reading jng_image from color_blob.", 
        "color_image_info != (ImageInfo *) NULL", 
        "    Copying jng_image pixels to main image.", 
        "    Reading opacity from alpha_blob.", 
        "  exit ReadOneJNGImage(); unique_filenames=%d", 
        "exit ReadJNGImage() with error", 
        "  Reading MNG chunk type %c%c%c%c, length: %.20g", 
        "    repeat=%d,  final_delay=%.20g,  iterations=%.20g", 
        "DEFI chunk found in MNG-VLC datastream", 
        "Nonzero object_id in MNG-LC datastream", 
        "DEFI cannot redefine a frozen MNG object", 
        "  x_off[%d]: %.20g,  y_off[%d]: %.20g", 
        "FRAM chunk found in MNG-VLC datastream", 
        "    Frame_clip: L=%.20g R=%.20g T=%.20g B=%.20g", 
        "   subframe_width=%.20g, subframe_height=%.20g", 
        "  Insert backgd layer, L=%.20g, R=%.20g T=%.20g, B=%.20g", 
        "  LOOP level %.20g has %.20g iterations ", 
        "  ENDL: LOOP level %.20g has %.20g remaining iters ", 
        "MAGN is not implemented yet for nonzero objects", 
        "Unknown MAGN method in MNG datastream", 
        "  Inserted transparent background layer, W=%.20g, H=%.20g", 
        "  Insert background layer, L=%.20g, R=%.20g T=%.20g, B=%.20g", 
        "  Seeking back to beginning of %c%c%c%c chunk", 
        "yy < (ssize_t) large_image->rows", 
        "    Magnify the columns to %.20g", 
        "  Finished reading image datastream.", 
        "  Finished reading all image datastreams.", 
        "  No images found.  Inserting a background layer.", 
        "  Allocation failed, returning NULL.", 
        "Linked list is corrupted, beginning of list not found", 
        "Linked list is corrupted; next_image is NULL", 
        "image->next for first image is NULL but shouldn't be.", 
        "  image->delay=%.20g, final_delay=%.20g", 
        "    scene 0 delay=%.20g dispose=%.20g", 
        "    scene %.20g delay=%.20g dispose=%.20g", 
        "exit ReadMNGImage() with error", 
        "Multiple-image Network Graphics", 
        "See http://www.libpng.org/pub/mng/ for details about the MNG", 
        "format.", 
        "See http://www.libpng.org/ for details about the PNG format.", 
        "8-bit indexed with optional binary transparency", 
        "opaque or binary transparent 24-bit RGB", 
        "opaque or transparent 32-bit RGBA", 
        "opaque or binary transparent 48-bit RGB", 
        "opaque or transparent 64-bit RGBA", 
        "PNG inheriting bit-depth, color-type from original if possible", 
        "See http://www.libpng.org/pub/mng/ for details about the JNG", 
        "format.", 
        "ReadOneMNGImage", 
        "ReadOneMNGImage", 
        "ReadMNGImage", 
        "ReadMNGImage", 
        "WriteMNGImage", 
        "WriteMNGImage", 
        "Magick_png_read_raw_profile", 
        "read_vpag_chunk_callback", 
        "ReadOnePNGImage", 
        "ReadPNGImage", 
        "ReadPNGImage", 
        "write_tIME_chunk", 
        "LosslessReduceDepthOK", 
        "MagickPNGErrorHandler", 
        "MagickPNGWarningHandler", 
        "WriteOnePNGImage", 
        "WriteOnePNGImage", 
        "WritePNGImage", 
        "WritePNGImage", 
        "ReadOneJNGImage", 
        "ReadOneJNGImage", 
        "ReadJNGImage", 
        "ReadJNGImage", 
        "WriteBlobMSBULong", 
        "LogPNGChunk", 
        "Magick_png_write_chunk_from_profile", 
        "WriteOneJNGImage", 
        "WriteJNGImage", 
        "WriteJNGImage", 
        "Yu=k+v=", 
        "17e9aa108eb7ed6239ad68bced683011d139d1.debug", 
        ".shstrtab", 
        ".note.gnu.build-id", 
        ".gnu.hash", 
        ".dynsym", 
        ".dynstr", 
        ".gnu.version", 
        ".gnu.version_r", 
        ".rel.dyn", 
        ".rel.plt", 
        ".plt.got", 
        ".rodata", 
        ".eh_frame_hdr", 
        ".eh_frame", 
        ".init_array", 
        ".fini_array", 
        ".dynamic", 
        ".got.plt", 
        ".gnu_debuglink"
    ], 
    "metadata": {
        "output": {
            "pcap": {
                "basename": "dump.pcap", 
                "sha256": "704e5e5b3234433c01fcfd1b20a306e77e985038120492dc53965c3edd38a4ea", 
                "dirname": ""
            }
        }
    }
}