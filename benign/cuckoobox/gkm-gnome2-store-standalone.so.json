{
    "info": {
        "added": 1626981177.555322, 
        "started": 1627054497.399155, 
        "duration": 73, 
        "ended": 1627054571.296017, 
        "owner": null, 
        "score": 0.1, 
        "id": 2325573, 
        "category": "file", 
        "git": {
            "head": "", 
            "fetch_head": ""
        }, 
        "monitor": null, 
        "package": "elf", 
        "route": "internet", 
        "custom": null, 
        "machine": {
            "status": "stopped", 
            "name": "Ubuntu1904x641", 
            "label": "Ubuntu1904x641", 
            "platform": "linux", 
            "manager": "VirtualBox", 
            "started_on": "2021-07-23 15:34:58", 
            "shutdown_on": "2021-07-23 15:36:10"
        }, 
        "platform": "linux", 
        "version": "2.0.7", 
        "options": "procmemdump=yes,route=internet"
    }, 
    "signatures": [
        {
            "families": [], 
            "description": "Yara rule detected for file", 
            "severity": 1, 
            "ttp": {}, 
            "markcount": 1, 
            "references": [], 
            "marks": [
                {
                    "type": "generic", 
                    "description": "Create or check mutex", 
                    "rule": "win_mutex"
                }
            ], 
            "name": "file_yara"
        }
    ], 
    "target": {
        "category": "file", 
        "file": {
            "mimetype": "application/x-sharedlib", 
            "yara": [
                {
                    "meta": {
                        "version": "0.1", 
                        "description": "Create or check mutex", 
                        "author": "x0r"
                    }, 
                    "name": "win_mutex", 
                    "offsets": {
                        "c1": [
                            [
                                365131, 
                                0
                            ], 
                            [
                                365248, 
                                0
                            ]
                        ]
                    }, 
                    "strings": [
                        "Q3JlYXRlTXV0ZXg="
                    ]
                }
            ], 
            "sha1": "c98ab606516c9a52b2640870651b115088c4811b", 
            "name": "gkm-gnome2-store-standalone.so", 
            "type": "ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV), dynamically linked, BuildID[sha1]=c6b443ede888a8fcdebc279b660541c70fc41cb7, stripped", 
            "sha256": "a64a6035971dedd563ff8f793f5901133e29ba9eb19f36d324c5fd846f13b06b", 
            "urls": [], 
            "crc32": "944D032C", 
            "path": "/srv/cuckoo/cwd/storage/binaries/a64a6035971dedd563ff8f793f5901133e29ba9eb19f36d324c5fd846f13b06b", 
            "ssdeep": null, 
            "size": 601168, 
            "sha512": "3740b4d096e049766b65a6e82e86309f3c86d184d4ab1a0a9b15afc4b45802d9b39c8c308ed0a3020af2fb61b8cc71b53bcdfd2535d7a37f7668cc7a5c251477", 
            "md5": "00ade385b6ab7a2ffdca5e819a51e743"
        }, 
        "custom": null
    }, 
    "irma": {
        "status": 0, 
        "probes_finished": 16, 
        "scan_id": "d4d32c9a-3550-4e76-85e2-8cf1adc79199", 
        "parent_file_sha256": null, 
        "name": "a64a6035971dedd563ff8f793f5901133e29ba9eb19f36d324c5fd846f13b06b", 
        "scan_date": 1627075638, 
        "other_results": [], 
        "submitter": "cli", 
        "probes_total": 16, 
        "file_infos": {
            "mimetype": "ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV)", 
            "sha1": "c98ab606516c9a52b2640870651b115088c4811b", 
            "tags": [], 
            "timestamp_first_scan": 1626885830.13, 
            "timestamp_last_scan": 1627075655.06, 
            "sha256": "a64a6035971dedd563ff8f793f5901133e29ba9eb19f36d324c5fd846f13b06b", 
            "md5": "00ade385b6ab7a2ffdca5e819a51e743", 
            "size": 601168
        }, 
        "probe_results": {
            "antivirus": {
                "Avast Core Security (Linux)": {
                    "status": 0, 
                    "duration": 0.01, 
                    "version": "3.0.3", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "F-Secure Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 0.03, 
                    "version": "11.10", 
                    "results": null, 
                    "virus_database_version": "2021-06-08_09"
                }, 
                "Windows Defender (Windows)": {
                    "status": 0, 
                    "duration": 0.05, 
                    "version": "1.1.18300.4", 
                    "results": null, 
                    "virus_database_version": "1.343.1173.0"
                }, 
                "Comodo Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 2.77, 
                    "version": "1.1.268025.1", 
                    "results": null, 
                    "virus_database_version": "2021-05-05"
                }, 
                "ESET NOD32 Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 4.02, 
                    "version": "4.0.96", 
                    "results": null, 
                    "virus_database_version": "6087dbf0-1e845 (2021-04-27)"
                }, 
                "GData (Windows)": {
                    "status": 0, 
                    "duration": 0.17, 
                    "version": "5.5.20197.1358", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Forticlient (Linux)": {
                    "status": -1, 
                    "duration": 3.23, 
                    "version": "unavailable", 
                    "virus_database_version": "unavailable", 
                    "error": "/opt/forticlient/scan.sh: line 8: 1788594 Segmentation fault      (core dumped) \"$scanbin\" -s \"$vir_sig\" -o \"$tmpdir\" --unit \"${forti}/\" -d \"$1\""
                }, 
                "Avira (Windows)": {
                    "status": 0, 
                    "duration": 4.08, 
                    "version": "8.3.62.226", 
                    "results": null, 
                    "virus_database_version": "8.18.36.236"
                }, 
                "Kaspersky (Windows)": {
                    "status": 0, 
                    "duration": 3.76, 
                    "version": "21.3", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "McAfee CLI scanner (Linux)": {
                    "status": 0, 
                    "duration": 4.92, 
                    "version": "6.0.6.653", 
                    "results": null, 
                    "virus_database_version": "9966"
                }, 
                "Sophos Anti-Virus (Linux)": {
                    "status": 0, 
                    "duration": 11.21, 
                    "version": "5.74.0", 
                    "results": null, 
                    "virus_database_version": "5.83 (23 March 2021)"
                }, 
                "DrWeb Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 0.08, 
                    "version": "11.1.9.2103151924", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "ClamAV (Linux)": {
                    "status": 0, 
                    "duration": 0.05, 
                    "version": "0.103.2", 
                    "results": null, 
                    "virus_database_version": "26190"
                }, 
                "eScan Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 4.08, 
                    "version": "7.0.21", 
                    "results": null, 
                    "virus_database_version": "7.88854 (16/06/2021)"
                }, 
                "Emsisoft Commandline Scanner (Windows)": {
                    "status": 0, 
                    "duration": 0.23, 
                    "version": "2021.1.0.10606", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Bitdefender Antivirus Scanner (Linux)": {
                    "status": 0, 
                    "duration": 5.51, 
                    "version": "7.90123", 
                    "results": null, 
                    "virus_database_version": null
                }
            }
        }, 
        "path": "", 
        "result_id": "8aa2fa1c-3234-4e05-a6ba-54c534fc107c", 
        "file_sha256": "a64a6035971dedd563ff8f793f5901133e29ba9eb19f36d324c5fd846f13b06b"
    }, 
    "suricata": {
        "tls": [
            {
                "src_ip": "192.168.168.101", 
                "version": "TLS 1.2", 
                "src_port": 34330, 
                "dst_port": 443, 
                "timestamp": "2021-07-23T15:35:30.350692+0300", 
                "dst_ip": "91.189.92.38", 
                "fingerprint": "ee:ac:e2:90:ec:e5:1a:a1:dd:74:f7:d4:fa:e8:3e:d9:58:da:e9:25", 
                "subject": "CN=api.snapcraft.io", 
                "issuer": "C=US, O=Let's Encrypt, CN=R3"
            }
        ], 
        "files": [], 
        "alerts": [], 
        "http": []
    }, 
    "virustotal": {
        "scans": {
            "Bkav": {
                "detected": false, 
                "version": "1.3.0.9899", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Lionic": {
                "detected": false, 
                "version": "4.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "MicroWorld-eScan": {
                "detected": false, 
                "version": "14.0.409.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "FireEye": {
                "detected": false, 
                "version": "32.44.1.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "CAT-QuickHeal": {
                "detected": false, 
                "version": "14.00", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "McAfee": {
                "detected": false, 
                "version": "6.0.6.653", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Malwarebytes": {
                "detected": false, 
                "version": "4.2.2.27", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "VIPRE": {
                "detected": false, 
                "version": "92946", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Sangfor": {
                "detected": false, 
                "version": "2.9.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210416"
            }, 
            "K7AntiVirus": {
                "detected": false, 
                "version": "11.184.37306", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "K7GW": {
                "detected": false, 
                "version": "11.184.37306", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Arcabit": {
                "detected": false, 
                "version": "1.0.0.886", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "BitDefenderTheta": {
                "detected": false, 
                "version": "7.2.37796.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210525"
            }, 
            "Cyren": {
                "detected": false, 
                "version": "6.3.0.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Symantec": {
                "detected": false, 
                "version": "1.14.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "ESET-NOD32": {
                "detected": false, 
                "version": "23383", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Baidu": {
                "detected": false, 
                "version": "1.0.0.2", 
                "result": null, 
                "normalized": [], 
                "update": "20190318"
            }, 
            "TrendMicro-HouseCall": {
                "detected": false, 
                "version": "10.0.0.1040", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Avast": {
                "detected": false, 
                "version": "21.1.5827.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "ClamAV": {
                "detected": false, 
                "version": "0.103.2.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Kaspersky": {
                "detected": false, 
                "version": "21.0.1.45", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "BitDefender": {
                "detected": false, 
                "version": "7.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "NANO-Antivirus": {
                "detected": false, 
                "version": "1.0.146.25311", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "SUPERAntiSpyware": {
                "detected": false, 
                "version": "5.6.0.1032", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "Rising": {
                "detected": false, 
                "version": "25.0.0.26", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Ad-Aware": {
                "detected": false, 
                "version": "3.0.21.179", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "TACHYON": {
                "detected": false, 
                "version": "2021-05-31.02", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Sophos": {
                "detected": false, 
                "version": "1.0.2.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Comodo": {
                "detected": false, 
                "version": "33578", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "F-Secure": {
                "detected": false, 
                "version": "12.0.86.52", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "DrWeb": {
                "detected": false, 
                "version": "7.0.49.9080", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Zillya": {
                "detected": false, 
                "version": "2.0.0.4376", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "TrendMicro": {
                "detected": false, 
                "version": "11.0.0.1006", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "McAfee-GW-Edition": {
                "detected": false, 
                "version": "v2019.1.2+3728", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "CMC": {
                "detected": false, 
                "version": "2.10.2019.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210506"
            }, 
            "Emsisoft": {
                "detected": false, 
                "version": "2018.12.0.1641", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "SentinelOne": {
                "detected": false, 
                "version": "5.1.0.5", 
                "result": null, 
                "normalized": [], 
                "update": "20210518"
            }, 
            "Avast-Mobile": {
                "detected": false, 
                "version": "210530-02", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Jiangmin": {
                "detected": false, 
                "version": "16.0.100", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Avira": {
                "detected": false, 
                "version": "8.3.3.12", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Antiy-AVL": {
                "detected": false, 
                "version": "3.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Kingsoft": {
                "detected": false, 
                "version": "2017.9.26.565", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Gridinsoft": {
                "detected": false, 
                "version": "1.0.41.133", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Microsoft": {
                "detected": false, 
                "version": "1.1.18200.4", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "ViRobot": {
                "detected": false, 
                "version": "2014.3.20.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "ZoneAlarm": {
                "detected": false, 
                "version": "1.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "GData": {
                "detected": false, 
                "version": "A:25.29816B:27.23196", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Cynet": {
                "detected": false, 
                "version": "4.0.0.27", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "AhnLab-V3": {
                "detected": false, 
                "version": "3.20.1.10133", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Acronis": {
                "detected": false, 
                "version": "1.1.1.82", 
                "result": null, 
                "normalized": [], 
                "update": "20210512"
            }, 
            "ALYac": {
                "detected": false, 
                "version": "1.1.3.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "MAX": {
                "detected": false, 
                "version": "2019.9.16.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "VBA32": {
                "detected": false, 
                "version": "5.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210528"
            }, 
            "Zoner": {
                "detected": false, 
                "version": "0.0.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Tencent": {
                "detected": false, 
                "version": "1.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Yandex": {
                "detected": false, 
                "version": "5.5.2.24", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "Ikarus": {
                "detected": false, 
                "version": "0.1.5.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "MaxSecure": {
                "detected": false, 
                "version": "1.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Fortinet": {
                "detected": false, 
                "version": "6.2.142.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Panda": {
                "detected": false, 
                "version": "4.6.4.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Qihoo-360": {
                "detected": false, 
                "version": "1.0.0.1120", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }
        }, 
        "scan_id": "a64a6035971dedd563ff8f793f5901133e29ba9eb19f36d324c5fd846f13b06b-1622448324", 
        "sha1": "c98ab606516c9a52b2640870651b115088c4811b", 
        "resource": "00ade385b6ab7a2ffdca5e819a51e743", 
        "response_code": 1, 
        "scan_date": "2021-05-31 08:05:24", 
        "permalink": "https://www.virustotal.com/gui/file/a64a6035971dedd563ff8f793f5901133e29ba9eb19f36d324c5fd846f13b06b/detection/f-a64a6035971dedd563ff8f793f5901133e29ba9eb19f36d324c5fd846f13b06b-1622448324", 
        "summary": {
            "positives": 0, 
            "permalink": "https://www.virustotal.com/gui/file/a64a6035971dedd563ff8f793f5901133e29ba9eb19f36d324c5fd846f13b06b/detection/f-a64a6035971dedd563ff8f793f5901133e29ba9eb19f36d324c5fd846f13b06b-1622448324", 
            "scan_date": "2021-05-31 08:05:24"
        }, 
        "sha256": "a64a6035971dedd563ff8f793f5901133e29ba9eb19f36d324c5fd846f13b06b", 
        "normalized": [], 
        "total": 61, 
        "positives": 0, 
        "verbose_msg": "Scan finished, information embedded", 
        "md5": "00ade385b6ab7a2ffdca5e819a51e743"
    }, 
    "network": {
        "udp": [], 
        "dns_servers": [], 
        "http": [], 
        "smtp": [], 
        "tcp": [], 
        "geoinfo": {}, 
        "mitm": [], 
        "https_ex": [], 
        "http_ex": [], 
        "sorted_pcap_sha256": "0a7bcbbad080408b93a4e68f9ed29d26781048b06cd7c7d926f17d008496c58d", 
        "icmp": [], 
        "tls": [], 
        "dead_hosts": [], 
        "smtp_ex": [], 
        "hosts": [], 
        "pcap_sha256": "85dd5db4ce6398fecc1e9700e87293705ab3ff801972ae365166f552e2d76508", 
        "dns": [], 
        "domains": [], 
        "irc": []
    }, 
    "resubmit": {
        "resubmit_ids": []
    }, 
    "snort": {
        "alerts": []
    }, 
    "debug": {
        "action": [], 
        "dbgview": [], 
        "errors": [], 
        "log": [
            "2021-07-22 19:12:57,000 [root] DEBUG: Starting analyzer from: /tmp/tmpuziYeP\n", 
            "2021-07-22 19:12:57,001 [root] DEBUG: Storing results at: /tmp/YPEgUcLHJT\n", 
            "2021-07-22 19:12:58,478 [modules.auxiliary.filecollector] INFO: FileCollector started v0.08\n", 
            "2021-07-22 19:12:58,481 [modules.auxiliary.human] INFO: Human started v0.02\n", 
            "2021-07-22 19:12:58,484 [modules.auxiliary.screenshots] INFO: Screenshots started v0.03\n", 
            "2021-07-22 19:13:03,647 [lib.core.packages] INFO: Process startup took 5.16 seconds\n", 
            "2021-07-22 19:13:03,650 [root] INFO: Added new process to list with pid: 2050\n", 
            "2021-07-22 19:13:09,658 [root] INFO: Process with pid 2050 has terminated\n", 
            "2021-07-22 19:13:09,660 [root] INFO: Process list is empty, terminating analysis.\n", 
            "2021-07-22 19:13:12,663 [lib.core.packages] INFO: Package requested stop\n", 
            "2021-07-22 19:13:12,663 [lib.core.packages] WARNING: Exception uploading log: [Errno 3] No such process\n"
        ], 
        "cuckoo": [
            "2021-07-23 15:34:57,968 [cuckoo.core.scheduler] INFO: Task #2325573: acquired machine Ubuntu1904x641 (label=Ubuntu1904x641)\n", 
            "2021-07-23 15:34:57,969 [cuckoo.core.resultserver] DEBUG: Now tracking machine 192.168.168.101 for task #2325573\n", 
            "2021-07-23 15:34:58,096 [cuckoo.auxiliary.sniffer] INFO: Started sniffer with PID 3674739 (interface=vboxnet0, host=192.168.168.101)\n", 
            "2021-07-23 15:34:58,221 [cuckoo.machinery.virtualbox] DEBUG: Starting vm Ubuntu1904x641\n", 
            "2021-07-23 15:34:58,537 [cuckoo.machinery.virtualbox] DEBUG: Restoring virtual machine Ubuntu1904x641 to Snapshot\n", 
            "2021-07-23 15:35:06,957 [cuckoo.core.guest] INFO: Starting analysis #2325573 on guest (id=Ubuntu1904x641, ip=192.168.168.101)\n", 
            "2021-07-23 15:35:07,962 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: not ready yet\n", 
            "2021-07-23 15:35:08,315 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: not ready yet\n", 
            "2021-07-23 15:35:12,324 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: not ready yet\n", 
            "2021-07-23 15:35:12,362 [cuckoo.core.guest] INFO: Guest is running Cuckoo Agent 0.10 (id=Ubuntu1904x641, ip=192.168.168.101)\n", 
            "2021-07-23 15:35:12,390 [cuckoo.core.guest] DEBUG: Uploading analyzer to guest (id=Ubuntu1904x641, ip=192.168.168.101, monitor=latest, size=70098)\n", 
            "2021-07-23 15:35:12,563 [cuckoo.core.resultserver] DEBUG: Task #2325573: live log analysis.log initialized.\n", 
            "2021-07-23 15:35:17,023 [cuckoo.core.resultserver] DEBUG: Task #2325573: File upload for 'shots/0001.jpg'\n", 
            "2021-07-23 15:35:17,034 [cuckoo.core.resultserver] DEBUG: Task #2325573 uploaded file length: 171514\n", 
            "2021-07-23 15:35:27,614 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2325573 still processing\n", 
            "2021-07-23 15:35:28,230 [cuckoo.core.resultserver] DEBUG: Task #2325573: File upload for 'logs/all.stap'\n", 
            "2021-07-23 15:35:28,233 [cuckoo.core.resultserver] DEBUG: Task #2325573 uploaded file length: 0\n", 
            "2021-07-23 15:35:42,741 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2325573 still processing\n", 
            "2021-07-23 15:35:54,822 [cuckoo.core.guest] INFO: Ubuntu1904x641: end of analysis reached!\n", 
            "2021-07-23 15:35:54,835 [cuckoo.core.plugins] DEBUG: Stopped auxiliary module: Redsocks\n", 
            "2021-07-23 15:35:54,912 [cuckoo.core.plugins] DEBUG: Stopped auxiliary module: Sniffer\n", 
            "2021-07-23 15:36:06,620 [cuckoo.machinery.virtualbox] INFO: Successfully generated memory dump for virtual machine with label Ubuntu1904x641 to path /srv/cuckoo/cwd/storage/analyses/2325573/memory.dmp\n", 
            "2021-07-23 15:36:06,621 [cuckoo.machinery.virtualbox] DEBUG: Stopping vm Ubuntu1904x641\n", 
            "2021-07-23 15:36:10,707 [cuckoo.core.resultserver] DEBUG: Stopped tracking machine 192.168.168.101 for task #2325573\n", 
            "2021-07-23 15:36:10,708 [cuckoo.core.resultserver] DEBUG: Cancel <Context for LOG> for task 2325573\n", 
            "2021-07-23 15:36:11,126 [cuckoo.core.scheduler] DEBUG: Released database task #2325573\n", 
            "2021-07-23 15:36:11,203 [cuckoo.core.scheduler] INFO: Task #2325573: analysis procedure completed\n"
        ]
    }, 
    "strings": [
        "__gmon_start__", 
        "_ITM_deregisterTMCloneTable", 
        "_ITM_registerTMCloneTable", 
        "__cxa_finalize", 
        "g_mutex_unlock", 
        "g_mutex_lock", 
        "g_realloc", 
        "g_str_equal", 
        "g_str_hash", 
        "g_hash_table_new_full", 
        "g_hash_table_unref", 
        "g_type_name", 
        "gcry_cipher_get_algo_keylen", 
        "g_return_if_fail_warning", 
        "gcry_cipher_get_algo_blklen", 
        "gcry_cipher_open", 
        "gcry_cipher_setkey", 
        "g_assertion_message_expr", 
        "gcry_strerror", 
        "gcry_cipher_setiv", 
        "gcry_md_map_name", 
        "gcry_md_get_algo_dlen", 
        "g_malloc0", 
        "gcry_md_hash_buffer", 
        "memcmp", 
        "g_strdup", 
        "g_hash_table_insert", 
        "__errno_location", 
        "g_strerror", 
        "g_hash_table_size", 
        "g_hash_table_foreach", 
        "g_slice_free1", 
        "g_list_free", 
        "g_print", 
        "g_once_init_enter", 
        "g_intern_static_string", 
        "g_type_register_static_simple", 
        "g_once_init_leave", 
        "g_type_class_peek_parent", 
        "g_type_class_adjust_private_offset", 
        "g_type_check_class_cast", 
        "g_cclosure_marshal_VOID__STRING", 
        "g_signal_new", 
        "g_type_check_instance_cast", 
        "g_hash_table_destroy", 
        "g_type_check_instance_is_a", 
        "g_hash_table_lookup", 
        "g_hash_table_lookup_extended", 
        "g_slice_alloc", 
        "g_memdup", 
        "g_hash_table_replace", 
        "g_signal_emit", 
        "g_slice_alloc0", 
        "g_list_prepend", 
        "g_hash_table_remove", 
        "gcry_cipher_map_name", 
        "gcry_cipher_decrypt", 
        "gcry_cipher_close", 
        "gcry_md_algo_name", 
        "g_object_new", 
        "g_list_copy", 
        "g_list_sort", 
        "gcry_create_nonce", 
        "gcry_cipher_algo_name", 
        "gcry_cipher_encrypt", 
        "strrchr", 
        "g_strdup_printf", 
        "g_random_int", 
        "g_object_run_dispose", 
        "g_object_unref", 
        "g_hash_table_remove_all", 
        "getpid", 
        "g_type_add_interface_static", 
        "g_bytes_get_size", 
        "g_bytes_unref", 
        "g_bytes_ref", 
        "g_object_ref", 
        "gcry_sexp_release", 
        "g_signal_connect_data", 
        "g_direct_equal", 
        "g_direct_hash", 
        "g_param_spec_string", 
        "g_object_class_install_property", 
        "g_param_spec_object", 
        "g_object_set", 
        "g_compute_checksum_for_data", 
        "strlen", 
        "g_build_filename", 
        "g_file_get_contents", 
        "g_clear_error", 
        "g_type_interface_peek", 
        "g_bytes_new_take", 
        "rename", 
        "__fxstat", 
        "g_unlink", 
        "g_mkstemp", 
        "g_value_get_object", 
        "g_value_dup_object", 
        "g_value_dup_string", 
        "g_signal_handlers_disconnect_matched", 
        "g_strconcat", 
        "g_strdelimit", 
        "g_signal_handlers_block_matched", 
        "g_signal_handlers_unblock_matched", 
        "g_bytes_get_data", 
        "g_bytes_new", 
        "g_object_notify", 
        "g_value_set_object", 
        "g_value_set_string", 
        "memcpy", 
        "g_array_new", 
        "g_array_append_vals", 
        "g_array_free", 
        "g_param_spec_ulong", 
        "g_type_class_add_private", 
        "g_type_instance_get_private", 
        "g_value_get_ulong", 
        "g_object_add_weak_pointer", 
        "g_object_remove_weak_pointer", 
        "g_value_set_ulong", 
        "strptime", 
        "timegm", 
        "g_utf8_validate", 
        "g_strndup", 
        "gcry_mpi_scan", 
        "gmtime_r", 
        "__snprintf_chk", 
        "strftime", 
        "gcry_mpi_print", 
        "g_warn_message", 
        "g_checksum_type_get_length", 
        "g_checksum_new", 
        "g_checksum_update", 
        "g_checksum_get_digest", 
        "g_checksum_free", 
        "g_array_remove_index_fast", 
        "g_quark_from_static_string", 
        "g_ascii_toupper", 
        "dcgettext", 
        "g_value_get_string", 
        "g_type_fundamental", 
        "g_boxed_free", 
        "g_object_weak_unref", 
        "g_object_weak_ref", 
        "g_boxed_copy", 
        "gcry_sexp_build", 
        "gcry_mpi_release", 
        "gcry_sexp_nth_mpi", 
        "memset", 
        "gcry_calloc_secure", 
        "gcry_free", 
        "g_bytes_new_with_free_func", 
        "g_bytes_new_static", 
        "gcry_mpi_cmp", 
        "gcry_mpi_invm", 
        "gcry_mpi_snew", 
        "gcry_mpi_powm", 
        "g_quark_to_string", 
        "gcry_mpi_sub_ui", 
        "gcry_mpi_mod", 
        "gcry_cipher_algo_info", 
        "g_random_int_range", 
        "g_malloc", 
        "g_string_new", 
        "g_get_prgname", 
        "g_string_append_printf", 
        "g_string_free", 
        "g_parse_debug_string", 
        "g_logv", 
        "g_getenv", 
        "g_log_set_handler", 
        "gcry_mpi_get_nbits", 
        "memmove", 
        "gcry_pk_sign", 
        "gcry_pk_verify", 
        "gcry_pk_get_nbits", 
        "g_snprintf", 
        "g_intern_string", 
        "g_hash_table_new", 
        "g_object_class_find_property", 
        "g_value_init", 
        "g_object_get_property", 
        "g_value_get_boolean", 
        "g_value_unset", 
        "g_value_get_int", 
        "g_value_get_uint", 
        "g_value_get_long", 
        "g_param_spec_boolean", 
        "g_cclosure_marshal_VOID__OBJECT", 
        "g_list_remove", 
        "g_value_set_boolean", 
        "g_hash_table_ref", 
        "g_hash_table_steal", 
        "g_hash_table_foreach_remove", 
        "gkm_mock_C_GetFunctionList", 
        "strncmp", 
        "g_ascii_tolower", 
        "g_hash_table_iter_init", 
        "g_hash_table_iter_next", 
        "g_param_spec_pointer", 
        "memchr", 
        "strcspn", 
        "g_strchug", 
        "g_strchomp", 
        "g_value_get_pointer", 
        "g_ascii_table", 
        "g_array_set_size", 
        "g_array_sort", 
        "g_list_find", 
        "g_list_delete_link", 
        "g_cclosure_marshal_VOID__BOOLEAN", 
        "g_cclosure_marshal_VOID__ULONG", 
        "g_get_current_time", 
        "gcry_mpi_swap", 
        "gcry_pk_encrypt", 
        "gcry_pk_decrypt", 
        "g_type_register_static", 
        "g_type_interface_add_prerequisite", 
        "g_object_set_data", 
        "g_object_get_data", 
        "g_array_remove_range", 
        "g_boxed_type_register_static", 
        "gcry_sexp_nth_data", 
        "gcry_sexp_nth", 
        "gcry_pk_map_name", 
        "gcry_sexp_find_token", 
        "gcry_sexp_sprint", 
        "g_printerr", 
        "g_param_spec_boxed", 
        "g_param_spec_int", 
        "gcry_pk_algo_name", 
        "g_value_get_boxed", 
        "gcry_pk_get_keygrip", 
        "g_value_set_int", 
        "g_value_set_boxed", 
        "g_assertion_message", 
        "g_queue_peek_head", 
        "g_get_monotonic_time", 
        "g_cond_wait_until", 
        "g_queue_remove", 
        "g_cond_wait", 
        "g_thread_new", 
        "g_queue_new", 
        "g_cond_init", 
        "g_cond_broadcast", 
        "g_thread_join", 
        "g_queue_pop_head", 
        "g_queue_is_empty", 
        "g_queue_free", 
        "g_cond_clear", 
        "g_queue_insert_sorted", 
        "g_queue_find", 
        "g_queue_delete_link", 
        "g_queue_push_head", 
        "__xstat", 
        "g_path_get_dirname", 
        "g_mkdir_with_parents", 
        "g_slice_copy", 
        "g_type_check_instance_is_fundamentally_a", 
        "g_get_home_dir", 
        "g_get_user_data_dir", 
        "g_file_test", 
        "g_value_peek_pointer", 
        "pthread_mutex_lock", 
        "pthread_mutex_unlock", 
        "stpcpy", 
        "strtol", 
        "calloc", 
        "select", 
        "g_strstr_len", 
        "g_quark_from_string", 
        "g_string_append", 
        "g_string_insert_c", 
        "g_strrstr_len", 
        "__ctype_b_loc", 
        "g_base64_decode_step", 
        "g_strsplit", 
        "strchr", 
        "g_strfreev", 
        "g_string_sized_new", 
        "g_string_append_len", 
        "g_string_set_size", 
        "g_base64_encode_step", 
        "g_base64_encode_close", 
        "g_bytes_compare", 
        "g_node_unlink", 
        "g_node_traverse", 
        "g_node_destroy", 
        "g_string_printf", 
        "g_node_depth", 
        "g_utf8_casefold", 
        "strtoul", 
        "g_list_reverse", 
        "g_bytes_new_from_bytes", 
        "g_node_copy_deep", 
        "g_node_insert_before", 
        "g_node_nth_child", 
        "g_bytes_equal", 
        "g_convert", 
        "g_date_set_dmy", 
        "strspn", 
        "g_node_new", 
        "g_list_append", 
        "g_slist_prepend", 
        "g_slist_remove", 
        "g_slist_free", 
        "gcry_mpi_randomize", 
        "gcry_mpi_cmp_ui", 
        "gcry_mpi_new", 
        "gcry_mpi_clear_highbit", 
        "g_ascii_strcasecmp", 
        "g_pattern_spec_free", 
        "g_pattern_spec_new", 
        "g_dir_open", 
        "g_dir_read_name", 
        "g_pattern_match_string", 
        "g_error_free", 
        "g_dir_close", 
        "gcry_is_secure", 
        "gcry_malloc_secure", 
        "gcry_md_open", 
        "gcry_md_setkey", 
        "gcry_md_write", 
        "gcry_md_read", 
        "gcry_md_close", 
        "gcry_md_reset", 
        "gcry_malloc", 
        "gcry_control", 
        "gcry_check_version", 
        "gcry_set_log_handler", 
        "gcry_set_outofcore_handler", 
        "gcry_set_fatalerror_handler", 
        "gcry_set_allocation_handler", 
        "g_quark_try_string", 
        "gcry_randomize", 
        "gcry_random_bytes", 
        "__assert_fail", 
        "getpagesize", 
        "stderr", 
        "__fprintf_chk", 
        "munmap", 
        "munlock", 
        "strcpy", 
        "g_utf8_skip", 
        "g_utf8_get_char", 
        "gcry_mpi_add_ui", 
        "gcry_mpi_add", 
        "gcry_md_ctl", 
        "gcry_md_algo_info", 
        "g_test_run", 
        "g_main_loop_quit", 
        "g_main_context_get_thread_default", 
        "g_main_loop_new", 
        "g_timeout_add", 
        "g_main_loop_run", 
        "g_source_remove", 
        "g_main_loop_unref", 
        "g_mutex_init", 
        "g_mutex_clear", 
        "g_main_context_iteration", 
        "g_assertion_message_error", 
        "g_path_get_basename", 
        "g_file_set_contents", 
        "g_mkdtemp", 
        "g_strcmp0", 
        "g_spawn_sync", 
        "g_assertion_message_cmpnum", 
        "g_assertion_message_cmpstr", 
        "recvmsg", 
        "getsockopt", 
        "fwrite", 
        "readlink", 
        "libgobject-2.0.so.0", 
        "libglib-2.0.so.0", 
        "libgcrypt.so.20", 
        "libc.so.6", 
        "__cxa_atexit", 
        "__stack_chk_fail", 
        "gkm-gnome2-store-standalone.so", 
        "GLIBC_2.3", 
        "GLIBC_2.1.3", 
        "GLIBC_2.4", 
        "GLIBC_2.3.4", 
        "GLIBC_2.0", 
        "GCRYPT_1.6", 
        ";D$ tp", 
        "|$,e3=", 
        "j(RjPPjP", 
        "D$49D$T", 
        "t$\\Pj j", 
        "D$D;D$", 
        "D$h2XDI", 
        "D$l2VRP", 
        "D$p2BUP", 
        "2XDIts", 
        "|$H98t(", 
        "j(Rj`WP", 
        "jDRjLWP", 
        "v8Pj j", 
        "T$ h-QN", 
        "F(XZjPV", 
        "|$<e3=", 
        "|$<e3=", 
        "|$<e3=", 
        "9|$$t$", 
        "9l$4t*", 
        "T$ UWP", 
        "L$0QVP", 
        "T$$RPVP", 
        "t$8WUPV", 
        "t$<WUV", 
        "t$<WUV", 
        "t$<WUV", 
        "D$ _Zj", 
        "D$@Ph`", 
        "D$(Pha", 
        "D$(+D$$", 
        "D$ Ph0", 
        "D$$Ph2", 
        "D$ Ph0", 
        "D$$Ph2", 
        "l$8UWh", 
        "t$Le35", 
        "D$,Y]j", 
        "RjPPjP", 
        "|$,e3=", 
        "F-sign", 
        "F1ed-p", 
        "F5refif", 
        "F-sign", 
        "F1ed-p", 
        "F5refif", 
        "9t$LtC", 
        "RjtPjP", 
        "Rj\\PjP", 
        "t$<UW1", 
        "D$,9D$", 
        "D$,PWV", 
        "D$ Ph#", 
        "D$$Ph$", 
        "D$(Ph%", 
        "D$ Ph1", 
        "D$$Ph2", 
        "D$,PWV", 
        "D$(Ph\"", 
        "D$ Ph1", 
        "D$$Ph2", 
        "tz9L$L", 
        "RjDPjP", 
        "RjDPjP", 
        "t$<UQPV", 
        "|$,e3=", 
        "t$`WVU", 
        "9l$Tt4", 
        "L$49L$", 
        "RjLPjP", 
        "RjHPjP", 
        "t$TPVU", 
        "D$dPWVU", 
        "D$$XZj", 
        "t$<e35", 
        "t$,e35", 
        "t$(UVW", 
        "|$,e3=", 
        "t$<e35", 
        "t$Le35", 
        "t$Le35", 
        "D$$+D$(", 
        "t$8PRW", 
        "j RjPPjP", 
        "t$ j j", 
        "t$,e35", 
        "t$,e35", 
        "uH;L$(sj", 
        "j@+D$`", 
        "t$$WP1", 
        "D$$ZYj", 
        "D$,XZj", 
        "T$ RPU", 
        "T$,RUP", 
        "T$ RUP", 
        "property", 
        "data_file", 
        "buffer", 
        "unknown", 
        "file != -1", 
        "header.len == 8", 
        "0x%08x: %s", 
        "GkmGnome2File", 
        "entry-added", 
        "entry-changed", 
        "entry-removed", 
        "self->identifiers", 
        "self->checks == NULL", 
        "self->publics", 
        "GKM_IS_GNOME2_FILE (self)", 
        "entries", 
        "GKM_GNOME2_FILE (self)", 
        "buffer->len > 4", 
        "*attributes", 
        "invalid header in store file", 
        "!self->incomplete", 
        "object-%08x", 
        "%s-%d%s%s", 
        "value || !n_value", 
        "attr->type == type", 
        "PUBLIC:", 
        "PRIVATE:", 
        "pkcs11/gnome2-store/gkm-gnome2-file.c", 
        "%s:%d: invalid %s id %u for \"%s\" of type '%s' in '%s'", 
        "couldn't create cipher context: %s", 
        "unsupported hash algorithm: %s", 
        "invalid hash length in store file", 
        "couldn't read %u bytes from store file: %s", 
        "couldn't read %u bytes from store file", 
        "couldn't write %u bytes to store file: %s", 
        "couldn't write %u bytes to store file", 
        "!egg_buffer_has_error (&header)", 
        "attr->ulValueLen != (gulong)-1", 
        "data file entry in wrong section: %s", 
        "GKM_IS_GNOME2_FILE (user_data)", 
        "unsupported crypto algorithm: %s", 
        "encrypted data in file store is of an invalid length for algorithm", 
        "!egg_buffer_has_error (buffer)", 
        "egg_buffer_decode_uint32 (buffer->buf) == buffer->len", 
        "GKM_IS_GNOME2_FILE (args->self)", 
        "invalid block size or length in store file", 
        "file %s: line %d (%s): should not be reached", 
        "couldn't find a unique identifier in a %d tries", 
        "g_hash_table_lookup (entries, identifier) == NULL", 
        "Gnome Keyring Store 2", 
        "dump_attributes", 
        "dump_identifier_and_attributes", 
        "gkm_gnome2_file_read_value", 
        "identifier_to_attributes", 
        "gkm_gnome2_file_write_value", 
        "gkm_gnome2_file_destroy_entry", 
        "gkm_gnome2_file_create_entry", 
        "gkm_gnome2_file_unique_entry", 
        "foreach_identifier", 
        "gkm_gnome2_file_foreach_entry", 
        "gkm_gnome2_file_lookup_entry", 
        "write_file_block", 
        "write_public_to_block", 
        "encrypt_buffer", 
        "hash_buffer", 
        "write_each_attribute", 
        "write_entries_to_block", 
        "write_private_to_block", 
        "write_index_to_block", 
        "sort_unknowns_by_type", 
        "gkm_gnome2_file_write_fd", 
        "parse_file_blocks", 
        "update_from_public_block", 
        "attribute_dup", 
        "update_entries_from_block", 
        "validate_buffer", 
        "create_cipher", 
        "decrypt_buffer", 
        "update_from_private_block", 
        "update_from_index_block", 
        "update_from_any_block", 
        "remove_each_identifier", 
        "gkm_gnome2_file_read_fd", 
        "free_unknown_block_list", 
        "gkm_gnome2_file_finalize", 
        "0GkmGnome2Module", 
        "login != NULL", 
        "self->storage == NULL", 
        "self->unlocked_apps", 
        "initialize-args", 
        "pkcs11/gnome2-store/gkm-gnome2-module.c", 
        "%s: gnome2 module directory: %s", 
        "invalid set of mutex calls supplied", 
        "must be able to use our own locking and multi-thread primitives", 
        "module could not be instantiated", 
        "gkm_gnome2_module_constructor", 
        "gkm_gnome2_module_finalize", 
        "gkm_gnome2_module_real_login_user", 
        "Gnome2 Key Storage", 
        "Gnome Keyring", 
        "1:USER:DEFAULT", 
        "Gnome2 Key Storage", 
        "Gnome Keyring", 
        ".pkcs8", 
        "GkmGnome2PrivateKey", 
        "self->login", 
        "self->is_encrypted", 
        "res == GKM_DATA_SUCCESS", 
        "couldn't parse private key", 
        "self->login == NULL", 
        "attrs || !n_attrs", 
        "base-sexp", 
        "!key->private_sexp", 
        "pkcs11/gnome2-store/gkm-gnome2-private-key.c", 
        "GKM_IS_GNOME2_PRIVATE_KEY (self)", 
        "encountered private key but no private key present", 
        "private key is encrypted with wrong password", 
        "invalid or unrecognized private key", 
        "factory_create_private_key", 
        "gkm_gnome2_private_key_finalize", 
        "gkm_gnome2_private_key_real_load", 
        "gkm_gnome2_private_key_real_acquire_crypto_sexp", 
        "gkm_gnome2_private_key_real_save", 
        "GkmGnome2PublicKey", 
        "wrapper", 
        "public key is locked", 
        "couldn't parse public key", 
        "pkcs11/gnome2-store/gkm-gnome2-public-key.c", 
        "GKM_IS_GNOME2_PUBLIC_KEY (self)", 
        "invalid or unrecognized public key", 
        "factory_create_public_key", 
        "gkm_gnome2_public_key_real_load", 
        "gkm_gnome2_public_key_real_save", 
        "Directory for storage", 
        "Storage Directory", 
        "Module for objects", 
        "Object Manager", 
        "Login used to unlock", 
        "GkmGnome2Storage", 
        "GKM_IS_GNOME2_STORAGE (self)", 
        "GKM_IS_OBJECT (object)", 
        "(unknown)", 
        "(null)", 
        "GKM_IS_SERIALIZABLE (object)", 
        "%s: modifying: %s", 
        "self->write_fd == -1", 
        "%s: closing: %s", 
        "!self->directory", 
        "!self->module", 
        "!self->manager", 
        "self->file", 
        "self->object_to_identifier", 
        "user.keystore", 
        "%s: refreshing: %s", 
        "GKM_GNOME2_STORAGE (self)", 
        "failure reading from file: %s", 
        "GKM_IS_MODULE (module)", 
        "GKM_IS_MANAGER (manager)", 
        "identifier == NULL", 
        "asn != NULL", 
        "rdnSequence", 
        ":/\\<>|", 
        "!self->transaction", 
        "self->login == login", 
        "pkcs11/gnome2-store/gkm-gnome2-storage.c", 
        "couldn't open store file: %s: %s", 
        "couldn't create lock for store file: %s: %s", 
        "couldn't write to store file: %s: file is locked", 
        "couldn't lock store file: %s: %s", 
        "g_hash_table_lookup (self->identifier_to_object, identifier) == NULL", 
        "g_hash_table_lookup (self->object_to_identifier, object) == NULL", 
        "don't know how to load file in user store: %s", 
        "couldn't read file in user store: %s: %s", 
        "file in user store doesn't match hash: %s", 
        "GKM_SERIALIZABLE_GET_INTERFACE (object)->extension", 
        "failed to load file in user store: %s", 
        "couldn't write to temporary store file: %s", 
        "couldn't encrypt temporary store file: %s", 
        "GKM_IS_GNOME2_STORAGE (object)", 
        "GKM_IS_TRANSACTION (transaction)", 
        "self->transaction == transaction", 
        "couldn't rename temporary store file: %s", 
        "couldn't delete temporary store file: %s", 
        "couldn't open new temporary store file: %s: %s", 
        "failure updating user store file: %s", 
        "unrecognized or invalid user store file: %s", 
        "GKM_IS_GNOME2_STORAGE (args->self)", 
        "don't know how to relock file in user store: %s", 
        "cannot relock unserializable object for file in user store: %s", 
        "couldn't load file in user store in order to relock: %s: %s", 
        "file in data store doesn't match hash: %s", 
        "unable to serialize data with new login: %s", 
        "%s: CKR_ATTRIBUTE_TYPE_INVALID: object not stored in gnome2 storage", 
        "%s: CKR_ATTRIBUTE_TYPE_INVALID: attribute %s not present", 
        "can't store object of type '%s' on token", 
        "gkm_gnome2_storage_token_flags", 
        "gkm_gnome2_storage_get_login", 
        "gkm_gnome2_storage_get_directory", 
        "gkm_gnome2_storage_get_manager", 
        "gkm_gnome2_storage_lock", 
        "gkm_gnome2_storage_unlock", 
        "relock_object", 
        "relock_each_object", 
        "gkm_gnome2_storage_relock", 
        "gkm_gnome2_storage_destroy", 
        "store_object_hash", 
        "name_for_subject", 
        "identifier_for_object", 
        "gkm_gnome2_storage_create", 
        "refresh_with_login", 
        "gkm_gnome2_storage_refresh", 
        "gkm_gnome2_storage_new", 
        "gkm_gnome2_storage_constructor", 
        "gkm_gnome2_storage_finalize", 
        "gkm_gnome2_storage_set_property", 
        "gkm_gnome2_storage_real_read_value", 
        "complete_lock_file", 
        "begin_lock_file", 
        "complete_write_state", 
        "begin_write_state", 
        "complete_modification_state", 
        "begin_modification_state", 
        "gkm_gnome2_storage_real_write_value", 
        "take_object_ownership", 
        "check_object_hash", 
        "egg_error_message", 
        "type_from_identifier", 
        "data_file_entry_added", 
        "data_file_entry_changed", 
        "data_file_entry_removed", 
        "GkmAesKey", 
        "aes_key", 
        "GKM_IS_AES_KEY (self)", 
        "algorithm != 0", 
        "couldn't open %s cipher: %s", 
        "gcry == 0", 
        "pkcs11/gkm/gkm-aes-key.c", 
        "self->n_value > 3", 
        "gkm_aes_key_get_cipher", 
        "gkm_aes_key_get_block_size", 
        "attribute_set_check_value", 
        "aes_mechanism", 
        "GKM_IS_SESSION (session)", 
        "GKM_IS_OBJECT (wrapped)", 
        "n_output", 
        "block != 0", 
        "GKM_IS_OBJECT (wrapper)", 
        "mech->mechanism == CKM_AES_CBC_PAD", 
        "gkm_aes_mechanism_unwrap", 
        "gkm_aes_mechanism_wrap", 
        "Trust object this assertion belongs to", 
        "Optional peer this assertion applies to", 
        "%s: CKR_ATTRIBUTE_TYPE_INVALID: no CKA_X_PEER on assertion", 
        "PKCS#11 assertion type", 
        "The purpose for the trust", 
        "Purpose", 
        "GkmAssertion", 
        "!self->pv->trust", 
        "pkcs11/gkm/gkm-assertion.c", 
        "self->pv->purpose", 
        "self->pv->type", 
        "GKM_IS_ASSERTION (self)", 
        "gkm_assertion_get_trust_object", 
        "gkm_assertion_get_trust_type", 
        "gkm_assertion_get_peer", 
        "gkm_assertion_get_purpose", 
        "gkm_assertion_constructor", 
        "gkm_assertion_set_property", 
        "gkm_assertion_get_attribute", 
        "%Y%m%d%H%M%S", 
        "pkcs11/gkm/gkm-attributes.c", 
        "%Y%m%d%H%M%S00", 
        "length > 0", 
        "a1->pValue", 
        "a2->pValue", 
        "template", 
        "(attr->type & CKF_ARRAY_ATTRIBUTE) != 0", 
        "pat->ulValueLen != (CK_ULONG)-1", 
        "attr->ulValueLen != (CK_ULONG)-1", 
        "gkm_template_find_ulong", 
        "gkm_template_find_boolean", 
        "gkm_template_find", 
        "gkm_template_set_boolean", 
        "gkm_template_set_ulong", 
        "gkm_template_set_string", 
        "gkm_template_set_value", 
        "gkm_template_set", 
        "gkm_template_new", 
        "gkm_attributes_find_bytes", 
        "gkm_attributes_find_string", 
        "gkm_attributes_find_mpi", 
        "gkm_attributes_find_ulong", 
        "gkm_attributes_find_boolean", 
        "gkm_attributes_find", 
        "gkm_attributes_contains", 
        "gkm_attribute_consumed", 
        "gkm_attribute_hash", 
        "gkm_attribute_equal", 
        "gkm_attribute_set_checksum", 
        "gkm_attribute_set_template", 
        "gkm_attribute_set_mpi", 
        "gkm_attribute_set_time", 
        "gkm_attribute_set_date", 
        "gkm_attribute_get_template", 
        "gkm_attribute_get_mpi", 
        "gkm_attribute_get_bytes", 
        "gkm_attribute_get_string", 
        "gkm_attribute_get_time", 
        "gkm_attribute_get_ulong", 
        "gkm_attribute_get_bool", 
        "Public Key", 
        "public-key", 
        "Label of the certificate", 
        "2.5.29.19", 
        "2.5.29.37", 
        "GkmCertificate", 
        "GKM_IS_CERTIFICATE (self)", 
        "subjectPublicKeyInfo", 
        "tbsCertificate", 
        "keydata", 
        "pkcs11/gkm/gkm-certificate.c", 
        "!self->pv->key", 
        "self->pv->asn1", 
        "extensions", 
        "extnID", 
        "critical", 
        "extnValue", 
        "category", 
        "subject", 
        "Unnamed Certificate", 
        "notBefore", 
        "notAfter", 
        "self->pv->der != NULL", 
        "n_data && n_data > 3", 
        "validity", 
        "n_hash", 
        "*n_hash > 0", 
        "Public key contained in certificate", 
        "%s: cannot load empty certificate file", 
        "%s: couldn't parse certificate data", 
        "couldn't parse certificate key data", 
        "factory_create_certificate", 
        "gkm_certificate_der_data", 
        "gkm_certificate_hash", 
        "gkm_certificate_set_label", 
        "gkm_certificate_get_label", 
        "find_certificate_extension", 
        "gkm_certificate_get_extension", 
        "gkm_certificate_get_public_key", 
        "gkm_certificate_calc_category", 
        "gkm_certificate_constructor", 
        "gkm_certificate_finalize", 
        "gkm_certificate_real_get_attribute", 
        "gkm_certificate_real_load", 
        "gkm_certificate_real_save", 
        "Certificate this key belongs to", 
        "pkcs11/gkm/gkm-certificate-key.c", 
        "GkmCertificateKey", 
        "!self->pv->certificate", 
        "GKM_IS_CERTIFICATE_KEY (self)", 
        "gkm_certificate_key_get_certificate", 
        "gkm_certificate_key_set_property", 
        "Object authenticated", 
        "Optiontal secret", 
        "pkcs11/gkm/gkm-credential.c", 
        "GkmCredential", 
        "!self->pv->object", 
        "!self->pv->user_type", 
        "!self->pv->user_data", 
        "GKM_IS_CREDENTIAL (self)", 
        "self->pv->object == NULL", 
        "GKM_OBJECT (self) != object", 
        "GKM_IS_SECRET (secret)", 
        "n_password", 
        "type == self->pv->user_type", 
        "Couldn't destroy credential object: (code %lu)", 
        "!object || GKM_IS_OBJECT (object)", 
        "!manager || GKM_IS_MANAGER (manager)", 
        "G_TYPE_IS_BOXED (type) || G_TYPE_IS_OBJECT (type)", 
        "gkm_credential_for_each", 
        "gkm_credential_set_data", 
        "gkm_credential_pop_data", 
        "gkm_credential_peek_data", 
        "gkm_credential_get_object", 
        "gkm_credential_get_password", 
        "gkm_credential_set_secret", 
        "gkm_credential_get_secret", 
        "gkm_credential_connect", 
        "gkm_credential_create", 
        "factory_create_credential", 
        "gkm_credential_constructor", 
        "clear_data", 
        "self_destruct", 
        "object_went_away", 
        "gkm_credential_finalize", 
        "gkm_credential_set_property", 
        "format", 
        "pkcs11/gkm/gkm-crypto.c", 
        "at != NULL", 
        "mpi != NULL", 
        "len <= n_block", 
        "len == n_block - offset", 
        "n_encrypted", 
        "algorithm == GCRY_PK_RSA", 
        "n_signature", 
        "algorithm == GCRY_PK_DSA", 
        "algorithm == GCRY_PK_ECC", 
        "method", 
        "n_buftwo", 
        "pub_key", 
        "priv_key", 
        "GKM_IS_OBJECT (base)", 
        "derived", 
        "sha256", 
        "unwrapped", 
        "GKM_IS_SEXP_KEY (key)", 
        "gkm_crypto_prepare_xsa", 
        "gkm_crypto_prepare", 
        "gkm_crypto_unwrap_key", 
        "gkm_crypto_wrap_key", 
        "gkm_crypto_derive_key", 
        "gkm_crypto_generate_key_pair", 
        "gkm_crypto_perform", 
        "gkm_crypto_verify_xsa", 
        "gkm_crypto_verify", 
        "gkm_crypto_sign_xsa", 
        "gkm_crypto_sign", 
        "gkm_crypto_decrypt_xsa", 
        "gkm_crypto_decrypt", 
        "gkm_crypto_encrypt_xsa", 
        "gkm_crypto_encrypt", 
        "gkm_crypto_sexp_to_data", 
        "gkm_crypto_data_to_sexp", 
        "len > 0", 
        "gkm_data_asn1_write_oid", 
        "gkm_data_asn1_read_oid", 
        "gkm_data_asn1_write_bit_string", 
        "gkm_data_asn1_read_bit_string", 
        "gkm_data_asn1_write_string", 
        "gkm_data_asn1_read_string", 
        "gkm_data_asn1_write_mpi_internal", 
        "gkm_data_asn1_read_mpi_internal", 
        "data_der", 
        "1.2.840.113549.1.1.1", 
        "1.2.840.10040.4.1", 
        "1.2.840.10045.2.1", 
        "1.2.840.113549.1.12.1.3", 
        "1.2.840.10045.3.1.7", 
        "1.3.132.0.34", 
        "1.3.132.0.35", 
        "NIST P-256", 
        "NIST P-384", 
        "NIST P-521", 
        "namedCurve", 
        "ECKeyQ", 
        "pkcs11/gkm/gkm-data-der.c", 
        "RSAPublicKey", 
        "modulus", 
        "publicExponent", 
        "*s_key", 
        "invalid RSA public key", 
        "RSAPrivateKey", 
        "version", 
        "privateExponent", 
        "prime1", 
        "prime2", 
        "coefficient", 
        "invalid RSA key", 
        "DSAPublicKey", 
        "invalid public DSA key", 
        "DSAParameters", 
        "DSAPublicPart", 
        "invalid DSA key", 
        "DSAPrivateKey", 
        "DSAPrivatePart", 
        "ECPublicKey", 
        "parameters", 
        "invalid ECDSA key", 
        "ECPrivateKey", 
        "SubjectPublicKeyInfo", 
        "subjectPublicKey", 
        "pkcs-8-PrivateKeyInfo", 
        "privateKeyAlgorithm", 
        "invalid PKCS#8 key", 
        "privateKey", 
        "exponent1", 
        "exponent2", 
        "s_key != NULL", 
        "!is_priv", 
        "is_priv == TRUE", 
        "n_key && *n_block", 
        "pkcs-12-PbeParams", 
        "asn1_params", 
        "iterations", 
        "BasicConstraints", 
        "pathLenConstraint", 
        "invalid basic constraints", 
        "ExtKeyUsageSyntax", 
        "couldn't encode Q into the PKCS#11 structure: %s", 
        "(public-key  (rsa    (n %m)    (e %m)))", 
        "unsupported version of RSA key: %lu", 
        "(private-key  (rsa    (n %m)    (e %m)    (d %m)    (p %m)    (q %m)    (u %m)))", 
        "(public-key  (dsa    (p %m)    (q %m)    (g %m)    (y %m)))", 
        "(private-key  (dsa    (p %m)    (q %m)    (g %m)    (y %m)    (x %m)))", 
        "(public-key  (ecdsa    (curve %s)    (q %b)))", 
        "(private-key  (ecdsa    (curve %s)    (q %b)    (d %m)))", 
        "invalid bit length for public key: %u", 
        "unsupported key algorithm in certificate: %s", 
        "invalid subject public-key info", 
        "pkcs-8-EncryptedPrivateKeyInfo", 
        "couldn't decrypt pkcs8 data: %s", 
        "couldn't encode public rsa key: %s", 
        "couldn't encode private rsa key: %s", 
        "couldn't encode public dsa key: %s", 
        "couldn't encode private dsa key: %s", 
        "couldn't encode private dsa params: %s", 
        "couldn't encode public ecdsa key: %s", 
        "couldn't encode private ecdsa key: %s", 
        "trying to serialize unsupported private key algorithm: %d", 
        "couldn't encode private pkcs8 key: %s", 
        "gcry_cipher_algo_info (gcry_cipher_map_name (g_quark_to_string (OID_PKCS12_PBE_3DES_SHA1)), GCRYCTL_TEST_ALGO, NULL, 0) == 0", 
        "couldn't encode encrypted pkcs8 key: %s", 
        "couldn't encode certificate: %s", 
        "gkm_data_der_write_certificate", 
        "prepare_and_encode_pkcs8_cipher", 
        "gkm_data_der_write_private_pkcs8_crypted", 
        "gkm_data_der_write_private_pkcs8_plain", 
        "gkm_data_der_write_private_key", 
        "gkm_data_der_write_public_key", 
        "gkm_data_der_write_private_key_ecdsa", 
        "gkm_data_der_write_public_key_ecdsa", 
        "gkm_data_der_write_private_key_dsa", 
        "gkm_data_der_write_private_key_dsa_params", 
        "gkm_data_der_write_private_key_dsa_part", 
        "gkm_data_der_write_public_key_dsa", 
        "gkm_data_der_write_private_key_rsa", 
        "gkm_data_der_write_public_key_rsa", 
        "gkm_data_der_read_private_key_ecdsa", 
        "gkm_data_der_read_public_key_ecdsa", 
        "gkm_data_der_read_private_key_dsa_parts", 
        "gkm_data_der_read_private_key_dsa", 
        "gkm_data_der_read_public_key_dsa_parts", 
        "gkm_data_der_read_public_key_dsa", 
        "gkm_data_der_read_private_key_rsa", 
        "gkm_data_der_read_public_key_rsa", 
        "gkm_data_der_decode_ecdsa_q", 
        "gkm_data_der_encode_ecdsa_q", 
        "gkm_data_der_encode_ecdsa_q_str", 
        "(NULL) message", 
        "process", 
        "(%s:%lu): %s-DEBUG: %s", 
        "G_MESSAGES_DEBUG", 
        "GKM_DEBUG", 
        "GkmDhKey", 
        "GKM_IS_DH_KEY (self)", 
        "!self->pv->base", 
        "!self->pv->prime", 
        "gkm_dh_key_get_prime", 
        "gkm_dh_key_initialize", 
        "dh_mechanism", 
        "GKM_IS_DH_PRIVATE_KEY (base)", 
        "gkm_dh_mechanism_derive", 
        "gkm_dh_mechanism_generate", 
        "GkmDhPrivateKey", 
        "GKM_IS_DH_PRIVATE_KEY (self)", 
        "%s: CKR_ATTRIBUTE_TYPE_INVALID: no CKA_UNWRAP_TEMPLATE attribute", 
        "gkm_dh_private_key_get_value", 
        "gkm_dh_private_key_real_get_attribute", 
        "GkmDhPublicKey", 
        "%s: CKR_ATTRIBUTE_TYPE_INVALID: no CKA_WRAP_TEMPLATE attribute", 
        "gkm_dh_public_key_real_get_attribute", 
        "(data (flags raw) (value %m))", 
        "*n_signature >= 40", 
        "size == 20", 
        "(sig-val (dsa (r %m) (s %m)))", 
        "signing of the data failed: %s", 
        "pkcs11/gkm/gkm-dsa-mechanism.c", 
        "verifying of the data failed: %s", 
        "gkm_dsa_mechanism_verify", 
        "gkm_dsa_mechanism_sign", 
        "(data (flags raw) (value %b))", 
        "size == key_bytes", 
        "(sig-val (ecdsa (r %b) (s %b)))", 
        "gkm_ecdsa_mechanism_verify", 
        "gkm_ecdsa_mechanism_sign", 
        "GkmGenericKey", 
        "GKM_IS_GENERIC_KEY (self)", 
        "pkcs11/gkm/gkm-generic-key.c", 
        "generic_key", 
        "attribute_set_check_value", 
        "GKM_IS_SECRET_KEY (base)", 
        "hkdf_mechanism", 
        "gkm_hkdf_mechanism_derive", 
        "CKR_FUNCTION_REJECTED", 
        "CKR_MUTEX_NOT_LOCKED", 
        "CKR_MUTEX_BAD", 
        "CKR_CRYPTOKI_NOT_INITIALIZED", 
        "CKR_STATE_UNSAVEABLE", 
        "CKR_INFORMATION_SENSITIVE", 
        "CKR_SAVED_STATE_INVALID", 
        "CKR_BUFFER_TOO_SMALL", 
        "CKR_DOMAIN_PARAMS_INVALID", 
        "CKR_RANDOM_NO_RNG", 
        "CKR_RANDOM_SEED_NOT_SUPPORTED", 
        "CKR_WRAPPING_KEY_SIZE_RANGE", 
        "CKR_WRAPPED_KEY_LEN_RANGE", 
        "CKR_WRAPPED_KEY_INVALID", 
        "CKR_USER_TOO_MANY_TYPES", 
        "CKR_USER_TYPE_INVALID", 
        "CKR_USER_PIN_NOT_INITIALIZED", 
        "CKR_USER_NOT_LOGGED_IN", 
        "CKR_USER_ALREADY_LOGGED_IN", 
        "CKR_UNWRAPPING_KEY_SIZE_RANGE", 
        "CKR_TOKEN_WRITE_PROTECTED", 
        "CKR_TOKEN_NOT_RECOGNIZED", 
        "CKR_TOKEN_NOT_PRESENT", 
        "CKR_TEMPLATE_INCONSISTENT", 
        "CKR_TEMPLATE_INCOMPLETE", 
        "CKR_SIGNATURE_LEN_RANGE", 
        "CKR_SIGNATURE_INVALID", 
        "CKR_SESSION_READ_ONLY_EXISTS", 
        "CKR_SESSION_EXISTS", 
        "CKR_SESSION_READ_ONLY", 
        "CKR_SESSION_HANDLE_INVALID", 
        "CKR_SESSION_COUNT", 
        "CKR_SESSION_CLOSED", 
        "CKR_PIN_LOCKED", 
        "CKR_PIN_EXPIRED", 
        "CKR_PIN_LEN_RANGE", 
        "CKR_PIN_INVALID", 
        "CKR_PIN_INCORRECT", 
        "CKR_OPERATION_NOT_INITIALIZED", 
        "CKR_OPERATION_ACTIVE", 
        "CKR_OBJECT_HANDLE_INVALID", 
        "CKR_MECHANISM_PARAM_INVALID", 
        "CKR_MECHANISM_INVALID", 
        "CKR_KEY_UNEXTRACTABLE", 
        "CKR_KEY_NOT_WRAPPABLE", 
        "CKR_KEY_INDIGESTIBLE", 
        "CKR_KEY_NEEDED", 
        "CKR_KEY_CHANGED", 
        "CKR_KEY_NOT_NEEDED", 
        "CKR_KEY_TYPE_INCONSISTENT", 
        "CKR_KEY_SIZE_RANGE", 
        "CKR_KEY_HANDLE_INVALID", 
        "CKR_FUNCTION_NOT_SUPPORTED", 
        "CKR_ENCRYPTED_DATA_LEN_RANGE", 
        "CKR_ENCRYPTED_DATA_INVALID", 
        "CKR_DEVICE_REMOVED", 
        "CKR_DEVICE_MEMORY", 
        "CKR_DEVICE_ERROR", 
        "CKR_DATA_LEN_RANGE", 
        "CKR_DATA_INVALID", 
        "CKR_ATTRIBUTE_VALUE_INVALID", 
        "CKR_ATTRIBUTE_TYPE_INVALID", 
        "CKR_ATTRIBUTE_SENSITIVE", 
        "CKR_ATTRIBUTE_READ_ONLY", 
        "CKR_CANT_LOCK", 
        "CKR_NEED_TO_CREATE_THREADS", 
        "CKR_ARGUMENTS_BAD", 
        "CKR_FUNCTION_FAILED", 
        "CKR_GENERAL_ERROR", 
        "CKR_SLOT_ID_INVALID", 
        "CKR_HOST_MEMORY", 
        "CKR_FUNCTION_CANCELED", 
        "CKR_CANCEL", 
        "CKR_FUNCTION_NOT_PARALLEL", 
        "CKR_NO_EVENT", 
        "CKR_0x%08lX", 
        "CKA_G_CREDENTIAL", 
        "CKA_G_CREDENTIAL_TEMPLATE", 
        "CKA_CLASS", 
        "CKA_TOKEN", 
        "CKA_PRIVATE", 
        "CKA_LABEL", 
        "CKA_APPLICATION", 
        "CKA_VALUE", 
        "CKA_OBJECT_ID", 
        "CKA_CERTIFICATE_TYPE", 
        "CKA_ISSUER", 
        "CKA_SERIAL_NUMBER", 
        "CKA_AC_ISSUER", 
        "CKA_OWNER", 
        "CKA_ATTR_TYPES", 
        "CKA_TRUSTED", 
        "CKA_CERTIFICATE_CATEGORY", 
        "CKA_JAVA_MIDP_SECURITY_DOMAIN", 
        "CKA_URL", 
        "CKA_HASH_OF_ISSUER_PUBLIC_KEY", 
        "CKA_CHECK_VALUE", 
        "CKA_KEY_TYPE", 
        "CKA_SUBJECT", 
        "CKA_ID", 
        "CKA_SENSITIVE", 
        "CKA_ENCRYPT", 
        "CKA_DECRYPT", 
        "CKA_WRAP", 
        "CKA_UNWRAP", 
        "CKA_SIGN", 
        "CKA_SIGN_RECOVER", 
        "CKA_VERIFY", 
        "CKA_VERIFY_RECOVER", 
        "CKA_DERIVE", 
        "CKA_START_DATE", 
        "CKA_END_DATE", 
        "CKA_MODULUS", 
        "CKA_MODULUS_BITS", 
        "CKA_PUBLIC_EXPONENT", 
        "CKA_PRIVATE_EXPONENT", 
        "CKA_PRIME_1", 
        "CKA_PRIME_2", 
        "CKA_EXPONENT_1", 
        "CKA_EXPONENT_2", 
        "CKA_COEFFICIENT", 
        "CKA_PRIME", 
        "CKA_SUBPRIME", 
        "CKA_BASE", 
        "CKA_PRIME_BITS", 
        "CKA_VALUE_BITS", 
        "CKA_VALUE_LEN", 
        "CKA_EXTRACTABLE", 
        "CKA_LOCAL", 
        "CKA_NEVER_EXTRACTABLE", 
        "CKA_ALWAYS_SENSITIVE", 
        "CKA_KEY_GEN_MECHANISM", 
        "CKA_MODIFIABLE", 
        "CKA_ECDSA_PARAMS", 
        "CKA_EC_POINT", 
        "CKA_SECONDARY_AUTH", 
        "CKA_AUTH_PIN_FLAGS", 
        "CKA_ALWAYS_AUTHENTICATE", 
        "CKA_WRAP_WITH_TRUSTED", 
        "CKA_WRAP_TEMPLATE", 
        "CKA_UNWRAP_TEMPLATE", 
        "CKA_HW_FEATURE_TYPE", 
        "CKA_RESET_ON_INIT", 
        "CKA_HAS_RESET", 
        "CKA_PIXEL_X", 
        "CKA_PIXEL_Y", 
        "CKA_RESOLUTION", 
        "CKA_CHAR_ROWS", 
        "CKA_CHAR_COLUMNS", 
        "CKA_COLOR", 
        "CKA_BITS_PER_PIXEL", 
        "CKA_CHAR_SETS", 
        "CKA_ENCODING_METHODS", 
        "CKA_MIME_TYPES", 
        "CKA_MECHANISM_TYPE", 
        "CKA_REQUIRED_CMS_ATTRIBUTES", 
        "CKA_DEFAULT_CMS_ATTRIBUTES", 
        "CKA_SUPPORTED_CMS_ATTRIBUTES", 
        "CKA_ALLOWED_MECHANISMS", 
        "CKA_X_ASSERTION_TYPE", 
        "CKA_X_CERTIFICATE_VALUE", 
        "CKA_X_PURPOSE", 
        "CKA_X_PEER", 
        "CKA_NETSCAPE_URL", 
        "CKA_NETSCAPE_EMAIL", 
        "CKA_NETSCAPE_SMIME_INFO", 
        "CKA_NETSCAPE_SMIME_TIMESTAMP", 
        "CKA_NETSCAPE_PKCS8_SALT", 
        "CKA_NETSCAPE_PASSWORD_CHECK", 
        "CKA_NETSCAPE_EXPIRES", 
        "CKA_NETSCAPE_KRL", 
        "CKA_NETSCAPE_PQG_COUNTER", 
        "CKA_NETSCAPE_PQG_SEED", 
        "CKA_NETSCAPE_PQG_H", 
        "CKA_NETSCAPE_PQG_SEED_BITS", 
        "CKA_NETSCAPE_MODULE_SPEC", 
        "CKA_TRUST_DIGITAL_SIGNATURE", 
        "CKA_TRUST_NON_REPUDIATION", 
        "CKA_TRUST_KEY_ENCIPHERMENT", 
        "CKA_TRUST_DATA_ENCIPHERMENT", 
        "CKA_TRUST_KEY_AGREEMENT", 
        "CKA_TRUST_KEY_CERT_SIGN", 
        "CKA_TRUST_CRL_SIGN", 
        "CKA_TRUST_SERVER_AUTH", 
        "CKA_TRUST_CLIENT_AUTH", 
        "CKA_TRUST_CODE_SIGNING", 
        "CKA_TRUST_EMAIL_PROTECTION", 
        "CKA_TRUST_IPSEC_END_SYSTEM", 
        "CKA_TRUST_IPSEC_TUNNEL", 
        "CKA_TRUST_IPSEC_USER", 
        "CKA_TRUST_TIME_STAMPING", 
        "CKA_TRUST_STEP_UP_APPROVED", 
        "CKA_CERT_SHA1_HASH", 
        "CKA_CERT_MD5_HASH", 
        "CKA_NETSCAPE_DB", 
        "CKA_NETSCAPE_TRUST", 
        "CKA_GNOME_UNIQUE", 
        "CKA_GNOME_TRANSIENT", 
        "CKA_GNOME_INTERNAL_SHA1", 
        "CKA_G_LOCKED", 
        "CKA_G_CREATED", 
        "CKA_G_MODIFIED", 
        "CKA_G_FIELDS", 
        "CKA_G_COLLECTION", 
        "CKA_G_MATCHED", 
        "CKA_G_SCHEMA", 
        "CKA_G_LOGIN_COLLECTION", 
        "CKA_G_DESTRUCT_IDLE", 
        "CKA_G_DESTRUCT_AFTER", 
        "CKA_G_DESTRUCT_USES", 
        "CKA_G_OBJECT", 
        "CKA_0x%08lX", 
        "CKR_CRYPTOKI_ALREADY_INITIALIZED", 
        "CKR_WRAPPING_KEY_TYPE_INCONSISTENT", 
        "CKR_WRAPPING_KEY_HANDLE_INVALID", 
        "CKR_USER_ANOTHER_ALREADY_LOGGED_IN", 
        "CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT", 
        "CKR_UNWRAPPING_KEY_HANDLE_INVALID", 
        "CKR_SESSION_READ_WRITE_SO_EXISTS", 
        "CKR_KEY_FUNCTION_NOT_PERMITTED", 
        "CKR_SESSION_PARALLEL_NOT_SUPPORTED", 
        "CKA_HASH_OF_SUBJECT_PUBLIC_KEY", 
        "pkcs11/gkm/gkm-manager.c", 
        "GkmManager", 
        "For Token", 
        "for-token", 
        "object-added", 
        "object-removed", 
        "attribute-changed", 
        "!self->pv->objects", 
        "GKM_IS_MANAGER (self)", 
        "self->pv->objects == NULL", 
        "finder", 
        "notify-attribute", 
        "GKM_IS_OBJECT (related_to)", 
        "couldn't convert value from type %s into attribute", 
        "accessing indexed attribute failed", 
        "g_hash_table_lookup (index->values, attr) == NULL", 
        "Whether this manager is for token objects or not", 
        "gkm_object_get_manager (object) == self", 
        "GKM_IS_MANAGER (finder->manager)", 
        "!finder->n_attrs || finder->attrs", 
        "!g_hash_table_lookup (self->pv->index_by_attribute, &attr)", 
        "!g_hash_table_lookup (self->pv->index_by_property, property)", 
        "accumulate_handles", 
        "gkm_manager_find_handles", 
        "gkm_manager_find_related", 
        "gkm_manager_find_by_class", 
        "gkm_manager_find_by_attributes", 
        "index_contains", 
        "find_each_object", 
        "find_for_attributes", 
        "gkm_manager_find_one_by_attributes", 
        "find_one_for_property", 
        "find_all_for_property", 
        "gkm_manager_find_by_handle", 
        "_gkm_manager_unregister_object", 
        "add_object", 
        "_gkm_manager_register_object", 
        "gkm_manager_add_property_index", 
        "gkm_manager_add_attribute_index", 
        "gkm_manager_get_for_token", 
        "notify_attribute", 
        "read_attribute", 
        "read_value", 
        "index_update", 
        "notify_property", 
        "index_remove_attr", 
        "index_remove", 
        "remove_object", 
        "gkm_manager_dispose", 
        "gkm_manager_finalize", 
        "pkcs11/gkm/gkm-memory-store.c", 
        "GkmMemoryStore", 
        "GKM_IS_MEMORY_STORE (data)", 
        "at->type == attr->type", 
        "GKM_IS_OBJECT (key)", 
        "%s: CKR_ATTRIBUTE_TYPE_INVALID: no object", 
        "%s: CKR_ATTRIBUTE_TYPE_INVALID: no attribute: %s", 
        "g_hash_table_size (self->entries) == 0", 
        "GKM_IS_MEMORY_STORE (user_data)", 
        "gkm_memory_store_constructor", 
        "remove_each_object", 
        "gkm_memory_store_finalize", 
        "gkm_memory_store_real_read_value", 
        "object_gone", 
        "complete_set", 
        "gkm_memory_store_real_write_value", 
        "session != NULL && \"No such session found\"", 
        "pMechanism->mechanism == CKM_MOCK_CAPITALIZE", 
        "hKey == PRIVATE_KEY_CAPITALIZE", 
        "session->crypto_method == CKA_VERIFY", 
        "session->crypto_mechanism == CKM_MOCK_PREFIX", 
        "session->crypto_key == PUBLIC_KEY_PREFIX", 
        "(args->CreateMutex == NULL && args->DestroyMutex == NULL && args->LockMutex == NULL && args->UnlockMutex == NULL) || (args->CreateMutex != NULL && args->DestroyMutex != NULL && args->LockMutex != NULL && args->UnlockMutex != NULL)", 
        "args->flags & CKF_OS_LOCKING_OK", 
        "args->flags & CKF_LIBRARY_CANT_CREATE_OS_THREADS", 
        "session->crypto_method == CKA_SIGN", 
        "session->crypto_key == PRIVATE_KEY_PREFIX", 
        "userType == CKU_SO || userType == CKU_USER || userType == CKU_CONTEXT_SPECIFIC", 
        "session->want_context_login == TRUE", 
        "slotID == GKM_TEST_SLOT_ONE && \"Invalid slotID\"", 
        "pPin != NULL && \"Invalid pPin\"", 
        "strncmp ((gchar*)pPin, \"TEST PIN\", ulPinLen) == 0 && \"Invalid pPin string\"", 
        "pLabel != NULL && \"Invalid pLabel\"", 
        "strcmp ((gchar*)pPin, \"TEST LABEL\") == 0 && \"Invalid pLabel string\"", 
        "(flags & CKF_SERIAL_SESSION) == CKF_SERIAL_SESSION", 
        "session->crypto_method == CKA_ENCRYPT", 
        "session->crypto_mechanism == CKM_MOCK_CAPITALIZE", 
        "session->crypto_key == PUBLIC_KEY_CAPITALIZE", 
        "session->crypto_method == CKA_DECRYPT", 
        "session->crypto_key == PRIVATE_KEY_CAPITALIZE", 
        "pMechanism->mechanism == CKM_MOCK_PREFIX", 
        "pMechanism->ulParameterLen < sizeof (session->sign_prefix)", 
        "pInfo != NULL && \"Invalid pointer to GetInfo\"", 
        "pulCount != NULL && \"Invalid pulCount\"", 
        "*pulCount && \"Passed in a bad count\"", 
        "pInfo != NULL && \"Invalid pInfo\"", 
        "pkcs11/gkm/gkm-mock.c", 
        "pMechanism", 
        "hKey == PUBLIC_KEY_CAPITALIZE", 
        "pSignature", 
        "initialized == FALSE", 
        "TEST LABEL", 
        "Private Capitalize Key", 
        "unique1", 
        "Public Capitalize Key", 
        "unique2", 
        "Private prefix key", 
        "unique3", 
        "Public prefix key", 
        "unique4", 
        "pInfo != NULL", 
        "pulSignatureLen", 
        "session != NULL", 
        "logged_in == FALSE", 
        "TEST PIN", 
        "slotID == GKM_TEST_SLOT_ONE", 
        "phSession != NULL", 
        "phObject != NULL", 
        "pulObjectCount != NULL", 
        "ulMaxObjectCount != 0", 
        "pulEncryptedDataLen", 
        "pEncryptedData", 
        "pulDataLen", 
        "hKey == PRIVATE_KEY_PREFIX", 
        "hKey == PUBLIC_KEY_PREFIX", 
        "logged_in && \"Not logged in\"", 
        "pReserved == NULL", 
        "initialized == TRUE", 
        "the_objects", 
        "token == TRUE", 
        "object != 0", 
        "gkm_mock_C_Verify", 
        "gkm_mock_C_VerifyInit", 
        "gkm_mock_C_Sign", 
        "gkm_mock_C_SignInit", 
        "gkm_mock_C_Decrypt", 
        "gkm_mock_C_DecryptInit", 
        "gkm_mock_C_Encrypt", 
        "gkm_mock_C_EncryptInit", 
        "gkm_mock_C_FindObjectsFinal", 
        "gkm_mock_C_FindObjects", 
        "gkm_mock_C_FindObjectsInit", 
        "gkm_mock_C_SetAttributeValue", 
        "gkm_mock_C_GetAttributeValue", 
        "gkm_mock_C_DestroyObject", 
        "gkm_mock_C_CreateObject", 
        "gkm_mock_C_Logout", 
        "gkm_mock_C_Login", 
        "gkm_mock_C_SetPIN", 
        "gkm_mock_C_InitPIN", 
        "gkm_mock_C_GetSessionInfo", 
        "gkm_mock_C_CloseAllSessions", 
        "gkm_mock_C_CloseSession", 
        "gkm_mock_C_OpenSession", 
        "gkm_mock_C_InitToken", 
        "gkm_mock_C_GetMechanismInfo", 
        "gkm_mock_C_GetMechanismList", 
        "gkm_mock_C_GetTokenInfo", 
        "gkm_mock_C_GetSlotInfo", 
        "gkm_mock_C_GetSlotList", 
        "gkm_mock_C_GetInfo", 
        "gkm_mock_C_Finalize", 
        "gkm_mock_C_Initialize", 
        "gkm_mock_module_set_object", 
        "gkm_mock_module_enumerate_objects", 
        "gkm_mock_module_take_object", 
        "TEST LABEL                      TEST MANUFACTURER               TEST MODEL      TEST SERIAL     L", 
        "1999052509195900TEST SLOT                                                       TEST MANUFACTURER              ", 
        "TEST SLOT                                                       TEST MANUFACTURER              ", 
        "TEST MANUFACTURER              ", 
        "TEST LIBRARY                   ", 
        "pkcs11/gkm/gkm-module.c", 
        "GKM_IS_SESSION (l->data)", 
        "Token object manager", 
        "Token is write protected", 
        "Write Protected", 
        "write-protected", 
        "Initialize Args", 
        "Module mutex", 
        "GkmModule", 
        "GKM_IS_MODULE (self)", 
        "self->pv->mutex", 
        "handle counter wrapped", 
        "factory", 
        "klass->get_slot_info", 
        "original", 
        "klass->get_token_info", 
        "logged-in", 
        "apartment", 
        "slot-id", 
        "GKM_IS_MANAGER (apt->session_manager)", 
        "gkm_session_get_apartment (l->data) == apt->apt_id", 
        "gkm_session_get_manager (l->data) == apt->session_manager", 
        "gkm_session_get_logged_in (l->data) == apt->logged_in", 
        "Arguments passed to C_Initialize", 
        "at != NULL && at < string + length", 
        "GKM_MODULE_GET_CLASS (self)->parse_argument", 
        "couldn't parse module argument string", 
        "self->pv->token_manager == NULL", 
        "g_hash_table_size (self->pv->apartments_by_id) == 0", 
        "g_hash_table_size (self->pv->sessions_by_handle) == 0", 
        "gkm_object_get_manager (object) == self->pv->token_manager", 
        "g_hash_table_lookup (self->pv->transient_objects, object) == NULL", 
        "GKM_IS_MANAGER (self->pv->token_manager)", 
        "GKM_MODULE_GET_CLASS (self)->get_token_info", 
        "GKM_MODULE_GET_CLASS (self)->login_change", 
        "GKM_MODULE_GET_CLASS (self)->login_user", 
        "GKM_MODULE_GET_CLASS (self)->logout_user", 
        "GKM_MODULE_GET_CLASS (self)->login_so", 
        "GKM_MODULE_GET_CLASS (self)->logout_so", 
        "GKM_MODULE_GET_CLASS (self)->refresh_token", 
        "GKM_MODULE_GET_CLASS (self)->add_token_object", 
        "GKM_MODULE_GET_CLASS (self)->store_token_object", 
        "GKM_MODULE_GET_CLASS (self)->remove_token_object", 
        "factory->attrs || !factory->n_attrs", 
        "!g_hash_table_lookup (self->pv->apartments_by_id, &(apt->apt_id))", 
        "gkm_module_C_Logout", 
        "gkm_module_C_Login", 
        "gkm_module_C_SetPIN", 
        "gkm_module_C_InitPIN", 
        "gkm_module_C_CloseAllSessions", 
        "unregister_apartment", 
        "gkm_module_C_CloseSession", 
        "register_apartment", 
        "gkm_module_C_OpenSession", 
        "gkm_module_C_GetMechanismInfo", 
        "gkm_module_C_GetMechanismList", 
        "gkm_module_C_GetTokenInfo", 
        "gkm_module_C_GetSlotInfo", 
        "gkm_module_C_GetSlotList", 
        "extend_space_string", 
        "gkm_module_C_GetInfo", 
        "_gkm_module_get_scary_mutex_that_you_should_not_touch", 
        "sort_factory_by_n_attrs", 
        "gkm_module_find_factory", 
        "gkm_module_register_factory", 
        "gkm_module_remove_token_object", 
        "gkm_module_store_token_object", 
        "remove_transient_object", 
        "add_transient_object", 
        "gkm_module_add_token_object", 
        "gkm_module_refresh_token", 
        "gkm_module_next_handle", 
        "gkm_module_logout_so", 
        "gkm_module_login_so", 
        "gkm_module_logout_user", 
        "gkm_module_login_user", 
        "gkm_module_login_change", 
        "gkm_module_lookup_session", 
        "gkm_module_get_write_protected", 
        "gkm_module_get_manager", 
        "gkm_module_constructor", 
        "gkm_module_finalize", 
        "parse_argument", 
        "parse_arguments", 
        "gkm_module_set_property", 
        "gkm_module_real_login_user", 
        "gkm_module_real_logout_any", 
        "mark_login_apartment", 
        "lookup_apartment", 
        "gkm_module_real_login_so", 
        "apartment_free", 
        "Unnamed Token", 
        "Gnome Keyring", 
        "Unnamed Slot", 
        "Gnome Keyring", 
        "Gnome Keyring", 
        "@Gnome Keyring Module", 
        "GkmNullKey", 
        "mech->mechanism == CKM_G_NULL", 
        "null_mechanism", 
        "gkm_null_mechanism_unwrap", 
        "gkm_null_mechanism_wrap", 
        "expose != self->pv->exposed", 
        "GkmObject", 
        "Object handle", 
        "Handle", 
        "Object module", 
        "Object manager", 
        "Object store", 
        "Machine unique identifier", 
        "Unique Identifer", 
        "Transient Object", 
        "expose-object", 
        "self->pv->manager == NULL", 
        "pkcs11/gkm/gkm-object.c", 
        "GKM_IS_OBJECT (self)", 
        "!*result", 
        "self->pv->handle == 0", 
        "!self->pv->module", 
        "!self->pv->manager", 
        "!store", 
        "!self->pv->unique", 
        "!self->pv->transient", 
        "n_data % sizeof (gulong) == 0", 
        "timer == transient->timer", 
        "transient->stamp_created", 
        "transient->stamp_used", 
        "!transient->timer", 
        "!self->pv->exposed", 
        "self->pv->store == NULL", 
        "module destroyed before %s that module contained", 
        "GKM_IS_MODULE (self->pv->module)", 
        "GKM_OBJECT_GET_CLASS (self)->get_attribute", 
        "GKM_OBJECT_GET_CLASS (self)->create_attributes", 
        "GKM_OBJECT_GET_CLASS (self)->set_attribute", 
        "Derived class should have overridden CKA_CLASS", 
        "%s: CKR_ATTRIBUTE_TYPE_INVALID: no CKA_GNOME_UNIQUE on object", 
        "%s: CKR_ATTRIBUTE_TYPE_INVALID: no %s attribute", 
        "GKM_OBJECT_GET_CLASS (self)->unlock", 
        "Unexpected failure to auto destruct object (code: %lu)", 
        "!transaction || !gkm_transaction_get_failed (transaction)", 
        "gkm_object_expose_full", 
        "gkm_object_expose", 
        "gkm_object_is_exposed", 
        "gkm_object_destroy", 
        "gkm_object_has_attribute_boolean", 
        "gkm_object_has_attribute_ulong", 
        "gkm_object_get_attribute_data", 
        "gkm_object_get_attribute_ulong", 
        "gkm_object_get_attribute_boolean", 
        "gkm_object_unlock", 
        "gkm_object_mark_used", 
        "gkm_object_is_transient", 
        "gkm_object_is_token", 
        "gkm_object_get_unique", 
        "gkm_object_get_module", 
        "gkm_object_get_manager", 
        "gkm_object_set_handle", 
        "gkm_object_get_handle", 
        "gkm_object_match_all", 
        "gkm_object_match", 
        "gkm_object_notify_attribute", 
        "gkm_object_create_attributes", 
        "gkm_object_set_attribute", 
        "gkm_object_get_attribute", 
        "gkm_object_constructor", 
        "gkm_object_dispose", 
        "gkm_object_finalize", 
        "module_went_away", 
        "gkm_object_set_property", 
        "gkm_object_get_property", 
        "find_credential", 
        "gkm_object_real_get_attribute", 
        "timer_callback", 
        "start_callback", 
        "gkm_object_real_expose_object", 
        "GkmPrivateXsaKey", 
        "self->pv->sexp == NULL", 
        "bytes != NULL", 
        "oid != 0", 
        "GKM_IS_PRIVATE_XSA_KEY (self)", 
        "GKM_IS_CREDENTIAL (cred)", 
        "pkcs11/gkm/gkm-private-xsa-key.c", 
        "%s: CKR_ATTRIBUTE_TYPE_INVALID: no CKA_UNWRAP_TEMPLATE on key", 
        "gkm_credential_get_object (cred) == GKM_OBJECT (self)", 
        "(private-key (rsa (n %m) (e %m) (d %m) (p %m) (q %m) (u %m)))", 
        "couldn't create RSA key from passed attributes: %s", 
        "(private-key (dsa (p %m) (q %m) (g %m) (y %m) (x %m)))", 
        "couldn't create DSA key from passed attributes: %s", 
        "(private-key (ecdsa (curve %s) (q %b) (d %m)))", 
        "couldn't create ECDSA key from passed attributes: %s", 
        "factory_create_private_xsa_key", 
        "create_dsa_private", 
        "gkm_private_xsa_key_create_sexp", 
        "gkm_private_xsa_key_set_locked_private", 
        "gkm_private_xsa_key_set_unlocked_private", 
        "gkm_attributes_find_ecc_q", 
        "gkm_attributes_find_ecc_oid", 
        "gkm_private_xsa_key_finalize", 
        "gkm_private_xsa_key_real_get_attribute", 
        "acquire_from_credential", 
        "GkmPublicXsaKey", 
        "numbers", 
        "%s: CKR_ATTRIBUTE_TYPE_INVALID: no CKA_WRAP_TEMPLATE on key", 
        "pkcs11/gkm/gkm-public-xsa-key.c", 
        "%s: CKR_ATTRIBUTE_TYPE_INVALID: CKA_MODULUS_BITS not valid for non-RSA keys", 
        "(public-key (rsa (n %m) (e %m)))", 
        "(public-key (dsa (p %m) (q %m) (g %m) (y %m)))", 
        "(public-key (ecdsa (curve %s) (q %b)))", 
        "factory_create_public_xsa_key", 
        "gkm_public_xsa_key_create_sexp", 
        "return_modulus_bits", 
        "gkm_public_xsa_key_real_get_attribute", 
        "nbits > 0", 
        "enc-val", 
        "(sig-val (rsa (s %m)))", 
        "encrypting of the data failed: %s", 
        "(enc-val (flags) (rsa (a %m)))", 
        "decrypting of the data failed: %s", 
        "gkm_rsa_mechanism_verify", 
        "gkm_rsa_mechanism_sign", 
        "gkm_rsa_mechanism_decrypt", 
        "gkm_rsa_mechanism_encrypt", 
        "GkmSecret", 
        "GKM_IS_SECRET (self)", 
        "GKM_IS_SECRET (other)", 
        "gkm_secret_equals", 
        "gkm_secret_equal", 
        "gkm_secret_get_password", 
        "gkm_secret_get", 
        "GkmSecretKey", 
        "GKM_IS_SECRET_KEY (self)", 
        "GKM_SECRET_KEY_GET_CLASS (self)->get_key_value", 
        "gkm_secret_key_get_key_value", 
        "gkm_secret_key_real_get_attribute", 
        "GkmSerializableIface", 
        "GKM_IS_SERIALIZABLE (self)", 
        "GKM_SERIALIZABLE_GET_INTERFACE (self)->load", 
        "GKM_SERIALIZABLE_GET_INTERFACE (self)->save", 
        "gkm_serializable_save", 
        "gkm_serializable_load", 
        "Module this session belongs to", 
        "Object manager for this session", 
        "Slot ID this session is opened on", 
        "Apartment this session is opened on", 
        "Whether this session is logged in or not", 
        "self->pv->current_operation == cleanup_crypto", 
        "GKM_IS_OBJECT (self->pv->current_object)", 
        "gkm_object_get_manager (object) == self->pv->manager", 
        "g_object_get_data (G_OBJECT (object), \"owned-by-session\") == NULL", 
        "g_hash_table_lookup (self->pv->objects, object) == NULL", 
        "GKM_IS_MANAGER (self->pv->manager)", 
        "gkm_session_for_session_object (obj) == NULL", 
        "gkm_session_for_session_object (obj) == self", 
        "an object was not properly exposed its owner", 
        "gkm_session_lookup_readable_object (self, handle, &object) == CKR_OBJECT_HANDLE_INVALID", 
        "PKCS#11 session handle", 
        "Slot ID", 
        "Apartment", 
        "Flags for the session", 
        "Logged in", 
        "pkcs11/gkm/gkm-session.c", 
        "owned-by-session", 
        "GkmSession", 
        "self->pv->module == NULL", 
        "!self->pv->current_operation", 
        "GKM_IS_SESSION (self)", 
        "self->pv->crypto_mechanism", 
        "GKM_IS_OBJECT (obj)", 
        "self->pv->handle != 0", 
        "!self->pv->crypto_state", 
        "is_private == TRUE", 
        "factory && factory->func", 
        "template || !count", 
        "!self->pv->found_objects", 
        "gkm_session_C_DeriveKey", 
        "gkm_session_C_UnwrapKey", 
        "gkm_session_C_WrapKey", 
        "gkm_session_C_GenerateKeyPair", 
        "gkm_session_C_Verify", 
        "gkm_session_C_VerifyInit", 
        "gkm_session_C_Sign", 
        "gkm_session_C_SignInit", 
        "gkm_session_C_Decrypt", 
        "gkm_session_C_DecryptInit", 
        "process_crypto", 
        "gkm_session_C_Encrypt", 
        "cleanup_crypto", 
        "prepare_crypto", 
        "gkm_session_C_EncryptInit", 
        "gkm_session_C_FindObjectsFinal", 
        "gkm_session_C_FindObjects", 
        "cleanup_found", 
        "gkm_session_C_FindObjectsInit", 
        "gkm_session_C_DestroyObject", 
        "gkm_session_C_SetAttributeValue", 
        "gkm_session_C_GetAttributeValue", 
        "gkm_session_C_CreateObject", 
        "gkm_session_C_GetSessionInfo", 
        "gkm_session_C_CancelFunction", 
        "gkm_session_C_GetFunctionStatus", 
        "gkm_session_complete_object_creation", 
        "gkm_session_create_object_for_attributes", 
        "gkm_session_create_object_for_factory", 
        "gkm_session_get_credential", 
        "gkm_session_destroy_session_object", 
        "remove_object", 
        "add_object", 
        "gkm_session_add_session_object", 
        "gkm_session_login_context_specific", 
        "lookup_object_from_handle", 
        "gkm_session_is_for_application", 
        "gkm_session_is_read_only", 
        "gkm_session_set_crypto_state", 
        "gkm_session_get_crypto_state", 
        "gkm_session_set_logged_in", 
        "gkm_session_get_logged_in", 
        "gkm_session_get_manager", 
        "gkm_session_get_module", 
        "gkm_session_get_apartment", 
        "gkm_session_get_slot_id", 
        "gkm_session_get_handle", 
        "gkm_session_for_session_object", 
        "gkm_session_constructor", 
        "gkm_session_dispose", 
        "gkm_session_finalize", 
        "gkm_session_set_property", 
        "sexp->real", 
        "pkcs11/gkm/gkm-sexp.c", 
        "GkmSexp", 
        "private-key", 
        "pubkey", 
        "gkm_sexp_get_childv", 
        "gkm_sexp_extract_buffer", 
        "gkm_sexp_extract_string", 
        "gkm_sexp_extract_mpi", 
        "ecdsa_numbers_to_public", 
        "dsa_numbers_to_public", 
        "rsa_numbers_to_public", 
        "gkm_sexp_key_to_public", 
        "gkm_sexp_get", 
        "gkm_sexp_unref", 
        "gkm_sexp_ref", 
        "gkm_sexp_new", 
        "Base Key S-Expression", 
        "Base S-Exp", 
        "GCrypt Algorithm", 
        "GkmSexpKey", 
        "GKM_IS_SEXP_KEY (self)", 
        "self->pv->base_sexp", 
        "pkcs11/gkm/gkm-sexp-key.c", 
        "%s: CKR_ATTRIBUTE_TYPE_INVALID: attribute %s not valid for key algorithm: %s", 
        "GKM_SEXP_KEY_GET_CLASS (self)->acquire_crypto_sexp", 
        "gkm_sexp_key_acquire_crypto_sexp", 
        "gkm_sexp_key_set_ec_params", 
        "gkm_sexp_key_set_part_encode", 
        "gkm_sexp_key_get_algorithm", 
        "gkm_sexp_key_set_base", 
        "gkm_sexp_key_get_base", 
        "gkm_sexp_key_real_get_attribute", 
        "pkcs11/gkm/gkm-store.c", 
        "GkmStore", 
        "GKM_IS_STORE (self)", 
        "at.pValue || !at.ulValueLen", 
        "GKM_STORE_GET_CLASS (self)->read_value", 
        "%s: CKR_ATTRIBUTE_TYPE_INVALID: %s not in schema", 
        "%s: CKR_ATTRIBUTE_TYPE_INVALID: %s is an internal attribute", 
        "GKM_STORE_GET_CLASS (self)->write_value", 
        "%s: CKR_ATTRIBUTE_TYPE_INVALID: %s is internal", 
        "g_hash_table_lookup (self->pv->schemas, &(attr->type)) == NULL", 
        "!attr->ulValueLen || attr->pValue", 
        "gkm_store_lookup_schema", 
        "gkm_store_register_schema", 
        "gkm_store_set_attribute", 
        "gkm_store_write_value", 
        "gkm_store_get_attribute", 
        "gkm_store_read_string", 
        "gkm_store_read_value", 
        "gkm_store_constructor", 
        "assertion failed (%s): (%s %s %s)", 
        "assertion failed (%s): (0x%08llx %s 0x%08llx)", 
        "timer_queue == NULL", 
        "pkcs11/gkm/gkm-timer.c", 
        "timer_cond == NULL", 
        "timer_cond", 
        "timer_thread", 
        "timer_queue", 
        "callback", 
        "timer->mutex", 
        "could not create timer thread: %s", 
        "gkm_timer_cancel", 
        "gkm_timer_start", 
        "gkm_timer_shutdown", 
        "egg_error_message", 
        "gkm_timer_initialize", 
        "pkcs11/gkm/gkm-transaction.c", 
        "!self->completed", 
        "complete->func", 
        "GkmTransaction", 
        "Completed", 
        "Whether transaction failed", 
        "Failed", 
        "Result code for transaction", 
        "Result", 
        "!self->completes", 
        "GKM_IS_TRANSACTION (self)", 
        "result != CKR_OK", 
        "!self->failed", 
        "filename", 
        "%s.temp-%d", 
        "nwritten <= nread", 
        ".temp-XXXXXX", 
        "res <= n_data", 
        "basename", 
        "%s_%d%s%s", 
        "couldn't open file: %s: %s", 
        "couldn't remove file: %s: %s", 
        "Whether transaction is complete", 
        "transaction failed to commit, data may be lost", 
        "!gkm_transaction_get_failed (self)", 
        "error reading file to make temporary copy from: %s: %s", 
        "error wrinting to temporary file: %s: %s", 
        "error closing temporary file: %s: %s", 
        "couldn't remove temporary file: %s: %s", 
        "couldn't create temporary file for: %s: %s", 
        "couldn't open file to make temporary copy from: %s: %s", 
        "couldn't restore original file, data may be lost: %s: %s", 
        "couldn't delete temporary backup file: %s: %s", 
        "couldn't delete aborted file, data may be lost: %s: %s", 
        "couldn't write to file: %s: %s", 
        "couldn't create directory: %s: %s", 
        "gkm_transaction_complete_and_unref", 
        "gkm_transaction_remove_file", 
        "gkm_transaction_unique_file", 
        "write_sync_close", 
        "begin_new_file", 
        "copy_to_temp_file", 
        "complete_link_temporary", 
        "begin_link_temporary_if_exists", 
        "gkm_transaction_write_file", 
        "gkm_transaction_get_result", 
        "gkm_transaction_get_failed", 
        "gkm_transaction_get_completed", 
        "gkm_transaction_complete", 
        "gkm_transaction_fail", 
        "gkm_transaction_add", 
        "gkm_transaction_finalize", 
        "complete_destroy", 
        "complete_invoke", 
        "gkm_transaction_real_complete", 
        "GkmTrust", 
        "GKM_IS_TRUST (self)", 
        "pkcs11/gkm/gkm-trust.c", 
        "1.3.6.1.5.5.7.3.1", 
        "1.3.6.1.5.5.7.3.2", 
        "1.3.6.1.5.5.7.3.3", 
        "1.3.6.1.5.5.7.3.4", 
        "1.3.6.1.5.5.7.3.5", 
        "1.3.6.1.5.5.7.3.6", 
        "1.3.6.1.5.5.7.3.7", 
        "1.3.6.1.5.5.7.3.8", 
        "GKM_TRUST_GET_CLASS (self)->get_trust_level", 
        "derived class should have provided %s attribute", 
        "gkm_trust_get_level_for_purpose", 
        "trust_get_usage", 
        "input || !n_input", 
        "G_IS_OBJECT (object)", 
        "keyrings", 
        ".gnome2", 
        "using old keyring directory: %s", 
        "unable to create keyring dir: %s", 
        "gkm_util_dispose_unref", 
        "gkm_util_return_data", 
        "return_value != NULL", 
        "n_param_values == 1", 
        "n_param_values == 3", 
        "gkm_marshal_VOID__OBJECT_ULONG", 
        "gkm_marshal_VOID__STRING_ULONG", 
        "gkm_marshal_BOOLEAN__VOID", 
        "%.*s/.#lk%p.", 
        "error writing to `%s': %s", 
        "error reading lockfile `%s'", 
        "(deadlock?) ", 
        "Oops, `%s' is already locked", 
        "cannot read lockfile", 
        "lockfile disappeared", 
        "Oops, `%s' is not locked", 
        "locking all_lockfiles_mutex failed", 
        "unlocking all_lockfiles_mutex failed", 
        "failed to create temporary file `%s': %s", 
        "can't check whether hardlinks are supported for `%s': %s", 
        "locking for `%s' done via O_EXCL", 
        "invalid size of lockfile `%s'", 
        "invalid pid %d in lockfile `%s'", 
        "error opening lockfile `%s': %s", 
        "lock not made: writing to `%s' failed: %s", 
        "lock not made: Oops: stat of tmp file failed: %s", 
        "Oops: lock already held by us", 
        "removing stale lockfile (created by %d)", 
        "waiting for lock (held by %d%s) %s...", 
        "lock not made: open(O_EXCL) of `%s' failed: %s", 
        "release_dotlock: lockfile error", 
        "release_dotlock: not our lock (pid=%d)", 
        "release_dotlock: error removing lockfile `%s'", 
        "-----BEGIN ", 
        "suff > pref", 
        "egg/egg-armor.c", 
        "-----END ", 
        "*decoded", 
        "outer_end > outer_beg", 
        "data || !n_data", 
        "n_result", 
        "length <= estimate", 
        "egg_armor_write", 
        "armor_parse_block", 
        "armor_find_begin", 
        "egg_armor_parse", 
        "joint-iso-ccitt", 
        "id-ce-authorityKeyIdentifier", 
        "AuthorityKeyIdentifier", 
        "keyIdentifier", 
        "authorityCertIssuer", 
        "GeneralNames", 
        "authorityCertSerialNumber", 
        "CertificateSerialNumber", 
        "id-ce-subjectKeyIdentifier", 
        "SubjectKeyIdentifier", 
        "id-ce-keyUsage", 
        "digitalSignature", 
        "nonRepudiation", 
        "keyEncipherment", 
        "dataEncipherment", 
        "keyAgreement", 
        "keyCertSign", 
        "cRLSign", 
        "encipherOnly", 
        "decipherOnly", 
        "id-ce-privateKeyUsagePeriod", 
        "PrivateKeyUsagePeriod", 
        "id-ce-certificatePolicies", 
        "CertificatePolicies", 
        "PolicyInformation", 
        "policyIdentifier", 
        "CertPolicyId", 
        "policyQualifiers", 
        "PolicyQualifierInfo", 
        "policyQualifierId", 
        "PolicyQualifierId", 
        "CPSuri", 
        "IA5String", 
        "UserNotice", 
        "noticeRef", 
        "NoticeReference", 
        "explicitText", 
        "DisplayText", 
        "noticeNumbers", 
        "visibleString", 
        "VisibleString", 
        "bmpString", 
        "BMPString", 
        "utf8String", 
        "UTF8String", 
        "id-ce-policyMappings", 
        "PolicyMappings", 
        "issuerDomainPolicy", 
        "subjectDomainPolicy", 
        "DirectoryString", 
        "teletexString", 
        "TeletexString", 
        "printableString", 
        "PrintableString", 
        "universalString", 
        "UniversalString", 
        "ia5String", 
        "id-ce-subjectAltName", 
        "SubjectAltName", 
        "GeneralName", 
        "AnotherName", 
        "rfc822Name", 
        "dNSName", 
        "x400Address"
    ], 
    "metadata": {
        "output": {
            "pcap": {
                "basename": "dump.pcap", 
                "sha256": "85dd5db4ce6398fecc1e9700e87293705ab3ff801972ae365166f552e2d76508", 
                "dirname": ""
            }
        }
    }
}