{
    "info": {
        "added": 1626981177.784514, 
        "started": 1627054611.477901, 
        "duration": 80, 
        "ended": 1627054692.399144, 
        "owner": null, 
        "score": 0.0, 
        "id": 2325583, 
        "category": "file", 
        "git": {
            "head": "", 
            "fetch_head": ""
        }, 
        "monitor": null, 
        "package": "elf", 
        "route": "internet", 
        "custom": null, 
        "machine": {
            "status": "stopped", 
            "name": "Ubuntu1904x644", 
            "label": "Ubuntu1904x644", 
            "platform": "linux", 
            "manager": "VirtualBox", 
            "started_on": "2021-07-23 15:36:52", 
            "shutdown_on": "2021-07-23 15:38:12"
        }, 
        "platform": "linux", 
        "version": "2.0.7", 
        "options": "procmemdump=yes,route=internet"
    }, 
    "signatures": [], 
    "target": {
        "category": "file", 
        "file": {
            "mimetype": "application/x-sharedlib", 
            "yara": [], 
            "sha1": "60de6f900f2f9062ada118b12d18ae723ecbc483", 
            "name": "Glib.so", 
            "type": "ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV), dynamically linked, BuildID[sha1]=399f65b0f54be9919f3dc0dcf182bfe4ddb9667f, stripped", 
            "sha256": "55150465c8e2d3bc3f55f9924dd4281b5caa33ff74c991f83c55d1df7fd3563f", 
            "urls": [], 
            "crc32": "80DC812A", 
            "path": "/srv/cuckoo/cwd/storage/binaries/55150465c8e2d3bc3f55f9924dd4281b5caa33ff74c991f83c55d1df7fd3563f", 
            "ssdeep": null, 
            "size": 435644, 
            "sha512": "ee680912f42c675a60ef3d9a01d45d9beb6461533cc3fca6d25e0fec51c03f341d4b8e2d39f6f951dd2c5f71644394ab499fc7043baae8af63f8384000720240", 
            "md5": "3795ff15e45df0bf8ce5ac66728dbf28"
        }, 
        "custom": null
    }, 
    "irma": {
        "status": 0, 
        "probes_finished": 16, 
        "scan_id": "00553ed5-8809-4c90-acce-9d8bc4fe6bf2", 
        "parent_file_sha256": null, 
        "name": "55150465c8e2d3bc3f55f9924dd4281b5caa33ff74c991f83c55d1df7fd3563f", 
        "scan_date": 1627075670, 
        "other_results": [], 
        "submitter": "cli", 
        "probes_total": 16, 
        "file_infos": {
            "mimetype": "ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV)", 
            "sha1": "60de6f900f2f9062ada118b12d18ae723ecbc483", 
            "tags": [], 
            "timestamp_first_scan": 1626885911.03, 
            "timestamp_last_scan": 1627075688.16, 
            "sha256": "55150465c8e2d3bc3f55f9924dd4281b5caa33ff74c991f83c55d1df7fd3563f", 
            "md5": "3795ff15e45df0bf8ce5ac66728dbf28", 
            "size": 435644
        }, 
        "probe_results": {
            "antivirus": {
                "Avast Core Security (Linux)": {
                    "status": 0, 
                    "duration": 0.01, 
                    "version": "3.0.3", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "F-Secure Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 0.03, 
                    "version": "11.10", 
                    "results": null, 
                    "virus_database_version": "2021-06-08_09"
                }, 
                "Windows Defender (Windows)": {
                    "status": 0, 
                    "duration": 0.05, 
                    "version": "1.1.18300.4", 
                    "results": null, 
                    "virus_database_version": "1.343.1173.0"
                }, 
                "Comodo Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 3.18, 
                    "version": "1.1.268025.1", 
                    "results": null, 
                    "virus_database_version": "2021-05-05"
                }, 
                "ESET NOD32 Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 4.03, 
                    "version": "4.0.96", 
                    "results": null, 
                    "virus_database_version": "6087dbf0-1e845 (2021-04-27)"
                }, 
                "GData (Windows)": {
                    "status": 0, 
                    "duration": 0.2, 
                    "version": "5.5.20197.1358", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Forticlient (Linux)": {
                    "status": 0, 
                    "duration": 3.03, 
                    "version": "unavailable", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Avira (Windows)": {
                    "status": 0, 
                    "duration": 4.53, 
                    "version": "8.3.62.226", 
                    "results": null, 
                    "virus_database_version": "8.18.36.236"
                }, 
                "Kaspersky (Windows)": {
                    "status": 0, 
                    "duration": 2.74, 
                    "version": "21.3", 
                    "results": null, 
                    "virus_database_version": "2021-07-21 19:18:00 (full)"
                }, 
                "McAfee CLI scanner (Linux)": {
                    "status": 0, 
                    "duration": 4.99, 
                    "version": "6.0.6.653", 
                    "results": null, 
                    "virus_database_version": "9966"
                }, 
                "Sophos Anti-Virus (Linux)": {
                    "status": 0, 
                    "duration": 11.59, 
                    "version": "5.74.0", 
                    "results": null, 
                    "virus_database_version": "5.83 (23 March 2021)"
                }, 
                "DrWeb Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 0.13, 
                    "version": "11.1.9.2103151924", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "ClamAV (Linux)": {
                    "status": 0, 
                    "duration": 0.04, 
                    "version": "0.103.2", 
                    "results": null, 
                    "virus_database_version": "26190"
                }, 
                "eScan Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 3.09, 
                    "version": "7.0.21", 
                    "results": null, 
                    "virus_database_version": "7.88854 (16/06/2021)"
                }, 
                "Emsisoft Commandline Scanner (Windows)": {
                    "status": 0, 
                    "duration": 0.23, 
                    "version": "2021.1.0.10606", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Bitdefender Antivirus Scanner (Linux)": {
                    "status": 0, 
                    "duration": 5.61, 
                    "version": "7.90123", 
                    "results": null, 
                    "virus_database_version": null
                }
            }
        }, 
        "path": "", 
        "result_id": "997273ff-28a4-45bc-bc37-1988aa3743fd", 
        "file_sha256": "55150465c8e2d3bc3f55f9924dd4281b5caa33ff74c991f83c55d1df7fd3563f"
    }, 
    "suricata": {
        "tls": [], 
        "files": [], 
        "alerts": [], 
        "http": []
    }, 
    "virustotal": {
        "scans": {
            "Bkav": {
                "detected": false, 
                "version": "1.3.0.9899", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Lionic": {
                "detected": false, 
                "version": "4.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "MicroWorld-eScan": {
                "detected": false, 
                "version": "14.0.409.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "FireEye": {
                "detected": false, 
                "version": "32.44.1.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "CAT-QuickHeal": {
                "detected": false, 
                "version": "14.00", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "McAfee": {
                "detected": false, 
                "version": "6.0.6.653", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Malwarebytes": {
                "detected": false, 
                "version": "4.2.2.27", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Zillya": {
                "detected": false, 
                "version": "2.0.0.4377", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Sangfor": {
                "detected": false, 
                "version": "2.9.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210416"
            }, 
            "K7AntiVirus": {
                "detected": false, 
                "version": "11.185.37311", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "K7GW": {
                "detected": false, 
                "version": "11.185.37311", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Baidu": {
                "detected": false, 
                "version": "1.0.0.2", 
                "result": null, 
                "normalized": [], 
                "update": "20190318"
            }, 
            "Cyren": {
                "detected": false, 
                "version": "6.3.0.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Symantec": {
                "detected": false, 
                "version": "1.14.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "ESET-NOD32": {
                "detected": false, 
                "version": "23388", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "TrendMicro-HouseCall": {
                "detected": false, 
                "version": "10.0.0.1040", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Avast": {
                "detected": false, 
                "version": "21.1.5827.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "ClamAV": {
                "detected": false, 
                "version": "0.103.2.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Kaspersky": {
                "detected": false, 
                "version": "21.0.1.45", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "BitDefender": {
                "detected": false, 
                "version": "7.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "NANO-Antivirus": {
                "detected": false, 
                "version": "1.0.146.25311", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "ViRobot": {
                "detected": false, 
                "version": "2014.3.20.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Rising": {
                "detected": false, 
                "version": "25.0.0.26", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Ad-Aware": {
                "detected": false, 
                "version": "3.0.21.179", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Sophos": {
                "detected": false, 
                "version": "1.0.2.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Comodo": {
                "detected": false, 
                "version": "33580", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "F-Secure": {
                "detected": false, 
                "version": "12.0.86.52", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "DrWeb": {
                "detected": false, 
                "version": "7.0.49.9080", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "VIPRE": {
                "detected": false, 
                "version": "92968", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "TrendMicro": {
                "detected": false, 
                "version": "11.0.0.1006", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "McAfee-GW-Edition": {
                "detected": false, 
                "version": "v2019.1.2+3728", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "CMC": {
                "detected": false, 
                "version": "2.10.2019.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210506"
            }, 
            "Emsisoft": {
                "detected": false, 
                "version": "2018.12.0.1641", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Avast-Mobile": {
                "detected": false, 
                "version": "210531-04", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Jiangmin": {
                "detected": false, 
                "version": "16.0.100", 
                "result": null, 
                "normalized": [], 
                "update": "20210530"
            }, 
            "Avira": {
                "detected": false, 
                "version": "8.3.3.12", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "MAX": {
                "detected": false, 
                "version": "2019.9.16.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Antiy-AVL": {
                "detected": false, 
                "version": "3.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Kingsoft": {
                "detected": false, 
                "version": "2017.9.26.565", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Microsoft": {
                "detected": false, 
                "version": "1.1.18200.4", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Gridinsoft": {
                "detected": false, 
                "version": "1.0.42.134", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Arcabit": {
                "detected": false, 
                "version": "1.0.0.886", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "SUPERAntiSpyware": {
                "detected": false, 
                "version": "5.6.0.1032", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "ZoneAlarm": {
                "detected": false, 
                "version": "1.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "GData": {
                "detected": false, 
                "version": "A:25.29823B:27.23206", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Cynet": {
                "detected": false, 
                "version": "4.0.0.27", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "AhnLab-V3": {
                "detected": false, 
                "version": "3.20.1.10133", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Acronis": {
                "detected": false, 
                "version": "1.1.1.82", 
                "result": null, 
                "normalized": [], 
                "update": "20210512"
            }, 
            "BitDefenderTheta": {
                "detected": false, 
                "version": "7.2.37796.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210525"
            }, 
            "TACHYON": {
                "detected": false, 
                "version": "2021-06-01.01", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "VBA32": {
                "detected": false, 
                "version": "5.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Zoner": {
                "detected": false, 
                "version": "0.0.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Tencent": {
                "detected": false, 
                "version": "1.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Yandex": {
                "detected": false, 
                "version": "5.5.2.24", 
                "result": null, 
                "normalized": [], 
                "update": "20210529"
            }, 
            "SentinelOne": {
                "detected": false, 
                "version": "5.1.0.5", 
                "result": null, 
                "normalized": [], 
                "update": "20210518"
            }, 
            "MaxSecure": {
                "detected": false, 
                "version": "1.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Fortinet": {
                "detected": false, 
                "version": "6.2.142.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }, 
            "Panda": {
                "detected": false, 
                "version": "4.6.4.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210531"
            }, 
            "Qihoo-360": {
                "detected": false, 
                "version": "1.0.0.1120", 
                "result": null, 
                "normalized": [], 
                "update": "20210601"
            }
        }, 
        "scan_id": "55150465c8e2d3bc3f55f9924dd4281b5caa33ff74c991f83c55d1df7fd3563f-1622526006", 
        "sha1": "60de6f900f2f9062ada118b12d18ae723ecbc483", 
        "resource": "3795ff15e45df0bf8ce5ac66728dbf28", 
        "response_code": 1, 
        "scan_date": "2021-06-01 05:40:06", 
        "permalink": "https://www.virustotal.com/gui/file/55150465c8e2d3bc3f55f9924dd4281b5caa33ff74c991f83c55d1df7fd3563f/detection/f-55150465c8e2d3bc3f55f9924dd4281b5caa33ff74c991f83c55d1df7fd3563f-1622526006", 
        "summary": {
            "positives": 0, 
            "permalink": "https://www.virustotal.com/gui/file/55150465c8e2d3bc3f55f9924dd4281b5caa33ff74c991f83c55d1df7fd3563f/detection/f-55150465c8e2d3bc3f55f9924dd4281b5caa33ff74c991f83c55d1df7fd3563f-1622526006", 
            "scan_date": "2021-06-01 05:40:06"
        }, 
        "sha256": "55150465c8e2d3bc3f55f9924dd4281b5caa33ff74c991f83c55d1df7fd3563f", 
        "normalized": [], 
        "total": 59, 
        "positives": 0, 
        "verbose_msg": "Scan finished, information embedded", 
        "md5": "3795ff15e45df0bf8ce5ac66728dbf28"
    }, 
    "network": {
        "tls": [], 
        "udp": [], 
        "dns_servers": [], 
        "http": [], 
        "icmp": [], 
        "smtp": [], 
        "tcp": [], 
        "smtp_ex": [], 
        "geoinfo": {}, 
        "mitm": [], 
        "hosts": [], 
        "pcap_sha256": "704e5e5b3234433c01fcfd1b20a306e77e985038120492dc53965c3edd38a4ea", 
        "dns": [], 
        "http_ex": [], 
        "domains": [], 
        "dead_hosts": [], 
        "irc": [], 
        "https_ex": []
    }, 
    "resubmit": {
        "resubmit_ids": []
    }, 
    "snort": {
        "alerts": []
    }, 
    "debug": {
        "action": [], 
        "dbgview": [], 
        "errors": [], 
        "log": [
            "2021-07-22 19:12:57,008 [root] DEBUG: Starting analyzer from: /tmp/tmpMCBWTN\n", 
            "2021-07-22 19:12:57,009 [root] DEBUG: Storing results at: /tmp/CRYeRtRVV\n", 
            "2021-07-22 19:12:59,230 [modules.auxiliary.filecollector] INFO: FileCollector started v0.08\n", 
            "2021-07-22 19:12:59,833 [modules.auxiliary.human] INFO: Human started v0.02\n", 
            "2021-07-22 19:13:00,347 [modules.auxiliary.screenshots] INFO: Screenshots started v0.03\n", 
            "2021-07-22 19:13:06,603 [lib.core.packages] INFO: Process startup took 6.25 seconds\n", 
            "2021-07-22 19:13:06,604 [root] INFO: Added new process to list with pid: 3840\n", 
            "2021-07-22 19:13:12,616 [root] INFO: Process with pid 3840 has terminated\n", 
            "2021-07-22 19:13:12,617 [root] INFO: Process list is empty, terminating analysis.\n", 
            "2021-07-22 19:13:15,621 [lib.core.packages] INFO: Package requested stop\n", 
            "2021-07-22 19:13:15,622 [lib.core.packages] WARNING: Exception uploading log: [Errno 3] No such process\n"
        ], 
        "cuckoo": [
            "2021-07-23 15:36:51,952 [cuckoo.core.scheduler] INFO: Task #2325583: acquired machine Ubuntu1904x644 (label=Ubuntu1904x644)\n", 
            "2021-07-23 15:36:51,953 [cuckoo.core.resultserver] DEBUG: Now tracking machine 192.168.168.104 for task #2325583\n", 
            "2021-07-23 15:36:52,084 [cuckoo.auxiliary.sniffer] INFO: Started sniffer with PID 3677286 (interface=vboxnet0, host=192.168.168.104)\n", 
            "2021-07-23 15:36:52,208 [cuckoo.machinery.virtualbox] DEBUG: Starting vm Ubuntu1904x644\n", 
            "2021-07-23 15:36:52,607 [cuckoo.machinery.virtualbox] DEBUG: Restoring virtual machine Ubuntu1904x644 to Snapshot\n", 
            "2021-07-23 15:37:04,098 [cuckoo.core.guest] INFO: Starting analysis #2325583 on guest (id=Ubuntu1904x644, ip=192.168.168.104)\n", 
            "2021-07-23 15:37:05,102 [cuckoo.core.guest] DEBUG: Ubuntu1904x644: not ready yet\n", 
            "2021-07-23 15:37:06,109 [cuckoo.core.guest] DEBUG: Ubuntu1904x644: not ready yet\n", 
            "2021-07-23 15:37:07,116 [cuckoo.core.guest] DEBUG: Ubuntu1904x644: not ready yet\n", 
            "2021-07-23 15:37:07,162 [cuckoo.core.guest] DEBUG: Ubuntu1904x644: not ready yet\n", 
            "2021-07-23 15:37:10,180 [cuckoo.core.guest] INFO: Guest is running Cuckoo Agent 0.10 (id=Ubuntu1904x644, ip=192.168.168.104)\n", 
            "2021-07-23 15:37:10,192 [cuckoo.core.guest] DEBUG: Uploading analyzer to guest (id=Ubuntu1904x644, ip=192.168.168.104, monitor=latest, size=70098)\n", 
            "2021-07-23 15:37:11,350 [cuckoo.core.resultserver] DEBUG: Task #2325583: live log analysis.log initialized.\n", 
            "2021-07-23 15:37:20,800 [cuckoo.core.resultserver] DEBUG: Task #2325583: File upload for 'shots/0001.jpg'\n", 
            "2021-07-23 15:37:20,832 [cuckoo.core.resultserver] DEBUG: Task #2325583 uploaded file length: 171514\n", 
            "2021-07-23 15:37:25,331 [cuckoo.core.guest] DEBUG: Ubuntu1904x644: analysis #2325583 still processing\n", 
            "2021-07-23 15:37:29,989 [cuckoo.core.resultserver] DEBUG: Task #2325583: File upload for 'logs/all.stap'\n", 
            "2021-07-23 15:37:29,991 [cuckoo.core.resultserver] DEBUG: Task #2325583 uploaded file length: 0\n", 
            "2021-07-23 15:37:40,395 [cuckoo.core.guest] DEBUG: Ubuntu1904x644: analysis #2325583 still processing\n", 
            "2021-07-23 15:37:52,434 [cuckoo.core.guest] INFO: Ubuntu1904x644: end of analysis reached!\n", 
            "2021-07-23 15:37:52,449 [cuckoo.core.plugins] DEBUG: Stopped auxiliary module: Redsocks\n", 
            "2021-07-23 15:37:52,527 [cuckoo.core.plugins] DEBUG: Stopped auxiliary module: Sniffer\n", 
            "2021-07-23 15:38:03,956 [cuckoo.machinery.virtualbox] INFO: Successfully generated memory dump for virtual machine with label Ubuntu1904x644 to path /srv/cuckoo/cwd/storage/analyses/2325583/memory.dmp\n", 
            "2021-07-23 15:38:03,957 [cuckoo.machinery.virtualbox] DEBUG: Stopping vm Ubuntu1904x644\n", 
            "2021-07-23 15:38:12,092 [cuckoo.core.resultserver] DEBUG: Stopped tracking machine 192.168.168.104 for task #2325583\n", 
            "2021-07-23 15:38:12,094 [cuckoo.core.resultserver] DEBUG: Cancel <Context for LOG> for task 2325583\n", 
            "2021-07-23 15:38:12,215 [cuckoo.core.scheduler] DEBUG: Released database task #2325583\n", 
            "2021-07-23 15:38:12,300 [cuckoo.core.scheduler] INFO: Task #2325583: analysis procedure completed\n"
        ]
    }, 
    "strings": [
        "0o[YXr", 
        "eRU6[I", 
        "a/WS}cHv", 
        "__gmon_start__", 
        "_ITM_deregisterTMCloneTable", 
        "_ITM_registerTMCloneTable", 
        "__cxa_finalize", 
        "_Jv_RegisterClasses", 
        "PL_thr_key", 
        "pthread_getspecific", 
        "Perl_sv_2pv_flags", 
        "g_filename_display_basename", 
        "Perl_sv_newmortal", 
        "Perl_sv_setpv", 
        "Perl_croak_xs_usage", 
        "g_filename_display_name", 
        "Perl_sv_2pvutf8", 
        "g_filename_from_uri", 
        "Perl_newSVpv", 
        "Perl_sv_2mortal", 
        "newSVGChar", 
        "Perl_block_gimme", 
        "gperl_croak_gerror", 
        "Perl_stack_grow", 
        "_gperl_call_XS", 
        "Perl_markstack_grow", 
        "gperl_alloc_temp", 
        "Perl_newSV", 
        "memset", 
        "g_return_if_fail_warning", 
        "gperl_filename_from_sv", 
        "g_filename_from_utf8", 
        "memcpy", 
        "Perl_mg_set", 
        "gperl_sv_from_filename", 
        "g_filename_to_utf8", 
        "Perl_sv_setsv_flags", 
        "gperl_str_eq", 
        "gperl_str_hash", 
        "gperl_argv_update", 
        "Perl_get_av", 
        "Perl_av_clear", 
        "g_hash_table_lookup", 
        "Perl_av_push", 
        "gperl_argv_free", 
        "g_strfreev", 
        "g_hash_table_destroy", 
        "gperl_sv_is_defined", 
        "Perl_mg_find", 
        "Perl_mg_get", 
        "gperl_argv_new", 
        "g_malloc", 
        "Perl_get_sv", 
        "Perl_av_len", 
        "g_malloc0_n", 
        "g_hash_table_new", 
        "g_strdup", 
        "g_hash_table_insert", 
        "Perl_av_fetch", 
        "gperl_format_variable_for_output", 
        "Perl_sv_len", 
        "Perl_form_nocontext", 
        "g_filename_to_uri", 
        "SvGChar", 
        "Perl_croak_nocontext", 
        "gperl_hv_take_sv", 
        "Perl_hv_common_key_len", 
        "Perl_sv_free", 
        "_gperl_set_master_interp", 
        "g_mutex_lock", 
        "g_mutex_unlock", 
        "_gperl_get_master_interp", 
        "boot_Glib", 
        "Perl_xs_handshake", 
        "Perl_newXS_flags", 
        "Perl_newXS_deffile", 
        "PL_curinterp", 
        "boot_Glib__Utils", 
        "boot_Glib__Error", 
        "boot_Glib__Log", 
        "boot_Glib__Type", 
        "boot_Glib__Boxed", 
        "boot_Glib__Object", 
        "boot_Glib__Signal", 
        "boot_Glib__Closure", 
        "boot_Glib__MainLoop", 
        "boot_Glib__ParamSpec", 
        "boot_Glib__IO__Channel", 
        "boot_Glib__KeyFile", 
        "boot_Glib__Option", 
        "boot_Glib__BookmarkFile", 
        "boot_Glib__Variant", 
        "Perl_xs_boot_epilog", 
        "g_str_equal", 
        "gperl_register_error_domain", 
        "gperl_set_isa", 
        "g_direct_equal", 
        "g_direct_hash", 
        "g_hash_table_new_full", 
        "gperl_fundamental_type_from_package", 
        "Perl_push_scope", 
        "Perl_save_sptr", 
        "Perl_eval_pv", 
        "g_quark_from_string", 
        "Perl_pop_scope", 
        "Perl_gv_add_by_type", 
        "gperl_sv_from_gerror", 
        "Perl_newSV_type", 
        "g_quark_to_string", 
        "Perl_newSViv", 
        "gperl_convert_back_enum", 
        "Perl_mess_nocontext", 
        "Perl_newSVsv", 
        "Perl_gv_stashpv", 
        "Perl_newRV_noinc", 
        "Perl_sv_bless", 
        "Perl_sv_utf8_upgrade_flags_grow", 
        "g_hash_table_foreach", 
        "gperl_convert_enum", 
        "g_quark_try_string", 
        "Perl_warn_nocontext", 
        "gperl_gerror_from_sv", 
        "Perl_sv_reftype", 
        "Perl_sv_2iv_flags", 
        "g_error_new_literal", 
        "Perl_sv_2bool_flags", 
        "Perl_looks_like_number", 
        "g_error_matches", 
        "g_error_free", 
        "gperl_bookmark_file_error_get_type", 
        "g_bookmark_file_error_quark", 
        "gperl_convert_error_get_type", 
        "g_convert_error_quark", 
        "gperl_file_error_get_type", 
        "g_file_error_quark", 
        "gperl_key_file_error_get_type", 
        "g_key_file_error_quark", 
        "gperl_io_channel_error_get_type", 
        "g_io_channel_error_quark", 
        "gperl_markup_error_get_type", 
        "g_markup_error_quark", 
        "gperl_shell_error_get_type", 
        "g_shell_error_quark", 
        "gperl_spawn_error_get_type", 
        "g_spawn_error_quark", 
        "gperl_thread_error_get_type", 
        "g_thread_error_quark", 
        "gperl_variant_parse_error_get_type", 
        "g_variant_parse_error_quark", 
        "strlen", 
        "g_markup_escape_text", 
        "Perl_sv_2uv_flags", 
        "g_assertion_message_expr", 
        "glib_micro_version", 
        "glib_minor_version", 
        "glib_major_version", 
        "Perl_sv_setuv_mg", 
        "g_strsignal", 
        "g_strerror", 
        "g_set_application_name", 
        "g_get_application_name", 
        "g_get_system_data_dirs", 
        "g_get_language_names", 
        "g_get_system_config_dirs", 
        "g_get_user_cache_dir", 
        "g_get_user_data_dir", 
        "g_get_user_config_dir", 
        "g_get_tmp_dir", 
        "g_get_user_name", 
        "g_get_home_dir", 
        "g_get_real_name", 
        "SvGUserDirectory", 
        "gperl_user_directory_get_type", 
        "g_get_user_special_dir", 
        "newSVGUserDirectory", 
        "gperl_register_fundamental", 
        "gperl_log_handler", 
        "pthread_setspecific", 
        "gperl_callback_invoke", 
        "gperl_log_level_flags_get_type", 
        "gperl_callback_new", 
        "g_log_default_handler", 
        "g_log_set_default_handler", 
        "gperl_callback_destroy", 
        "Perl_sv_2cv", 
        "Perl_get_cv", 
        "Perl_newRV", 
        "g_log_remove_handler", 
        "newSVGLogLevelFlags", 
        "gperl_convert_back_flags", 
        "SvGLogLevelFlags", 
        "gperl_convert_flags", 
        "g_log_set_always_fatal", 
        "g_log_set_fatal_mask", 
        "g_log_set_handler", 
        "gperl_handle_logs_for", 
        "gperl_sv_free", 
        "Perl_sv_free2", 
        "gperl_sv_copy", 
        "g_signal_query", 
        "Perl_newSVpvf_nocontext", 
        "gperl_object_stash_from_type", 
        "Perl_savetmps", 
        "gperl_sv_from_value", 
        "Perl_call_method", 
        "gperl_run_exception_handlers", 
        "Perl_free_tmps", 
        "gperl_value_from_sv", 
        "gperl_new_object", 
        "Perl_call_sv", 
        "g_type_class_peek_parent", 
        "newSVGSignalInvocationHint", 
        "newSVGParamSpec", 
        "g_param_spec_get_name", 
        "_gperl_fetch_wrapper_key", 
        "g_param_value_set_default", 
        "gperl_type_class", 
        "g_type_fundamental", 
        "g_type_get_qdata", 
        "g_type_class_ref", 
        "g_type_set_qdata", 
        "g_quark_from_static_string", 
        "gperl_register_fundamental_alias", 
        "g_type_name", 
        "Perl_newSVuv", 
        "g_type_from_name", 
        "gperl_fundamental_package_from_type", 
        "gperl_fundamental_wrapper_class_from_type", 
        "gperl_try_convert_enum", 
        "Perl_sv_catpv", 
        "gperl_convert_back_enum_pass_unknown", 
        "gperl_try_convert_flag", 
        "gperl_convert_flag_one", 
        "Perl_sv_derived_from", 
        "Perl_sv_setiv_mg", 
        "g_type_is_a", 
        "g_strconcat", 
        "g_hash_table_replace", 
        "g_str_hash", 
        "gperl_register_fundamental_full", 
        "g_flags_register_static", 
        "g_enum_register_static", 
        "gperl_prepend_isa", 
        "Perl_av_unshift", 
        "Perl_av_store", 
        "gperl_type_from_package", 
        "gperl_object_type_from_package", 
        "gperl_boxed_type_from_package", 
        "gperl_param_spec_type_from_package", 
        "g_type_test_flags", 
        "g_signal_list_ids", 
        "newSVGSignalQuery", 
        "g_type_class_unref", 
        "g_type_query", 
        "g_type_register_static", 
        "gperl_register_object", 
        "gperl_object_package_from_type", 
        "g_slist_prepend", 
        "g_type_parent", 
        "g_slist_free", 
        "gperl_package_from_type", 
        "gperl_boxed_package_from_type", 
        "gperl_param_spec_package_from_type", 
        "g_type_interfaces", 
        "g_rec_mutex_lock", 
        "g_slist_delete_link", 
        "g_rec_mutex_unlock", 
        "g_hash_table_remove", 
        "gperl_sv_get_type", 
        "g_boxed_type_register_static", 
        "SvGInt64", 
        "g_ascii_strtoll", 
        "newSVGInt64", 
        "__sprintf_chk", 
        "SvGUInt64", 
        "g_ascii_strtoull", 
        "newSVGUInt64", 
        "gperl_signal_class_closure_get", 
        "g_closure_new_simple", 
        "g_closure_set_meta_marshal", 
        "g_closure_ref", 
        "g_closure_sink", 
        "SvGParamSpec", 
        "g_object_class_install_property", 
        "Perl_hv_iterinit", 
        "Perl_hv_iternext_flags", 
        "Perl_hv_iterkey", 
        "g_signal_lookup", 
        "Perl_hv_iterval", 
        "gperl_closure_new", 
        "g_signal_override_class_closure", 
        "g_malloc0", 
        "g_signal_newv", 
        "SvGSignalFlags", 
        "g_malloc_n", 
        "g_gtype_get_type", 
        "gperl_register_boxed", 
        "gperl_spawn_flags_get_type", 
        "g_boxed_free", 
        "Perl_sv_setref_pv", 
        "g_boxed_copy", 
        "g_string_free", 
        "gperl_register_boxed_alias", 
        "gperl_register_boxed_synonym", 
        "gperl_default_boxed_wrapper_class", 
        "gperl_new_boxed", 
        "Perl_sv_2pvbyte", 
        "g_bytes_new", 
        "g_bytes_get_type", 
        "gperl_new_boxed_copy", 
        "gperl_get_boxed_check", 
        "g_bytes_compare", 
        "g_bytes_equal", 
        "g_bytes_hash", 
        "g_bytes_get_size", 
        "g_bytes_get_data", 
        "g_gstring_get_type", 
        "g_strv_get_type", 
        "g_error_get_type", 
        "g_object_ref", 
        "g_object_steal_qdata", 
        "g_object_set_qdata_full", 
        "g_object_ref_sink", 
        "g_object_unref", 
        "_gperl_attach_mg", 
        "Perl_sv_magicext", 
        "_gperl_find_mg", 
        "_gperl_remove_mg", 
        "Perl_safesysfree", 
        "gperl_register_object_alias", 
        "gperl_register_sink_func", 
        "g_array_prepend_vals", 
        "g_array_new", 
        "gperl_object_set_no_warn_unreg_subclass", 
        "Perl_av_shift", 
        "Perl_av_undef", 
        "g_object_class_find_property", 
        "g_type_check_instance_cast", 
        "g_value_init", 
        "g_type_check_instance_is_fundamentally_a", 
        "g_object_get_qdata", 
        "g_object_newv", 
        "g_value_unset", 
        "gperl_get_object", 
        "gperl_get_object_check", 
        "g_object_get_data", 
        "g_object_set_data", 
        "g_type_default_interface_ref", 
        "g_type_default_interface_unref", 
        "g_object_interface_find_property", 
        "g_object_class_list_properties", 
        "g_object_interface_list_properties", 
        "g_object_thaw_notify", 
        "g_object_freeze_notify", 
        "g_object_notify", 
        "g_object_set_property", 
        "g_object_get_property", 
        "_gperl_sv_from_value_internal", 
        "gperl_object_check_type", 
        "g_initially_unowned_get_type", 
        "g_value_set_object", 
        "g_value_set_schar", 
        "g_value_set_uchar", 
        "g_value_set_enum", 
        "g_value_set_flags", 
        "g_value_set_long", 
        "g_value_set_ulong", 
        "g_value_set_string", 
        "g_value_set_int", 
        "g_value_set_uint", 
        "g_value_set_boolean", 
        "g_value_set_int64", 
        "g_value_set_uint64", 
        "g_value_set_float", 
        "g_value_set_double", 
        "g_type_check_value_holds", 
        "g_value_set_boxed", 
        "g_value_set_pointer", 
        "g_value_set_param", 
        "Perl_sv_2nv_flags", 
        "g_value_set_static_boxed", 
        "g_value_set_gtype", 
        "g_value_get_object", 
        "g_value_get_schar", 
        "g_value_get_uchar", 
        "g_value_get_boolean", 
        "g_value_get_int", 
        "g_value_get_uint", 
        "g_value_get_long", 
        "g_value_get_ulong", 
        "g_value_get_int64", 
        "g_value_get_uint64", 
        "g_value_get_enum", 
        "g_value_get_flags", 
        "g_value_get_float", 
        "Perl_newSVnv", 
        "g_value_get_double", 
        "g_value_get_string", 
        "g_value_get_pointer", 
        "g_value_get_boxed", 
        "g_value_get_param", 
        "g_value_get_gtype", 
        "g_value_dup_boxed", 
        "boot_Glib__Value", 
        "gperl_closure_new_with_marshaller", 
        "g_closure_add_invalidate_notifier", 
        "g_type_value_table_peek", 
        "gperl_install_exception_handler", 
        "g_slist_append", 
        "exception_handler_free", 
        "g_closure_unref", 
        "gperl_remove_exception_handler", 
        "g_closure_invoke", 
        "g_slice_alloc", 
        "g_cond_init", 
        "g_mutex_init", 
        "g_idle_add", 
        "g_cond_wait", 
        "g_cond_clear", 
        "g_slice_free1", 
        "g_mutex_clear", 
        "g_cond_signal", 
        "g_strdelimit", 
        "g_slist_remove", 
        "g_signal_get_invocation_hint", 
        "g_signal_chain_from_overridden", 
        "g_signal_name", 
        "g_signal_handler_is_connected", 
        "g_signal_handler_disconnect", 
        "g_signal_handler_unblock", 
        "g_signal_handler_block", 
        "g_signal_stop_emission_by_name", 
        "g_signal_parse_name", 
        "g_signal_remove_emission_hook", 
        "g_signal_add_emission_hook", 
        "g_signal_emitv", 
        "g_signal_handlers_unblock_matched", 
        "g_signal_handlers_block_matched", 
        "strcmp", 
        "g_signal_handlers_disconnect_matched", 
        "newSVGSignalFlags", 
        "gperl_signal_flags_get_type", 
        "gperl_signal_set_marshaller_for", 
        "gperl_signal_connect", 
        "g_signal_connect_closure", 
        "gperl_connect_flags_get_type", 
        "g_child_watch_add_full", 
        "g_io_condition_get_type", 
        "g_io_channel_unix_new", 
        "g_io_create_watch", 
        "g_source_set_closure", 
        "g_source_attach", 
        "g_source_unref", 
        "g_io_channel_unref", 
        "g_source_set_priority", 
        "g_idle_source_new", 
        "g_timeout_source_new_seconds", 
        "g_timeout_source_new", 
        "g_source_remove", 
        "g_main_loop_get_context", 
        "g_main_context_ref", 
        "g_main_loop_is_running", 
        "g_main_loop_quit", 
        "g_main_loop_run", 
        "g_main_loop_unref", 
        "g_main_loop_new", 
        "g_main_loop_ref", 
        "g_main_context_is_owner", 
        "g_main_context_pending", 
        "g_main_context_iteration", 
        "g_main_context_default", 
        "g_main_context_unref", 
        "g_main_context_new", 
        "g_main_depth", 
        "g_source_new", 
        "g_io_channel_unix_get_fd", 
        "g_io_channel_get_type", 
        "newSVGParamFlags", 
        "gperl_param_flags_get_type", 
        "SvGParamFlags", 
        "gperl_register_param_spec", 
        "g_hash_table_find", 
        "g_param_spec_ref", 
        "g_param_spec_sink", 
        "g_param_spec_get_blurb", 
        "g_param_spec_gtype", 
        "g_param_spec_boxed", 
        "g_param_spec_object", 
        "g_param_spec_param", 
        "g_param_spec_string", 
        "g_param_spec_double", 
        "g_param_spec_float", 
        "g_param_spec_flags", 
        "g_param_spec_enum", 
        "g_utf8_get_char", 
        "g_param_spec_unichar", 
        "g_param_spec_boolean", 
        "g_param_spec_uint64", 
        "g_param_spec_ulong", 
        "g_param_spec_uchar", 
        "g_param_spec_uint", 
        "g_param_spec_int64", 
        "g_param_spec_long", 
        "g_param_spec_char", 
        "g_param_spec_int", 
        "g_param_spec_types", 
        "Perl_sv_setnv_mg", 
        "g_param_values_cmp", 
        "g_param_value_validate", 
        "g_param_spec_get_redirect_target", 
        "g_unichar_to_utf8", 
        "g_param_spec_override", 
        "g_param_spec_get_nick", 
        "g_param_spec_unref", 
        "newSVGKeyFileFlags", 
        "gperl_key_file_flags_get_type", 
        "SvGKeyFileFlags", 
        "newSVGKeyFile", 
        "g_key_file_new", 
        "SvGKeyFile", 
        "g_key_file_remove_group", 
        "g_key_file_remove_key", 
        "g_key_file_remove_comment", 
        "g_key_file_get_comment", 
        "g_key_file_set_comment", 
        "g_key_file_set_double_list", 
        "g_key_file_set_string_list", 
        "g_key_file_set_boolean_list", 
        "g_key_file_set_integer_list", 
        "g_key_file_get_double_list", 
        "g_key_file_get_string_list", 
        "g_key_file_get_boolean_list", 
        "g_key_file_get_integer_list", 
        "g_key_file_set_locale_string_list", 
        "g_key_file_get_locale_string_list", 
        "g_key_file_set_locale_string", 
        "g_key_file_get_locale_string", 
        "g_key_file_get_double", 
        "g_key_file_get_string", 
        "g_key_file_get_integer", 
        "g_key_file_get_boolean", 
        "g_key_file_set_double", 
        "g_key_file_set_string", 
        "g_key_file_set_integer", 
        "g_key_file_set_boolean", 
        "g_key_file_set_value", 
        "g_key_file_get_value", 
        "g_key_file_has_key", 
        "g_key_file_has_group", 
        "g_key_file_get_keys", 
        "g_key_file_get_groups", 
        "g_key_file_get_start_group", 
        "g_key_file_to_data", 
        "g_key_file_load_from_data_dirs", 
        "g_key_file_load_from_dirs", 
        "g_key_file_load_from_data", 
        "g_key_file_load_from_file", 
        "g_key_file_set_list_separator", 
        "g_key_file_free", 
        "g_option_group_free", 
        "g_value_dup_string", 
        "Perl_sv_setnv", 
        "Perl_sv_setiv", 
        "g_slist_foreach", 
        "gperl_option_arg_get_type", 
        "gperl_option_flags_get_type", 
        "gperl_option_context_get_type", 
        "g_option_context_free", 
        "g_option_context_parse", 
        "g_option_group_new", 
        "g_option_group_set_parse_hooks", 
        "g_option_group_add_entries", 
        "g_option_group_set_translation_domain", 
        "g_option_context_set_main_group", 
        "g_option_context_get_ignore_unknown_options", 
        "g_option_context_set_ignore_unknown_options", 
        "g_option_context_get_help_enabled", 
        "g_option_context_set_help_enabled", 
        "g_option_context_new", 
        "gperl_option_group_get_type", 
        "g_option_group_set_translate_func", 
        "g_option_context_get_main_group", 
        "g_option_context_add_group", 
        "newSVGBookmarkFile", 
        "g_bookmark_file_new", 
        "SvGBookmarkFile", 
        "g_bookmark_file_set_visited", 
        "g_bookmark_file_set_modified", 
        "g_bookmark_file_set_added", 
        "g_bookmark_file_get_modified", 
        "g_bookmark_file_get_added", 
        "g_bookmark_file_get_visited", 
        "g_bookmark_file_get_icon", 
        "g_bookmark_file_set_icon", 
        "g_bookmark_file_get_is_private", 
        "g_bookmark_file_set_is_private", 
        "g_bookmark_file_get_app_info", 
        "g_bookmark_file_set_app_info", 
        "g_bookmark_file_get_applications", 
        "g_bookmark_file_remove_application", 
        "g_bookmark_file_has_application", 
        "g_bookmark_file_add_application", 
        "g_bookmark_file_remove_group", 
        "g_bookmark_file_get_groups", 
        "g_bookmark_file_has_group", 
        "g_bookmark_file_add_group", 
        "g_bookmark_file_set_groups", 
        "g_bookmark_file_get_mime_type", 
        "g_bookmark_file_set_mime_type", 
        "g_bookmark_file_get_description", 
        "g_bookmark_file_set_description", 
        "g_bookmark_file_get_title", 
        "g_bookmark_file_set_title", 
        "g_bookmark_file_get_uris", 
        "g_bookmark_file_get_size", 
        "g_bookmark_file_move_item", 
        "g_bookmark_file_remove_item", 
        "g_bookmark_file_has_item", 
        "g_bookmark_file_to_file", 
        "g_bookmark_file_to_data", 
        "g_bookmark_file_load_from_data_dirs", 
        "g_bookmark_file_load_from_data", 
        "g_bookmark_file_load_from_file", 
        "g_bookmark_file_free", 
        "g_variant_ref", 
        "g_variant_take_ref", 
        "g_variant_type_new", 
        "g_value_set_variant", 
        "g_value_get_variant", 
        "g_variant_type_string_scan", 
        "Perl_newSVpvn", 
        "g_variant_type_string_is_valid", 
        "g_variant_is_signature", 
        "g_variant_is_object_path", 
        "newSVGVariant", 
        "newSVGVariant_noinc", 
        "g_variant_new_bytestring", 
        "g_variant_new_signature", 
        "g_variant_new_object_path", 
        "g_variant_new_string", 
        "g_variant_new_double", 
        "g_variant_new_handle", 
        "g_variant_new_uint64", 
        "g_variant_new_int64", 
        "g_variant_new_uint32", 
        "g_variant_new_int32", 
        "g_variant_new_uint16", 
        "g_variant_new_int16", 
        "g_variant_new_byte", 
        "g_variant_new_boolean", 
        "SvGVariant", 
        "g_variant_unref", 
        "g_variant_byteswap", 
        "g_variant_is_normal_form", 
        "g_variant_get_normal_form", 
        "g_variant_compare", 
        "g_variant_equal", 
        "g_variant_hash", 
        "g_variant_print", 
        "g_variant_get_size", 
        "g_variant_get_child_value", 
        "g_variant_n_children", 
        "g_variant_get_maybe", 
        "g_variant_new_dict_entry", 
        "g_variant_new_tuple", 
        "g_variant_get_bytestring", 
        "g_variant_get_string", 
        "g_variant_get_variant", 
        "g_variant_get_double", 
        "g_variant_get_handle", 
        "g_variant_get_uint64", 
        "g_variant_get_int64", 
        "g_variant_get_uint32", 
        "g_variant_get_int32", 
        "g_variant_get_uint16", 
        "g_variant_get_int16", 
        "g_variant_get_byte", 
        "g_variant_get_boolean", 
        "g_variant_new_variant", 
        "g_variant_classify", 
        "Perl_sv_setpvn", 
        "g_variant_is_container", 
        "g_variant_get_type_string", 
        "newSVGVariantType", 
        "g_variant_type_get_gtype", 
        "g_variant_get_type", 
        "newSVGVariantType_own", 
        "SvGVariantType", 
        "g_variant_type_new_dict_entry", 
        "g_variant_type_new_tuple", 
        "g_variant_type_new_maybe", 
        "g_variant_type_new_array", 
        "g_variant_type_value", 
        "g_variant_type_key", 
        "g_variant_type_n_items", 
        "g_variant_type_next", 
        "g_variant_type_first", 
        "g_variant_type_element", 
        "g_variant_type_is_subtype_of", 
        "g_variant_type_equal", 
        "g_variant_type_hash", 
        "g_variant_type_is_variant", 
        "g_variant_type_is_dict_entry", 
        "g_variant_type_is_tuple", 
        "g_variant_type_is_array", 
        "g_variant_type_is_maybe", 
        "g_variant_type_is_basic", 
        "g_variant_type_is_container", 
        "g_variant_type_is_definite", 
        "g_variant_type_peek_string", 
        "g_variant_type_get_string_length", 
        "g_variant_parse", 
        "g_variant_lookup_value", 
        "g_variant_new_array", 
        "g_variant_new_maybe", 
        "g_variant_is_of_type", 
        "g_intern_static_string", 
        "gperl_io_error_get_type", 
        "libgobject-2.0.so.0", 
        "libglib-2.0.so.0", 
        "libc.so.6", 
        "__stack_chk_fail", 
        "_edata", 
        "__bss_start", 
        "GLIBC_2.3.4", 
        "GLIBC_2.1.3", 
        "GLIBC_2.4", 
        "GLIBC_2.0", 
        "T$ RUP", 
        "T$(RWP", 
        "T$(RRP", 
        "t$ WWP", 
        "|$ Hu\u001f", 
        "T$ RRP", 
        "T$ RRP", 
        "T$ RRP", 
        "T$ RRP", 
        "T$ RRP", 
        "T$ RRP", 
        "9D$$t5", 
        "L$(QQP", 
        "T$ RRP", 
        "D$(ZYWP", 
        "D$(YZWP", 
        "D$(^ZWP", 
        "D$$XZjL", 
        "T$$RPV", 
        "L$$QPR", 
        "T$ RUPW", 
        "T$$RWQP", 
        "T$/RUP", 
        "filename", 
        "nbytes > 0", 
        "`%.20s...'", 
        "v5.26.0", 
        "Glib.c", 
        "Glib::filename_from_unicode", 
        "Glib::filename_to_unicode", 
        "Glib::filename_from_uri", 
        "Glib::filename_to_uri", 
        "Glib::filename_display_name", 
        "class_or_filename, filename=NULL", 
        "Usage: Glib::filename_to_uri (filename, hostname)", 
        " -or-  Glib->filename_to_uri (filename, hostname)", 
        "  wrong number of arguments", 
        "Glib::filename_display_basename", 
        "gperl_alloc_temp", 
        "Glib::Error", 
        "domain != 0", 
        "package != NULL", 
        "package, enum_package", 
        "$_ = lc $_; s/::/-/g;", 
        "location", 
        "class, code, message", 
        "error, domain, code", 
        "err != NULL", 
        "GError.c", 
        "Glib::Error::new", 
        "Glib::Error::throw", 
        "Glib::Error::register", 
        "Glib::Error::matches", 
        "Glib::BookmarkFile::Error", 
        "Glib::Convert::Error", 
        "Glib::File::Error", 
        "Glib::KeyFile::Error", 
        "Glib::IOChannel::Error", 
        "Glib::Markup::Error", 
        "Glib::Shell::Error", 
        "Glib::Spawn::Error", 
        "Glib::Thread::Error", 
        "Glib::Variant::ParseError", 
        "%s is not registered as a Glib enum", 
        "%s is neither a Glib::Error derivative nor a valid GError domain", 
        "expecting undef or a hash reference for a GError", 
        "key 'domain' not found in plain hash for GError", 
        "%s is not a valid quark, did you remember to register an error domain?", 
        "error hash contains neither a 'value' nor 'code' key; no error valid error code found", 
        "error has contains no error message", 
        "%s is not a valid error domain", 
        "%s is not a registered error domain", 
        "gperl_croak_gerror", 
        "gperl_register_error_domain", 
        "GUtils.xs", 
        "signum", 
        "directory", 
        "GUtils.c", 
        "Glib::get_home_dir", 
        "Glib::get_real_name", 
        "Glib::get_tmp_dir", 
        "Glib::get_user_name", 
        "Glib::get_user_cache_dir", 
        "Glib::get_user_config_dir", 
        "Glib::get_user_data_dir", 
        "Glib::get_language_names", 
        "Glib::get_system_config_dirs", 
        "Glib::get_system_data_dirs", 
        "Glib::get_user_special_dir", 
        "Glib::get_application_name", 
        "Glib::set_application_name", 
        "Glib::strerror", 
        "Glib::strsignal", 
        "Glib::MAJOR_VERSION", 
        "Glib::MICRO_VERSION", 
        "Glib::MINOR_VERSION", 
        "Glib::major_version", 
        "Glib::micro_version", 
        "Glib::minor_version", 
        "Glib::GET_VERSION_INFO", 
        "Glib::CHECK_VERSION", 
        "Glib::Markup::escape_text", 
        "Glib::UserDirectory", 
        "class, required_major, required_minor, required_micro", 
        "XS_Glib_get_user_name", 
        "XS_Glib_get_user_data_dir", 
        "XS_Glib_get_system_data_dirs", 
        "XS_Glib_MAJOR_VERSION", 
        "(NULL) message", 
        "Message", 
        "(recursed) ", 
        "GLog.xs", 
        "%s%s%s %s**: %s", 
        "class, domain, message", 
        "Glib::Log::default_handler", 
        "class, log_domain, handler_id", 
        "class, fatal_mask", 
        "class, log_domain, fatal_mask", 
        "GLog.c", 
        "Glib::Log::set_handler", 
        "Glib::Log::remove_handler", 
        "Glib::log", 
        "Glib::Log::set_fatal_mask", 
        "Glib::Log::set_always_fatal", 
        "Glib::critical", 
        "Glib::error", 
        "Glib::message", 
        "Glib::warning", 
        "GLib-GObject", 
        "Glib::LogLevelFlags", 
        "panic: pthread_setspecific (%d) [%s:%d]", 
        "class, log_func, user_data=NULL", 
        "class, log_domain, log_level, message", 
        "log_domain, log_level, message, ...", 
        "class, log_domain, log_levels, log_func, user_data=NULL", 
        "Glib::Log::set_default_handler", 
        "GType.xs", 
        "invocation_hint != NULL", 
        "n_param_values != 0", 
        "stash != NULL", 
        "INIT_INSTANCE", 
        "FINALIZE_INSTANCE", 
        "SET_PROPERTY", 
        "GET_PROPERTY", 
        "GPerlStaticTypeClass", 
        "G_TYPE_IS_OBJECT (type)", 
        "class != NULL", 
        "G_TYPE_IS_ENUM (enum_type)", 
        "G_TYPE_IS_FLAGS (flags_type)", 
        "class, package", 
        "Glib::Flags", 
        "a, b, swap", 
        "f, ...", 
        "class, a", 
        "class, name, ...", 
        "invalid type flag name", 
        "__gperl_type_reg", 
        "_ADD_INTERFACE", 
        "_INSTALL_OVERRIDES", 
        "Glib::Type::register_object", 
        "Glib::Type::register_enum", 
        "Glib::Type::register_flags", 
        "class, cname", 
        "INIT_BASE", 
        "GPerlSV", 
        "Glib::ParamSpec", 
        "param_types", 
        "class_closure", 
        "how did this happen?", 
        "return_type", 
        "accumulator", 
        "accu_data", 
        "failed to create signal %s", 
        "GType.c", 
        "Glib::Type::register", 
        "Glib::Type::list_ancestors", 
        "Glib::Type::list_interfaces", 
        "Glib::Type::list_signals", 
        "Glib::Type::list_values", 
        "Glib::Flags::new", 
        "Glib::Flags::bool", 
        "Glib::Flags::as_arrayref", 
        "Glib::Flags::eq", 
        "Glib::Flags::ge", 
        "Glib::Flags::ne", 
        "Glib::Flags::all", 
        "Glib::Flags::intersect", 
        "Glib::Flags::sub", 
        "Glib::Flags::union", 
        "Glib::Flags::xor", 
        "Glib::Enum", 
        "Glib::Char", 
        "Glib::UChar", 
        "Glib::Int", 
        "Glib::UInt", 
        "Glib::Long", 
        "Glib::ULong", 
        "Glib::Int64", 
        "Glib::UInt64", 
        "Glib::Float", 
        "Glib::Double", 
        "Glib::Boolean", 
        "Glib::GType", 
        "Glib::Scalar", 
        "Glib::Uint", 
        "Glib::SpawnFlags", 
        "### WOAH!  unhandled exception in a signal accumulator!", 
        "### this is really uncool, and for now i'm not even going to", 
        "### try to recover.", 
        "### signal accumulator functions must return two values on the perl stack:", 
        "### the (possibly) modified return_acc", 
        "### and a boolean value, true if emission should continue", 
        "### your sub returned %d value%s", 
        "### there's no reasonable way to recover from this.", 
        "### you must fix this code", 
        "%s->GET_PROPERTY didn't return exactly one value", 
        "cannot register alias %s for the unregistered type %s", 
        "%s is not registered with either GPerl or GLib", 
        "%s is neither enum nor flags type", 
        "FATAL: invalid enum %s value %s, expecting: %s", 
        "FATAL: could not convert value %d to enum type %s", 
        "FATAL: invalid %s value %s, expecting: %s", 
        "FATAL: invalid %s value %s, expecting a string scalar or an arrayref of strings", 
        "GFlags %s has no registered perl package, returning as array", 
        "package %s is not registered with the GLib type system as a flags type", 
        "cannot create Glib::Flags (only subclasses)", 
        "Usage: Glib::Type->register_flags (new_package, LIST)", 
        "   no values supplied", 
        "invalid flag name and value pair, no name provided", 
        "Usage: Glib::Type->register_enums (new_package, LIST)", 
        "   no values supplied", 
        "invalid enum name and value pair, no name provided", 
        "class, parent_package, new_package, ...", 
        "package %s has not been registered with GPerl", 
        "%s (%s) is not a descendent of Glib::Object (GObject)", 
        "signals must be a hash of signalname => signalspec pairs", 
        "properties must be an array of GParamSpecs", 
        "interfaces must be an array of package names", 
        "encountered undefined interface name", 
        "encountered unregistered interface %s", 
        "class, parent_class, new_class, ...", 
        "package %s is not registered with the GLib type system", 
        "sorry, don't know how to derive from a %s in Perl", 
        "GInterface %s is not registered with GPerl", 
        "problem looking up parent package name, gtype %d", 
        "Param description hash at index %d for %s does not contain key pspec", 
        "item %d (%s) in property list for %s is neither a Glib::ParamSpec nor a param description hash", 
        "signal %s already exists in %s", 
        "unknown or unregistered param type %s", 
        "unknown or unregistered return type %s", 
        "can't override class closure for unknown signal %s", 
        "value for signal key '%s' must be either a subroutine (the class closure override) or a reference to a hash describing the signal to create", 
        "Glib::Type::package_from_cname", 
        "gperl_type_base_init", 
        "gperl_type_instance_init", 
        "gperl_signal_class_closure_marshal", 
        "gperl_type_flags_get_values", 
        "gperl_type_enum_get_values", 
        "gperl_type_class", 
        "boxed_wrapper_destroy called on NULL pointer", 
        "internal nastiness: boxed wrapper contains NULL pointer", 
        "can't find boxed class registration info for %s", 
        "no function to wrap boxed objects of type %s / %s", 
        "no function to unwrap boxed objects of type %s / %s", 
        "expecting a reference to an array of strings for Glib::Strv", 
        "cannot make %s synonymous to the unregistered type %s", 
        "GType %s (%d) is not registered with gperl", 
        "variable not allowed to be undef where %s is wanted", 
        "internal problem: GType %s (%d) has not been registered with GPerl", 
        "expected a blessed reference", 
        "%s is not of type %s", 
        "DESTROY called on a bad value", 
        "%s::ISA", 
        "Glib::Boxed", 
        "class, data", 
        "bytes1, bytes2", 
        "GBoxed.c", 
        "Glib::Boxed::copy", 
        "Glib::Boxed::DESTROY", 
        "Glib::Bytes::new", 
        "Glib::Bytes::get_data", 
        "Glib::Bytes::get_size", 
        "Glib::Bytes::hash", 
        "Glib::Bytes::equal", 
        "Glib::Bytes::compare", 
        "Glib::String", 
        "Glib::GString", 
        "Glib::Strv", 
        "Glib::Bytes", 
        "class, threadsafe", 
        "Glib::Object", 
        "GObject.xs", 
        "Glib::Object::_Unregistered::", 
        "class_info", 
        "Glib::Object::_LazyLoader", 
        "bad pointer inside av", 
        "class, pointer, noinc=FALSE", 
        "class, ...", 
        "object, key", 
        "object, key, data", 
        "object_or_class_name, ...", 
        "object, property_name", 
        "object, ...", 
        "GObject.c", 
        "Glib::Object::CLONE", 
        "Glib::Object::set_threadsafe", 
        "Glib::Object::DESTROY", 
        "Glib::Object::new", 
        "Glib::Object::get", 
        "Glib::Object::get_property", 
        "Glib::Object::set", 
        "Glib::Object::set_property", 
        "Glib::Object::notify", 
        "Glib::Object::freeze_notify", 
        "Glib::Object::thaw_notify", 
        "Glib::Object::find_property", 
        "Glib::Object::list_properties", 
        "Glib::Object::set_data", 
        "Glib::Object::get_data", 
        "Glib::Object::get_pointer", 
        "Glib::Interface", 
        "Glib::InitiallyUnowned", 
        "Perl-wrapper-object", 
        "internal problem: gperl_object_package_from_type called before any classes were registered", 
        "internal inconsistency -- finishing lazy loading, but %s::ISA does not exist", 
        "WHOA!  parent %s of %s is not an object or interface!", 
        "interface type %s(%u) is not registered", 
        "asked to lazy-load %s, but that package is not registered and has no registered packages in its ancestry", 
        "type %s does not support property '%s'", 
        "internal problem: gperl_object_type_from_package called before any classes were registered", 
        "object %p is not really a GObject", 
        "%s is not registered with gperl as an object type", 
        "cannot create instance of abstract (non-instantiatable) type `%s'", 
        "new method expects name => value pairs (odd number of arguments detected)", 
        "could not get a reference to type class", 
        "INTERNAL: GType %s (%d) is not registered with GPerl!", 
        "%s is not a proper Glib::Object (it doesn't contain the right magic)", 
        "set_data only sets unsigned integers, use a key in the object hash for anything else", 
        "wha?  NULL object in list_properties", 
        "package %s is not registered with GPerl", 
        "Usage: Glib::Object::find_property (class, name)", 
        "Usage: Glib::Object::list_properties (class)", 
        "set method expects name => value pairs (odd number of arguments detected)", 
        "Glib::Object::new_from_pointer", 
        "Glib::Object::_LazyLoader::_load", 
        "gperl_new_object", 
        "gperl_object_package_from_type", 
        "[gperl_value_from_sv] FIXME: unhandled type - %d (%s fundamental for %s)", 
        "[gperl_sv_from_value] FIXME: unhandled type - %d (%s fundamental for %s)", 
        "GValue.c", 
        "s/^/***   /mg", 
        "*** %s:", 
        "***  ignoring", 
        "callback != NULL", 
        "GClosure.xs", 
        "class, func, data=NULL", 
        "class, tag", 
        "died in an exception handler", 
        "i != this", 
        "GClosure.c", 
        "n_params is %d but param_types is NULL in gperl_callback_new", 
        "error while collecting varargs parameters: %s", 
        "is your GPerlCallback created properly?  bailing out", 
        "failed to convert GValue to SV", 
        "callback returned more than one value in scalar context --- something really bad is happening", 
        "unhandled exception in callback", 
        "Glib::install_exception_handler", 
        "Glib::remove_exception_handler", 
        "gperl_run_exception_handlers", 
        "gperl_callback_invoke", 
        "gperl_closure_new_with_marshaller", 
        "instance, ...", 
        "object, handler_id", 
        "bad object in signal_query", 
        "instance, detailed_signal", 
        "instance, name, ...", 
        "instance, func, data=NULL", 
        "GSignal.xs", 
        "signal_name", 
        "detail", 
        "run_type", 
        "instance", 
        "signal_id", 
        "signal_flags", 
        "object_or_class_name, name", 
        "couldn't ref type %s", 
        "instance_type != 0", 
        "detailed_signal != NULL", 
        "GSignal.c", 
        "Glib::Object::signal_emit", 
        "Glib::Object::signal_query", 
        "Glib::Object::signal_connect", 
        "Glib::SignalFlags", 
        "Glib::ConnectFlags", 
        "could not find signal invocation hint for %s(0x%p)", 
        "incorrect number of parameters for signal %s, expected %d, got %d", 
        "Unknown signal %s for object of type %s", 
        "object_or_class_name, signal_name, hook_id", 
        "object_or_class_name, detailed_signal, hook_func, hook_data=NULL", 
        "Incorrect number of arguments for emission of signal %s in class %s; need %d but got %d", 
        "Couldn't convert value %s to type %s for parameter %d of signal %s on a %s", 
        "instance, detailed_signal, callback, data=NULL", 
        "Glib::Object::signal_get_invocation_hint", 
        "Glib::Object::signal_stop_emission_by_name", 
        "Glib::Object::signal_add_emission_hook", 
        "Glib::Object::signal_remove_emission_hook", 
        "Glib::Object::signal_connect_after", 
        "Glib::Object::signal_connect_swapped", 
        "Glib::Object::signal_handler_block", 
        "Glib::Object::signal_handler_unblock", 
        "Glib::Object::signal_handler_disconnect", 
        "Glib::Object::signal_handler_is_connected", 
        "Glib::Object::signal_handlers_block_by_func", 
        "Glib::Object::signal_handlers_disconnect_by_func", 
        "Glib::Object::signal_handlers_unblock_by_func", 
        "Glib::Object::signal_chain_from_overridden", 
        "XS_Glib__Object_signal_handlers_block_by_func", 
        "gperl_signal_set_marshaller_for", 
        "class, pid, callback, data=NULL, priority=G_PRIORITY_DEFAULT", 
        "class, fd, condition, callback, data=NULL, priority=G_PRIORITY_DEFAULT", 
        "class, callback, data=NULL, priority=G_PRIORITY_DEFAULT_IDLE", 
        "class, interval, callback, data=NULL, priority=G_PRIORITY_DEFAULT", 
        "class, context=NULL, is_running=FALSE", 
        "Glib::MainContext", 
        "mainloop", 
        "Glib::MainLoop", 
        "context, may_block", 
        "maincontext", 
        "GMainLoop.c", 
        "Glib::main_depth", 
        "Glib::MainContext::new", 
        "Glib::MainContext::DESTROY", 
        "Glib::MainContext::default", 
        "Glib::MainContext::iteration", 
        "Glib::MainContext::pending", 
        "Glib::MainContext::is_owner", 
        "Glib::MainLoop::new", 
        "Glib::MainLoop::DESTROY", 
        "Glib::MainLoop::run", 
        "Glib::MainLoop::quit", 
        "Glib::MainLoop::is_running", 
        "Glib::MainLoop::get_context", 
        "Glib::Source::remove", 
        "Glib::Timeout::add", 
        "Glib::Timeout::add_seconds", 
        "Glib::Idle::add", 
        "Glib::IO::add_watch", 
        "Glib::Child::watch_add", 
        "Glib::IOCondition", 
        "can't unwrap GIOChannels -- how'd you get one in perl?!?", 
        " you appear to have found a bug in gtk2-perl-xs.  congratulations.", 
        " please report this bug to gtk-perl-list@gnome.org", 
        " croaking ", 
        "GIOChannel.c", 
        "Glib::IO::Channel", 
        "param_package_by_type != NULL", 
        "owner_type", 
        "pspec_gtype", 
        "pspec_flags", 
        "pspec_enum", 
        "GParamSpec.xs", 
        "pspec, value1, value2", 
        "pspec, value", 
        "class, name, overridden", 
        "GParamSpec.c", 
        "Glib::ParamSpec::DESTROY", 
        "Glib::ParamSpec::get_name", 
        "Glib::ParamSpec::get_nick", 
        "Glib::ParamSpec::get_blurb", 
        "Glib::ParamSpec::IV", 
        "Glib::ParamSpec::char", 
        "Glib::ParamSpec::int", 
        "Glib::ParamSpec::long", 
        "Glib::ParamSpec::int64", 
        "Glib::ParamSpec::UV", 
        "Glib::ParamSpec::uchar", 
        "Glib::ParamSpec::uint", 
        "Glib::ParamSpec::ulong", 
        "Glib::ParamSpec::uint64", 
        "Glib::ParamSpec::boolean", 
        "Glib::ParamSpec::unichar", 
        "Glib::ParamSpec::enum", 
        "Glib::ParamSpec::flags", 
        "Glib::ParamSpec::double", 
        "Glib::ParamSpec::float", 
        "Glib::ParamSpec::string", 
        "Glib::ParamSpec::boxed", 
        "Glib::ParamSpec::object", 
        "Glib::ParamSpec::param_spec", 
        "Glib::ParamSpec::scalar", 
        "Glib::ParamSpec::override", 
        "Glib::ParamSpec::gtype", 
        "Glib::ParamSpec::get_flags", 
        "Glib::ParamSpec::values_cmp", 
        "Glib::Param::Int::get_minimum", 
        "Glib::Param::Int::get_maximum", 
        "Glib::ParamFlags", 
        "Glib::Param::Char", 
        "Glib::Param::UChar", 
        "Glib::Param::Unichar", 
        "Glib::Param::Boolean", 
        "Glib::Param::Int", 
        "Glib::Param::UInt", 
        "Glib::Param::Long", 
        "Glib::Param::ULong", 
        "Glib::Param::Int64", 
        "Glib::Param::UInt64", 
        "Glib::Param::Enum", 
        "Glib::Param::Flags", 
        "Glib::Param::Float", 
        "Glib::Param::Double", 
        "Glib::Param::String", 
        "Glib::Param::Param", 
        "Glib::Param::Boxed", 
        "Glib::Param::Pointer", 
        "Glib::Param::ValueArray", 
        "Glib::Param::Object", 
        "Glib::Param::Override", 
        "Glib::Param::GType", 
        "unhandled paramspec type %s, falling back to %s", 
        "class, name, nick, blurb, is_a_type, flags", 
        "class, name, nick, blurb, flags", 
        "class, name, nick, blurb, package, flags", 
        "type %s is not registered with Glib-Perl", 
        "class, name, nick, blurb, default_value, flags", 
        "class, name, nick, blurb, minimum, maximum, default_value, flags", 
        "class, name, nick, blurb, flags_type, default_value, flags", 
        "package %s is not registered as an flags type", 
        "class, name, nick, blurb, enum_type, default_value, flags", 
        "package %s is not registered as an enum type", 
        "Glib::ParamSpec::get_redirect_target", 
        "Glib::ParamSpec::get_owner_type", 
        "Glib::ParamSpec::get_value_type", 
        "Glib::ParamSpec::get_default_value", 
        "Glib::ParamSpec::value_validate", 
        "Glib::Param::Char::get_minimum", 
        "Glib::Param::Long::get_minimum", 
        "Glib::Param::Char::get_maximum", 
        "Glib::Param::Long::get_maximum", 
        "Glib::Param::UChar::get_minimum", 
        "Glib::Param::UInt::get_minimum", 
        "Glib::Param::ULong::get_minimum", 
        "Glib::Param::UChar::get_maximum", 
        "Glib::Param::UInt::get_maximum", 
        "Glib::Param::ULong::get_maximum", 
        "Glib::Param::Int64::get_minimum", 
        "Glib::Param::Int64::get_maximum", 
        "Glib::Param::UInt64::get_minimum", 
        "Glib::Param::UInt64::get_maximum", 
        "Glib::Param::Double::get_minimum", 
        "Glib::Param::Float::get_minimum", 
        "Glib::Param::Double::get_maximum", 
        "Glib::Param::Float::get_maximum", 
        "Glib::Param::Double::get_epsilon", 
        "Glib::Param::Float::get_epsilon", 
        "Glib::Param::Enum::get_enum_class", 
        "Glib::Param::Flags::get_flags_class", 
        "Glib::Param::GType::get_is_a_type", 
        "XS_Glib__ParamSpec_get_value_type", 
        "XS_Glib__Param__Char_get_minimum", 
        "XS_Glib__Param__Char_get_maximum", 
        "XS_Glib__Param__UChar_get_minimum", 
        "XS_Glib__Param__UChar_get_maximum", 
        "XS_Glib__Param__Float_get_minimum", 
        "XS_Glib__Param__Float_get_maximum", 
        "XS_Glib__Param__Float_get_epsilon", 
        "gperl_param_spec_type_from_package", 
        "gperl_param_spec_package_from_type", 
        "Glib::KeyFile", 
        "key_file, group_name", 
        "key_file, group_name, key", 
        "GKeyFile.xs", 
        "key_file", 
        "key_file, file, flags", 
        "key_file, file, flags, ...", 
        "key_file, buf, flags", 
        "key_file, separator", 
        "GKeyFile.c", 
        "Glib::KeyFile::DESTROY", 
        "Glib::KeyFile::new", 
        "Glib::KeyFile::load_from_file", 
        "Glib::KeyFile::load_from_data", 
        "Glib::KeyFile::load_from_dirs", 
        "Glib::KeyFile::to_data", 
        "Glib::KeyFile::get_groups", 
        "Glib::KeyFile::get_keys", 
        "Glib::KeyFile::has_group", 
        "Glib::KeyFile::has_key", 
        "Glib::KeyFile::get_value", 
        "Glib::KeyFile::set_value", 
        "Glib::KeyFile::set_boolean", 
        "Glib::KeyFile::set_integer", 
        "Glib::KeyFile::set_string", 
        "Glib::KeyFile::set_double", 
        "Glib::KeyFile::get_boolean", 
        "Glib::KeyFile::get_integer", 
        "Glib::KeyFile::get_string", 
        "Glib::KeyFile::get_double", 
        "Glib::KeyFile::set_comment", 
        "Glib::KeyFile::get_comment", 
        "Glib::KeyFile::remove_comment", 
        "Glib::KeyFile::remove_key", 
        "Glib::KeyFile::remove_group", 
        "Glib::KeyFileFlags", 
        "key_file, group_name=NULL, key=NULL", 
        "key_file, group_name, key, comment", 
        "key_file, group_name, key, ...", 
        "key_file, group_name, key, locale, ...", 
        "key_file, group_name, key, locale", 
        "key_file, group_name, key, locale, string", 
        "key_file, group_name, key, locale=NULL", 
        "key_file, group_name, key, value", 
        "Glib::KeyFile::set_list_separator", 
        "Glib::KeyFile::load_from_data_dirs", 
        "Glib::KeyFile::get_start_group", 
        "Glib::KeyFile::get_locale_string", 
        "Glib::KeyFile::set_locale_string", 
        "Glib::KeyFile::get_locale_string_list", 
        "Glib::KeyFile::set_locale_string_list", 
        "Glib::KeyFile::get_boolean_list", 
        "Glib::KeyFile::get_integer_list", 
        "Glib::KeyFile::get_string_list", 
        "Glib::KeyFile::get_double_list", 
        "Glib::KeyFile::set_boolean_list", 
        "Glib::KeyFile::set_integer_list", 
        "Glib::KeyFile::set_string_list", 
        "Glib::KeyFile::set_double_list", 
        "XS_Glib__KeyFile_get_boolean", 
        "copying Glib::OptionContext and Glib::OptionGroup isn't supported", 
        "unhandled arg type G_OPTION_ARG_CALLBACK encountered", 
        "option entries must be an array reference containing hash references", 
        "an option entry must be either a hash or an array reference", 
        "an option entry array reference must contain four values: long_name, short_name, arg_type, and arg_value", 
        "in an option entry, the fields long_name, arg_type, and arg_value must be specified", 
        "encountered non-reference variable for the arg_value field", 
        "context, entries, translation_domain", 
        "even number of arguments expected: key => value, ...", 
        "unknown key `%s", 
        " encountered; ignoring", 
        "Glib::OptionContext::set_help_enabled", 
        "Glib::OptionContext::get_help_enabled", 
        "Glib::OptionContext::set_ignore_unknown_options", 
        "Glib::OptionContext::get_ignore_unknown_options", 
        "Glib::OptionContext::add_main_entries", 
        "Glib::OptionContext::add_group", 
        "Glib::OptionContext::set_main_group", 
        "Glib::OptionContext::get_main_group", 
        "Glib::OptionGroup::set_translate_func", 
        "Glib::OptionGroup::set_translation_domain", 
        "long_name", 
        "short_name", 
        "arg_description", 
        "arg_type", 
        "arg_value", 
        "GOptionContext", 
        "context, ignore_unknown", 
        "context, help_enabled", 
        "class, parameter_string", 
        "GOptionGroup", 
        "group, domain", 
        "group, func, data=NULL", 
        "help_description", 
        "entries", 
        "context, group", 
        "GOption.c", 
        "Glib::OptionContext::new", 
        "Glib::OptionContext::parse", 
        "Glib::OptionGroup::new", 
        "Glib::OptionContext", 
        "Glib::OptionGroup", 
        "Glib::OptionArg", 
        "Glib::OptionFlags", 
        "Glib::BookmarkFile", 
        "bookmark_file, uri, value", 
        "GBookmarkFile.xs", 
        "bookmark_file, uri", 
        "bookmark_file, uri, name", 
        "bookmark_file, uri, group", 
        "bookmark_file, uri, ...", 
        "bookmark_file, uri, mime_type", 
        "bookmark_file, uri, title", 
        "bookmark_file", 
        "bookmark_file, file", 
        "bookmark_file, buf", 
        "GBookmarkFile.c", 
        "Glib::BookmarkFile::DESTROY", 
        "Glib::BookmarkFile::new", 
        "Glib::BookmarkFile::to_data", 
        "Glib::BookmarkFile::to_file", 
        "Glib::BookmarkFile::has_item", 
        "Glib::BookmarkFile::move_item", 
        "Glib::BookmarkFile::get_size", 
        "Glib::BookmarkFile::get_uris", 
        "Glib::BookmarkFile::set_title", 
        "Glib::BookmarkFile::get_title", 
        "Glib::BookmarkFile::add_group", 
        "Glib::BookmarkFile::has_group", 
        "Glib::BookmarkFile::set_icon", 
        "Glib::BookmarkFile::get_icon", 
        "Glib::BookmarkFile::get_added", 
        "Glib::BookmarkFile::set_added", 
        "bookmark_file, uri, href, mime_type", 
        "bookmark_file, uri, is_private", 
        "bookmark_file, uri, name, exec, count, stamp", 
        "bookmark_file, uri, name, exec", 
        "bookmark_file, uri, description", 
        "bookmark_file, old_uri, new_uri", 
        "Glib::BookmarkFile::load_from_file", 
        "Glib::BookmarkFile::load_from_data", 
        "Glib::BookmarkFile::load_from_data_dirs", 
        "Glib::BookmarkFile::remove_item", 
        "Glib::BookmarkFile::set_description", 
        "Glib::BookmarkFile::get_description", 
        "Glib::BookmarkFile::set_mime_type", 
        "Glib::BookmarkFile::get_mime_type", 
        "Glib::BookmarkFile::set_groups", 
        "Glib::BookmarkFile::get_groups", 
        "Glib::BookmarkFile::remove_group", 
        "Glib::BookmarkFile::add_application", 
        "Glib::BookmarkFile::has_application", 
        "Glib::BookmarkFile::remove_application", 
        "Glib::BookmarkFile::get_applications", 
        "Glib::BookmarkFile::set_app_info", 
        "Glib::BookmarkFile::get_app_info", 
        "Glib::BookmarkFile::set_is_private", 
        "Glib::BookmarkFile::get_is_private", 
        "Glib::BookmarkFile::get_modified", 
        "Glib::BookmarkFile::get_visited", 
        "Glib::BookmarkFile::set_modified", 
        "Glib::BookmarkFile::set_visited", 
        "XS_Glib__BookmarkFile_get_added", 
        "XS_Glib__BookmarkFile_set_added", 
        "Glib::Variant", 
        "class, string", 
        "class, signature", 
        "class, object_path", 
        "class, value", 
        "one, two", 
        "value, type_annotate", 
        "value, index_", 
        "class, key, value", 
        "class, children", 
        "class, type_string", 
        "class, items", 
        "class, element", 
        "type, supertype", 
        "type1, type2", 
        "type, text", 
        "class, child_type, children", 
        "class, child_type, child", 
        "value, type", 
        "GVariant.c", 
        "Glib::Variant::get_type", 
        "Glib::Variant::is_of_type", 
        "Glib::Variant::is_container", 
        "Glib::Variant::classify", 
        "Glib::Variant::new_boolean", 
        "Glib::Variant::new_byte", 
        "Glib::Variant::new_int16", 
        "Glib::Variant::new_uint16", 
        "Glib::Variant::new_int32", 
        "Glib::Variant::new_uint32", 
        "Glib::Variant::new_int64", 
        "Glib::Variant::new_uint64", 
        "Glib::Variant::new_handle", 
        "Glib::Variant::new_double", 
        "Glib::Variant::new_string", 
        "Glib::Variant::is_object_path", 
        "Glib::Variant::new_signature", 
        "Glib::Variant::is_signature", 
        "Glib::Variant::new_variant", 
        "Glib::Variant::new_bytestring", 
        "Glib::Variant::get_boolean", 
        "Glib::Variant::get_byte", 
        "Glib::Variant::get_int16", 
        "Glib::Variant::get_uint16", 
        "Glib::Variant::get_int32", 
        "Glib::Variant::get_uint32", 
        "Glib::Variant::get_int64", 
        "Glib::Variant::get_uint64", 
        "Glib::Variant::get_handle", 
        "Glib::Variant::get_double", 
        "Glib::Variant::get_variant", 
        "Glib::Variant::get_string", 
        "Glib::Variant::get_bytestring", 
        "Glib::Variant::new_maybe", 
        "Glib::Variant::new_array", 
        "Glib::Variant::new_tuple", 
        "Glib::Variant::new_dict_entry", 
        "Glib::Variant::get_maybe", 
        "Glib::Variant::n_children", 
        "Glib::Variant::lookup_value", 
        "Glib::Variant::get_size", 
        "Glib::Variant::print", 
        "Glib::Variant::hash", 
        "Glib::Variant::equal", 
        "Glib::Variant::compare", 
        "Glib::Variant::is_normal_form", 
        "Glib::Variant::byteswap", 
        "Glib::Variant::DESTROY", 
        "Glib::Variant::parse", 
        "Glib::VariantType::new", 
        "Glib::VariantType::get_string", 
        "Glib::VariantType::is_basic", 
        "Glib::VariantType::is_maybe", 
        "Glib::VariantType::is_array", 
        "Glib::VariantType::is_tuple", 
        "Glib::VariantType::is_variant", 
        "Glib::VariantType::hash", 
        "Glib::VariantType::equal", 
        "Glib::VariantType::element", 
        "Glib::VariantType::first", 
        "Glib::VariantType::next", 
        "Glib::VariantType::n_items", 
        "Glib::VariantType::key", 
        "Glib::VariantType::value", 
        "Glib::VariantType::new_array", 
        "Glib::VariantType::new_maybe", 
        "Glib::VariantType::new_tuple", 
        "Glib::VariantType", 
        "Could not find type string at the start of '%s'", 
        "Expected an array reference for 'children'", 
        "Expected an array reference for 'items'", 
        "dictionary, key, expected_type", 
        "Glib::Variant::get_type_string", 
        "Glib::Variant::new_object_path", 
        "Glib::Variant::get_child_value", 
        "Glib::Variant::get_normal_form", 
        "Glib::VariantType::string_is_valid", 
        "Glib::VariantType::string_scan", 
        "Glib::VariantType::is_definite", 
        "Glib::VariantType::is_container", 
        "Glib::VariantType::is_dict_entry", 
        "Glib::VariantType::is_subtype_of", 
        "Glib::VariantType::new_dict_entry", 
        "GConnectFlags", 
        "GKeyFileFlags", 
        "GLogLevelFlags", 
        "GOptionArg", 
        "GOptionFlags", 
        "GPerlParamFlags", 
        "GSignalFlags", 
        "GSpawnFlags", 
        "GUserDirectory", 
        "GConvertError", 
        "GFileError", 
        "GIOError", 
        "GIOChannelError", 
        "GKeyFileError", 
        "GBookmarkFileError", 
        "GMarkupError", 
        "GShellError", 
        "GSpawnError", 
        "GThreadError", 
        "GVariantParseError", 
        "G_VARIANT_PARSE_ERROR_FAILED", 
        "failed", 
        "basic-type-expected", 
        "cannot-infer-type", 
        "definite-type-expected", 
        "input-not-at-end", 
        "invalid-character", 
        "invalid-format-string", 
        "invalid-object-path", 
        "invalid-signature", 
        "invalid-type-string", 
        "no-common-type", 
        "number-out-of-range", 
        "number-too-big", 
        "type-error", 
        "unexpected-token", 
        "unknown-keyword", 
        "unterminated-string-constant", 
        "value-expected", 
        "G_USER_DIRECTORY_DESKTOP", 
        "desktop", 
        "G_USER_DIRECTORY_DOCUMENTS", 
        "documents", 
        "G_USER_DIRECTORY_DOWNLOAD", 
        "download", 
        "G_USER_DIRECTORY_MUSIC", 
        "G_USER_DIRECTORY_PICTURES", 
        "pictures", 
        "G_USER_DIRECTORY_PUBLIC_SHARE", 
        "public-share", 
        "G_USER_DIRECTORY_TEMPLATES", 
        "templates", 
        "G_USER_DIRECTORY_VIDEOS", 
        "videos", 
        "G_SPAWN_DEFAULT", 
        "leave-descriptors-open", 
        "G_SPAWN_DO_NOT_REAP_CHILD", 
        "do-not-reap-child", 
        "G_SPAWN_SEARCH_PATH", 
        "search-path", 
        "G_SPAWN_STDOUT_TO_DEV_NULL", 
        "stdout-to-dev-null", 
        "G_SPAWN_STDERR_TO_DEV_NULL", 
        "stderr-to-dev-null", 
        "G_SPAWN_CHILD_INHERITS_STDIN", 
        "child-inherits-stdin", 
        "G_SPAWN_FILE_AND_ARGV_ZERO", 
        "file-and-argv-zero", 
        "G_SPAWN_SEARCH_PATH_FROM_ENVP", 
        "search-path-from-envp", 
        "G_SIGNAL_RUN_FIRST", 
        "run-first", 
        "G_SIGNAL_RUN_LAST", 
        "run-last", 
        "G_SIGNAL_RUN_CLEANUP", 
        "run-cleanup", 
        "G_SIGNAL_NO_RECURSE", 
        "no-recurse", 
        "G_SIGNAL_DETAILED", 
        "detailed", 
        "G_SIGNAL_ACTION", 
        "action", 
        "G_SIGNAL_NO_HOOKS", 
        "no-hooks", 
        "G_PARAM_READABLE", 
        "readable", 
        "G_PARAM_WRITABLE", 
        "writable", 
        "G_PARAM_CONSTRUCT", 
        "construct", 
        "G_PARAM_CONSTRUCT_ONLY", 
        "construct-only", 
        "G_PARAM_LAX_VALIDATION", 
        "lax-validation", 
        "G_PARAM_PRIVATE", 
        "private", 
        "G_OPTION_FLAG_HIDDEN", 
        "hidden", 
        "G_OPTION_FLAG_IN_MAIN", 
        "in-main", 
        "G_OPTION_FLAG_REVERSE", 
        "reverse", 
        "G_OPTION_FLAG_NO_ARG", 
        "no-arg", 
        "G_OPTION_FLAG_FILENAME", 
        "G_OPTION_FLAG_OPTIONAL_ARG", 
        "optional-arg", 
        "G_OPTION_FLAG_NOALIAS", 
        "noalias", 
        "G_OPTION_ARG_NONE", 
        "G_OPTION_ARG_STRING", 
        "G_OPTION_ARG_INT", 
        "G_OPTION_ARG_CALLBACK", 
        "callback", 
        "G_OPTION_ARG_FILENAME", 
        "G_OPTION_ARG_STRING_ARRAY", 
        "string-array", 
        "G_OPTION_ARG_FILENAME_ARRAY", 
        "filename-array", 
        "G_OPTION_ARG_DOUBLE", 
        "G_OPTION_ARG_INT64", 
        "G_LOG_FLAG_RECURSION", 
        "recursion", 
        "G_LOG_FLAG_FATAL", 
        "G_LOG_LEVEL_ERROR", 
        "G_LOG_LEVEL_CRITICAL", 
        "G_LOG_LEVEL_WARNING", 
        "G_LOG_LEVEL_MESSAGE", 
        "G_LOG_LEVEL_INFO", 
        "G_LOG_LEVEL_DEBUG", 
        "G_LOG_FATAL_MASK", 
        "fatal-mask", 
        "G_KEY_FILE_NONE", 
        "G_KEY_FILE_KEEP_COMMENTS", 
        "keep-comments", 
        "G_KEY_FILE_KEEP_TRANSLATIONS", 
        "keep-translations", 
        "G_CONNECT_AFTER", 
        "G_CONNECT_SWAPPED", 
        "swapped", 
        "G_THREAD_ERROR_AGAIN", 
        "G_SPAWN_ERROR_FORK", 
        "G_SPAWN_ERROR_READ", 
        "G_SPAWN_ERROR_CHDIR", 
        "G_SPAWN_ERROR_ACCES", 
        "G_SPAWN_ERROR_PERM", 
        "G_SPAWN_ERROR_2BIG", 
        "G_SPAWN_ERROR_NOEXEC", 
        "noexec", 
        "G_SPAWN_ERROR_NAMETOOLONG", 
        "nametoolong", 
        "G_SPAWN_ERROR_NOENT", 
        "G_SPAWN_ERROR_NOMEM", 
        "G_SPAWN_ERROR_NOTDIR", 
        "notdir", 
        "G_SPAWN_ERROR_LOOP", 
        "G_SPAWN_ERROR_TXTBUSY", 
        "txtbusy", 
        "G_SPAWN_ERROR_IO", 
        "G_SPAWN_ERROR_NFILE", 
        "G_SPAWN_ERROR_MFILE", 
        "G_SPAWN_ERROR_INVAL", 
        "G_SPAWN_ERROR_ISDIR", 
        "G_SPAWN_ERROR_LIBBAD", 
        "libbad", 
        "G_SPAWN_ERROR_FAILED", 
        "G_SHELL_ERROR_BAD_QUOTING", 
        "bad-quoting", 
        "G_SHELL_ERROR_EMPTY_STRING", 
        "empty-string", 
        "G_SHELL_ERROR_FAILED", 
        "G_MARKUP_ERROR_BAD_UTF8", 
        "bad-utf8", 
        "G_MARKUP_ERROR_EMPTY", 
        "G_MARKUP_ERROR_PARSE", 
        "unknown-element", 
        "unknown-attribute", 
        "invalid-content", 
        "invalid-uri", 
        "invalid-value", 
        "not-registered", 
        "uri-not-found", 
        "unknown-encoding", 
        "G_BOOKMARK_FILE_ERROR_WRITE", 
        "unknwon-encoding", 
        "G_KEY_FILE_ERROR_PARSE", 
        "G_KEY_FILE_ERROR_NOT_FOUND", 
        "key-not-found", 
        "group-not-found", 
        "G_IO_CHANNEL_ERROR_FBIG", 
        "G_IO_CHANNEL_ERROR_INVAL", 
        "G_IO_CHANNEL_ERROR_IO", 
        "G_IO_CHANNEL_ERROR_ISDIR", 
        "G_IO_CHANNEL_ERROR_NOSPC", 
        "G_IO_CHANNEL_ERROR_NXIO", 
        "G_IO_CHANNEL_ERROR_OVERFLOW", 
        "overflow", 
        "G_IO_CHANNEL_ERROR_PIPE", 
        "G_IO_CHANNEL_ERROR_FAILED", 
        "G_IO_ERROR_NONE", 
        "G_IO_ERROR_AGAIN", 
        "G_IO_ERROR_INVAL", 
        "G_IO_ERROR_UNKNOWN", 
        "G_FILE_ERROR_EXIST", 
        "G_FILE_ERROR_ISDIR", 
        "G_FILE_ERROR_ACCES", 
        "G_FILE_ERROR_NAMETOOLONG", 
        "G_FILE_ERROR_NOENT", 
        "G_FILE_ERROR_NOTDIR", 
        "G_FILE_ERROR_NXIO", 
        "G_FILE_ERROR_NODEV", 
        "G_FILE_ERROR_ROFS", 
        "G_FILE_ERROR_TXTBSY", 
        "txtbsy", 
        "G_FILE_ERROR_FAULT", 
        "G_FILE_ERROR_LOOP", 
        "G_FILE_ERROR_NOSPC", 
        "G_FILE_ERROR_NOMEM", 
        "G_FILE_ERROR_MFILE", 
        "G_FILE_ERROR_NFILE", 
        "G_FILE_ERROR_BADF", 
        "G_FILE_ERROR_INVAL", 
        "G_FILE_ERROR_PIPE", 
        "G_FILE_ERROR_AGAIN", 
        "G_FILE_ERROR_INTR", 
        "G_FILE_ERROR_IO", 
        "G_FILE_ERROR_PERM", 
        "G_FILE_ERROR_FAILED", 
        "G_CONVERT_ERROR_NO_CONVERSION", 
        "no-conversion", 
        "illegal-sequence", 
        "G_CONVERT_ERROR_FAILED", 
        "G_CONVERT_ERROR_PARTIAL_INPUT", 
        "partial-input", 
        "G_CONVERT_ERROR_BAD_URI", 
        "bad-uri", 
        "not-absolute-path", 
        "G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED", 
        "G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE", 
        "G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED", 
        "G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END", 
        "G_VARIANT_PARSE_ERROR_INVALID_CHARACTER", 
        "G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING", 
        "G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH", 
        "G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE", 
        "G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING", 
        "G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE", 
        "G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE", 
        "G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG", 
        "G_VARIANT_PARSE_ERROR_TYPE_ERROR", 
        "G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN", 
        "G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD", 
        "G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT", 
        "G_VARIANT_PARSE_ERROR_VALUE_EXPECTED", 
        "G_SPAWN_LEAVE_DESCRIPTORS_OPEN", 
        "G_MARKUP_ERROR_UNKNOWN_ELEMENT", 
        "G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE", 
        "G_MARKUP_ERROR_INVALID_CONTENT", 
        "G_BOOKMARK_FILE_ERROR_INVALID_URI", 
        "G_BOOKMARK_FILE_ERROR_INVALID_VALUE", 
        "G_BOOKMARK_FILE_ERROR_APP_NOT_REGISTERED", 
        "G_BOOKMARK_FILE_ERROR_URI_NOT_FOUND", 
        "G_BOOKMARK_FILE_ERROR_UNKNOWN_ENCODING", 
        "G_BOOKMARK_FILE_ERROR_FILE_NOT_FOUND", 
        "G_KEY_FILE_ERROR_UNKNOWN_ENCODING", 
        "G_KEY_FILE_ERROR_KEY_NOT_FOUND", 
        "G_KEY_FILE_ERROR_GROUP_NOT_FOUND", 
        "G_KEY_FILE_ERROR_INVALID_VALUE", 
        "G_CONVERT_ERROR_ILLEGAL_SEQUENCE", 
        "G_CONVERT_ERROR_NOT_ABSOLUTE_PATH", 
        "9f65b0f54be9919f3dc0dcf182bfe4ddb9667f.debug", 
        ".shstrtab", 
        ".note.gnu.build-id", 
        ".gnu.hash", 
        ".dynsym", 
        ".dynstr", 
        ".gnu.version", 
        ".gnu.version_r", 
        ".rel.dyn", 
        ".rel.plt", 
        ".plt.got", 
        ".rodata", 
        ".eh_frame_hdr", 
        ".eh_frame", 
        ".init_array", 
        ".fini_array", 
        ".data.rel.ro", 
        ".dynamic", 
        ".gnu_debuglink"
    ], 
    "metadata": {
        "output": {
            "pcap": {
                "basename": "dump.pcap", 
                "sha256": "704e5e5b3234433c01fcfd1b20a306e77e985038120492dc53965c3edd38a4ea", 
                "dirname": ""
            }
        }
    }
}